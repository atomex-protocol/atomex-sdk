import type { Transaction } from '../blockchain/models/index';
import type { Currency, Side } from '../common/index';
import type { ExchangeSymbol, Order, OrderBook, OrderCurrency, Quote } from '../exchange/index';
import type { Swap, SwapParticipantTrade } from '../swaps/index';
import type { OrderBookDto, OrderDto, QuoteDto, SwapDto, SymbolDto, TradeDto, TransactionDto, WebSocketOrderBookEntryDto, WebSocketOrderDataDto } from './dtos';
export declare const getQuoteBaseCurrenciesBySymbol: (symbol: string) => [quoteCurrency: string, baseCurrency: string];
export declare const getFromToCurrencies: (symbol: string, qty: number, price: number, side: Side) => [from: OrderCurrency, to: OrderCurrency];
export declare const findSymbolAndSide: (symbols: ExchangeSymbol[], from: Currency['id'], to: Currency['id']) => [symbol: string, side: Side];
export declare const mapQuoteDtosToQuotes: (quoteDtos: QuoteDto[]) => Quote[];
export declare const mapQuoteDtoToQuote: (quoteDto: QuoteDto) => Quote;
export declare const mapSymbolDtosToSymbols: (symbolDtos: SymbolDto[]) => ExchangeSymbol[];
export declare const mapOrderBookDtoToOrderBook: (orderBookDto: OrderBookDto) => OrderBook;
export declare const mapWebSocketOrderBookEntryDtoToOrderBook: (orderBookEntryDtos: WebSocketOrderBookEntryDto[]) => OrderBook;
export declare const mapOrderDtoToOrder: (orderDto: OrderDto) => Order;
export declare const mapOrderDtosToOrders: (orderDtos: OrderDto[]) => Order[];
export declare const mapTransactionDtosToTransactions: (transactionDtos: TransactionDto[]) => Transaction[];
export declare const mapSwapDtoToSwap: (swapDto: SwapDto) => Swap;
export declare const mapTradeDtosToTrades: (tradeDtos: TradeDto[]) => SwapParticipantTrade[];
export declare const mapSwapDtosToSwaps: (swapDtos: SwapDto[]) => Swap[];
export declare const mapWebSocketOrderDtoToOrder: (orderDto: WebSocketOrderDataDto) => Order;
