var Yt=Object.defineProperty,_r=Object.defineProperties;var Fr=Object.getOwnPropertyDescriptors;var Jt=Object.getOwnPropertySymbols;var Dr=Object.prototype.hasOwnProperty,Wr=Object.prototype.propertyIsEnumerable;var kt=(o,e,t)=>e in o?Yt(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,f=(o,e)=>{for(var t in e||(e={}))Dr.call(e,t)&&kt(o,t,e[t]);if(Jt)for(var t of Jt(e))Wr.call(e,t)&&kt(o,t,e[t]);return o},w=(o,e)=>_r(o,Fr(e));var R=(o,e)=>{for(var t in e)Yt(o,t,{get:e[t],enumerable:!0})};var s=(o,e,t)=>(kt(o,typeof e!="symbol"?e+"":e,t),t);import Ot from"bignumber.js";var P={};R(P,{convertFromAndToCurrenciesToSymbolAndSide:()=>Mt,convertSymbolAndSideToFromAndToCurrencies:()=>Ct,convertSymbolAndSideToFromAndToSymbolCurrencies:()=>Xr,getBaseQuoteCurrenciesBySymbol:()=>Tt});import D from"bignumber.js";var v={};R(v,{hexStringToObject:()=>Ur,hexStringToString:()=>rr,hexStringToUint8Array:()=>er,numberToTokensAmount:()=>Z,objectToHexString:()=>qr,stringToHexString:()=>tr,toFixedBigNumber:()=>ye,tokensAmountToNat:()=>Lr,uint8ArrayToHexString:()=>st});import _e from"bignumber.js";import{Buffer as $}from"buffer";var er=o=>{var t;let e=(t=o.match(/[\da-f]{2}/gi))==null?void 0:t.map(r=>parseInt(r,16));return new Uint8Array(e)},st=o=>$.from(o).toString("hex"),tr=o=>$.from(o,"utf8").toString("hex"),rr=o=>$.from(er(o)).toString("utf8"),qr=o=>tr(JSON.stringify(o)),Ur=o=>{try{return JSON.parse(rr(o))}catch(e){return null}},Lr=(o,e)=>new _e(o).multipliedBy(10**e).integerValue(),Z=(o,e)=>new _e(o).integerValue().div(10**e),ye=(o,e,t)=>(o=_e.isBigNumber(o)?o:new _e(o),new _e(o.toFixed(e,t)));var ge={};R(ge,{isArray:()=>Kr,isPlainObject:()=>Qr,isReadonlyArray:()=>Hr});import $r from"lodash.isplainobject";var Kr=o=>Array.isArray(o),Hr=o=>Array.isArray(o),Qr=o=>$r(o);var N={};R(N,{ensureNetworksAreSame:()=>Gr});var Gr=(o,e)=>{if((typeof o=="string"?o:o.atomexNetwork)!==(typeof e=="string"?e:e.atomexNetwork))throw new Error("Networks are different")};var Fe={};R(Fe,{capitalize:()=>jr,padEnd:()=>Zr,padStart:()=>Vr});var jr=o=>{var e;return o&&((e=o[0])==null?void 0:e.toLocaleUpperCase())+o.slice(1)},or=(o,e,t,r=" ")=>{if(String.prototype.padStart!==void 0)return o.padStart(t,r);let n=o.length;if(t<=n||r=="")return o;let i=t-n,a=r.repeat(Math.ceil(i/r.length));return a.length>i&&(a=a.slice(0,i)),e?a+o:o+a},Vr=(o,e,t=" ")=>String.prototype.padStart!==void 0?o.padStart(e,t):or(o,!0,e,t),Zr=(o,e,t=" ")=>String.prototype.padEnd!==void 0?o.padEnd(e,t):or(o,!1,e,t);var yn=o=>new Promise(e=>setTimeout(e,o)),At=o=>Math.min(o,2147483647);var Tt=o=>{let e=o.split("/",2);return[e[0]||"",e[1]||""]},Xr=(o,e,t,r,n=!0)=>{let i=v.toFixedBigNumber(r,o.decimals.price,D.ROUND_FLOOR),[a,c]=Tt(o.name),m=e==="Buy",d,l;n?(d=v.toFixedBigNumber(t,o.decimals.baseCurrency,D.ROUND_FLOOR),l=v.toFixedBigNumber(i.multipliedBy(d),o.decimals.quoteCurrency,m?D.ROUND_CEIL:D.ROUND_FLOOR)):(l=v.toFixedBigNumber(t,o.decimals.quoteCurrency,D.ROUND_FLOOR),d=v.toFixedBigNumber(l.div(i),o.decimals.baseCurrency,m?D.ROUND_FLOOR:D.ROUND_CEIL));let p=v.toFixedBigNumber(new D(1).div(i),o.decimals.price,D.ROUND_FLOOR),x={currencyId:a,amount:d,price:i},S={currencyId:c,amount:l,price:p};return m?[S,x]:[x,S]},Ct=(o,e)=>{let t,r;if(typeof o=="string"){let n=Tt(o);t=n[0],r=n[1]}else t=o.baseCurrency,r=o.quoteCurrency;return e==="Sell"?[r,t]:[t,r]},Mt=(o,e,t)=>{let r=`${e}/${t}`,n=`${t}/${e}`,i,a="Sell";if(ge.isReadonlyArray(o))for(let c of o){if(c.name===r){i=c;break}if(c.name===n){i=c,a="Buy";break}}else i=o.get(r),i||(a="Buy",i=o.get(n));if(!i)throw new Error(`Invalid pair: ${e}/${t}`);return[i,a]};var M={};R(M,{isNormalizedOrderPreviewParameters:()=>Yr,isOrderPreview:()=>Jr,normalizeOrderPreviewParameters:()=>eo});var Jr=o=>typeof o.symbol=="string"&&typeof o.side=="string"&&!!o.from&&!!o.to,Yr=o=>!!(o.symbol&&o.side&&o.from&&o.to&&typeof o.isBaseCurrencyAmount=="boolean"&&typeof o.isFromAmount=="boolean"),eo=(o,e)=>{let t=e.getSymbolsMap(),r,n,i,a=!0,c,m,d=!0;if(o.symbol&&o.side){if(r=o.symbol,n=t.get(r),!n)throw new Error(`The ${r} Symbol not found`);i=o.side,o.isBaseCurrencyAmount!==void 0&&o.isBaseCurrencyAmount!==null&&(a=o.isBaseCurrencyAmount),[c,m]=Ct(n,i),d=a&&c===n.baseCurrency||!a&&m===n.baseCurrency}else if(o.from&&o.to)c=o.from,m=o.to,d=o.isFromAmount!==void 0&&o.isFromAmount!==null?o.isFromAmount:!0,[n,i]=Mt(t,o.from,o.to),r=n.name,a=d&&o.from===n.baseCurrency||!d&&o.to===n.baseCurrency;else throw new Error("Invalid orderPreviewParameters argument passed");return{type:o.type,amount:o.amount,exchangeSymbol:n,side:i,isBaseCurrencyAmount:a,from:c,to:m,isFromAmount:d}};import{BigNumber as to}from"bignumber.js";import{nanoid as ro}from"nanoid";var fe=(r=>(r[r.Local=1]="Local",r[r.Remote=2]="Remote",r[r.All=3]="All",r))(fe||{});var De=(r=>(r[r.Local=0]="Local",r[r.Remote=1]="Remote",r[r.SafeMerged=2]="SafeMerged",r))(De||{});var h=class{constructor(){s(this,"listeners",new Set)}addListener(e){return this.listeners.add(e),this}removeListener(e){return this.listeners.has(e)&&this.listeners.delete(e),this}removeAllListeners(){return this.listeners=new Set,this}emit(...e){!this.listeners.size||(this.listeners.size===1?this.listeners.values().next().value(...e):[...this.listeners].forEach(t=>t(...e)))}};var xe=class{constructor(e=1e3){this.latencyMs=e;s(this,"watcherIdsMap",new Map);s(this,"internalEmitter",new h)}addListener(e){return this.internalEmitter.addListener(e),this}removeListener(e){return this.internalEmitter.removeListener(e),this}removeAllListeners(){return this.internalEmitter.removeAllListeners(),this}emit(e,...t){let r=this.watcherIdsMap.get(e);r&&clearTimeout(r);let n=setTimeout(()=>{this.watcherIdsMap.delete(e),this.internalEmitter.emit(...t)},this.latencyMs);this.watcherIdsMap.set(e,n)}};var I=class{constructor(e){this.baseUrl=e}async request(e,t=!0){let r=new URL(e.urlPath,this.baseUrl);e.params&&this.setSearchParams(r,e.params);let n=await fetch(r.toString(),{headers:this.createHeaders(e),method:e.method||"GET",body:e.payload?JSON.stringify(e.payload):void 0});if(!(t&&n.status===404)){if(!n.ok){let i=await n.text();throw Error(i)}return await n.json()}}setSearchParams(e,t){for(let r in t){let n=t[r];n!=null&&e.searchParams.set(r,String(n))}}createHeaders(e){let t={};return e.authToken&&(t.Authorization=`Bearer ${e.authToken}`),e.method==="POST"&&e.payload&&(t["Content-Type"]="application/json"),t}};var Bt=class{constructor(e=Bt.defaultCacheOptions){this.defaultCacheOptions=e;s(this,"cacheMap",new Map)}get(e){let t=this.cacheMap.get(e);return t?(this.getTimeoutAndIsSlidingExpiration(t.options)[1]&&this.set(e,t.value,t.options),t.value):void 0}set(e,t,r=this.defaultCacheOptions){this.delete(e);let[n]=this.getTimeoutAndIsSlidingExpiration(r),i=setTimeout(()=>{this.cacheMap.delete(e)},n),a={value:t,watcherId:i,options:r};this.cacheMap.set(e,a)}delete(e){let t=this.cacheMap.get(e);!t||(clearTimeout(t.watcherId),this.cacheMap.delete(e))}clear(){[...this.cacheMap.keys()].forEach(t=>this.delete(t))}async dispose(){this.clear()}getTimeoutAndIsSlidingExpiration(e){return e.slidingExpirationMs!==void 0?[e.slidingExpirationMs,!0]:[e.absoluteExpirationMs,!1]}},E=Bt;s(E,"defaultCacheOptions",{absoluteExpirationMs:1e3*60*30});var Pe=class{constructor(e){s(this,"events",{orderUpdated:new h,orderBookSnapshot:new h,orderBookUpdated:new h,topOfBookUpdated:new h});s(this,"authorizationManager");s(this,"exchangeService");s(this,"symbolsProvider");s(this,"orderBookProvider");s(this,"_isStarted",!1);s(this,"handleExchangeServiceOrderUpdated",e=>{this.events.orderUpdated.emit(e)});s(this,"handleExchangeServiceOrderBookSnapshot",async e=>{this.events.orderBookSnapshot.emit(e)});s(this,"handleExchangeServiceOrderBookUpdated",async e=>{this.events.orderBookUpdated.emit(e)});s(this,"handleExchangeServiceTopOfBookUpdated",e=>{this.events.topOfBookUpdated.emit(e)});this.authorizationManager=e.authorizationManager,this.exchangeService=e.exchangeService,this.symbolsProvider=e.symbolsProvider,this.orderBookProvider=e.orderBookProvider}get isStarted(){return this._isStarted}async start(){this.isStarted||(this.attachEvents(),await this.exchangeService.start(),await this.getSymbols(),this._isStarted=!0)}stop(){!this._isStarted||(this.detachEvents(),this.exchangeService.stop(),this._isStarted=!1)}getOrder(e,t,r=2){return this.exchangeService.getOrder(e,t)}getOrders(e,t,r=2){return this.exchangeService.getOrders(e,t)}async getSymbol(e,t=3){if((t&1)===1){let r=this.symbolsProvider.getSymbol(e);if(r)return r}if((t&2)===2){let r=await this.exchangeService.getSymbols();return this.symbolsProvider.setSymbols(r),this.symbolsProvider.getSymbol(e)}}async getSymbols(e=3){if((e&1)===1){let t=this.symbolsProvider.getSymbols();if(t.length>0)return t}if((e&2)===2){let t=await this.exchangeService.getSymbols();return this.symbolsProvider.setSymbols(t),t}return[]}getTopOfBook(e){return this.exchangeService.getTopOfBook(e)}async getOrderBook(e){let t;if(typeof e=="string")t=e;else{let n=this.symbolsProvider.getSymbolsMap();t=P.convertFromAndToCurrenciesToSymbolAndSide(n,e.from,e.to)[0].name}if(!t)throw new Error("Invalid Symbol");let r=await this.exchangeService.getOrderBook(t);return r&&this.orderBookProvider.setOrderBook(t,r),r}addOrder(e,t){let r=t.proofsOfFunds?t.proofsOfFunds:this.createProofOfFunds(e,t),n={clientOrderId:t.clientOrderId||ro(17),orderBody:t.orderBody,requisites:t.requisites,proofsOfFunds:r};return this.exchangeService.addOrder(e,n)}cancelOrder(e,t){return this.exchangeService.cancelOrder(e,t)}cancelAllOrders(e,t){return this.exchangeService.cancelAllOrders(e,t)}async getOrderPreview(e){if(e.type!=="SolidFillOrKill")throw new Error('Only the "SolidFillOrKill" order type is supported at the current moment');let t=this.normalizeOrderPreviewParametersIfNeeded(e),r=await this.findOrderBookEntry(t.exchangeSymbol.name,t.side,e.type,t.amount,t.isBaseCurrencyAmount);if(!r)return;let[n,i]=P.convertSymbolAndSideToFromAndToSymbolCurrencies(t.exchangeSymbol,t.side,t.amount,r.price,t.isBaseCurrencyAmount);return{type:e.type,from:n,to:i,side:t.side,symbol:t.exchangeSymbol.name}}async getAvailableLiquidity(e){if(e.type!=="SolidFillOrKill")throw new Error('Only the "SolidFillOrKill" order type is supported at the current moment');let t,r;if(e.symbol!==void 0)t=e.symbol,r=e.side;else{let d=this.symbolsProvider.getSymbolsMap(),l=P.convertFromAndToCurrenciesToSymbolAndSide(d,e.from,e.to);t=l[0].name,r=l[1]}let n=await this.getCachedOrderBook(t);if(!n)return;let i=Math.max(...n.entries.filter(d=>d.side!=r).map(d=>Math.max(...d.qtyProfile)));if(!isFinite(i)||isNaN(i)||i<=0)return;let a=new to(i),c=e.symbol!==void 0?{amount:a,symbol:t,side:r,type:e.type,isBaseCurrencyAmount:!0}:{amount:a,type:e.type,from:e.from,to:e.to,isFromAmount:r==="Sell"},m=await this.getOrderPreview(c);if(!!m)return{symbol:m.symbol,type:m.type,from:m.from,to:m.to,side:m.side}}attachEvents(){this.exchangeService.events.orderUpdated.addListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.events.orderBookSnapshot.addListener(this.handleExchangeServiceOrderBookSnapshot),this.exchangeService.events.orderBookUpdated.addListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.events.topOfBookUpdated.addListener(this.handleExchangeServiceTopOfBookUpdated)}detachEvents(){this.exchangeService.events.orderUpdated.removeListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.events.orderBookSnapshot.removeListener(this.handleExchangeServiceOrderBookSnapshot),this.exchangeService.events.orderBookUpdated.removeListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.events.topOfBookUpdated.removeListener(this.handleExchangeServiceTopOfBookUpdated)}normalizeOrderPreviewParametersIfNeeded(e){return M.isNormalizedOrderPreviewParameters(e)?e:M.normalizeOrderPreviewParameters(e,this.symbolsProvider)}async findOrderBookEntry(e,t,r,n,i){if(r!=="SolidFillOrKill")return;let a=await this.getCachedOrderBook(e);if(!!a){for(let c of a.entries)if(c.side!==t&&(i?n:n.div(c.price)).isLessThanOrEqualTo(Math.max(...c.qtyProfile)))return c}}createProofOfFunds(e,t){if(!this.authorizationManager.getAuthToken(e))throw new Error(`Cannot find auth token for address: ${e}`);let n=M.isOrderPreview(t.orderBody)?t.orderBody.from.currencyId:P.convertSymbolAndSideToFromAndToCurrencies(t.orderBody.symbol,t.orderBody.side)[0];return[]}getCachedOrderBook(e){let t=this.orderBookProvider.getOrderBook(e);return t?Promise.resolve(t):this.getOrderBook(e)}};var X=class{constructor(){s(this,"symbolsMap",new Map);s(this,"symbolsCollectionCache",[])}getSymbol(e){return this.symbolsMap.get(e)}getSymbols(){return this.symbolsCollectionCache}getSymbolsMap(){return this.symbolsMap}setSymbols(e){this.symbolsCollectionCache=e,this.symbolsMap=this.mapSymbolsCollectionToMap(e)}mapSymbolsCollectionToMap(e){let t=new Map;for(let r of e)t.set(r.name,r);return t}};var we=class{constructor(){s(this,"orderBookMap",new Map)}getOrderBook(e){return this.orderBookMap.get(e)}setOrderBook(e,t){this.orderBookMap.set(e,t)}};import oo from"bignumber.js";var J=class{constructor(e,t){this.currenciesProvider=e;this.providersMap=t;s(this,"cache",new E({absoluteExpirationMs:1e3*30}))}async getAveragePrice({baseCurrency:e,quoteCurrency:t,dataSource:r=3}){let n=this.tryFindCurrency(e),i=this.tryFindCurrency(t),a=this.getCacheKey({isAverage:!0,baseCurrencyOrSymbol:n,quoteCurrencyOrSymbol:i});if((r&1)===1){let c=this.cache.get(a);if(c)return c}if((r&2)===2){let m=this.getAvailableProviders().map(p=>this.getPrice({baseCurrency:n,quoteCurrency:i,provider:p,dataSource:r})),d=await Promise.allSettled(m),l=[];for(let p of d)p.status==="fulfilled"&&p.value!==void 0&&l.push(p.value);if(l.length){let p=oo.sum(...l).div(l.length);return this.cache.set(a,p),p}}}async getPrice({baseCurrency:e,quoteCurrency:t,provider:r,dataSource:n=3}){let i=this.tryFindCurrency(e),a=this.tryFindCurrency(t),c=this.getCacheKey({isAverage:!1,baseCurrencyOrSymbol:i,quoteCurrencyOrSymbol:a,provider:r});if((n&1)===1){let m=this.cache.get(c);if(m)return m}if((n&2)===2){let m=await this.getPriceCore(i,a,r);if(!m){let d=await this.getPriceCore(a,i,r);d&&(m=d.pow(-1))}if(m)return this.cache.set(c,m),m}}getAvailableProviders(){return[...this.providersMap.keys()]}async dispose(){this.cache.clear()}tryFindCurrency(e){return typeof e!="string"?e:this.currenciesProvider.getCurrency(e)||e}getCacheKey({isAverage:e,baseCurrencyOrSymbol:t,quoteCurrencyOrSymbol:r,provider:n}){let i=e?"average":"actual",a=typeof t=="string"?t:t.id,c=typeof r=="string"?r:r.id;return`${i}_${a}_${c}_${n||""}`}async getPriceCore(e,t,r){let i=this.getSelectedProviders(r).map(c=>c.getPrice(e,t)),a=await Promise.allSettled(i);for(let c of a)if(c.status==="fulfilled"&&c.value!==void 0)return c.value}getSelectedProviders(e){if(!e)return[...this.providersMap.values()];let t=this.providersMap.get(e);if(!t)throw new Error(`Provider not found for key: ${e}`);return[t]}};var Y=class{constructor(e){this.exchangeService=e}async getPrice(e,t){var c;let r=this.getSymbol(e),n=this.getSymbol(t),i=`${r}/${n}`,a=(c=await this.exchangeService.getTopOfBook([{from:r,to:n}]))==null?void 0:c[0];return a&&a.symbol===i?this.getMiddlePrice(a):void 0}getSymbol(e){return typeof e=="string"?e:e.id}getMiddlePrice(e){return e.ask.plus(e.bid).div(2)}};import no from"bignumber.js";var nr=o=>{let e=o;return typeof e.code=="number"&&typeof e.msg=="string"};var We=class{constructor(){s(this,"httpClient");s(this,"_allSymbols");this.httpClient=new I(We.baseUrl)}async getPrice(e,t){let r=this.getSymbol(e),n=this.getSymbol(t),i=`${r}${n}`;if(!(await this.getAllSymbols()).has(i))return;let c=`${We.priceUrlPath}?symbol=${i}`,m=await this.httpClient.request({urlPath:c},!1);return this.mapRatesDtoToPrice(m)}getSymbol(e){return(typeof e=="string"?e:e.symbol).toUpperCase()}mapRatesDtoToPrice(e){if(!nr(e))return new no(e.price)}async getAllSymbols(){return this._allSymbols||(this._allSymbols=new Set(await this.requestAllSymbols())),this._allSymbols}async requestAllSymbols(){let e=We.priceUrlPath;return(await this.httpClient.request({urlPath:e},!1)).map(r=>r.symbol)}},W=We;s(W,"baseUrl","https://www.binance.com"),s(W,"priceUrlPath","/api/v3/ticker/price");import io from"bignumber.js";var Et=class{constructor(){s(this,"httpClient");this.httpClient=new I(Et.baseUrl)}async getPrice(e,t){let r=this.getSymbol(e),n=this.getSymbol(t),a=`/0/public/Ticker?pair=${`${r}${n}`}`,c=await this.httpClient.request({urlPath:a},!1);return this.mapRatesDtoToPrice(c)}getSymbol(e){return(typeof e=="string"?e:e.symbol).toUpperCase()}mapRatesDtoToPrice(e){if(e.error.length)return;let t=Object.keys(e.result)[0],r=t?e.result[t]:void 0;if(!!r)return new io(r.c[0])}},K=Et;s(K,"baseUrl","https://api.kraken.com");import _ from"bignumber.js";var H=class{constructor(e){this.atomexContext=e;s(this,"swapPreviewFeesCache",new E({absoluteExpirationMs:20*1e3}));s(this,"userInvolvedSwapsCache",new E({slidingExpirationMs:30*1e3}))}async getSwapPreview(e){let t=this.normalizeSwapPreviewParametersIfNeeded(e),r=this.atomexContext.providers.blockchainProvider.getCurrencyInfo(t.from);if(!r)throw new Error(`The "${t.from}" currency (from) is unknown`);let n=this.atomexContext.providers.blockchainProvider.getCurrencyInfo(t.to);if(!n)throw new Error(`The "${t.to}" currency (to) is unknown`);let i=this.atomexContext.providers.blockchainProvider.getNativeCurrencyInfo(r.currency.blockchain);if(!i)throw new Error(`The "${r.currency.id}" currency is a currency of unknown blockchain: ${r.currency.blockchain}`);let a=this.atomexContext.providers.blockchainProvider.getNativeCurrencyInfo(n.currency.blockchain);if(!a)throw new Error(`The "${n.currency.id}" currency is a currency of unknown blockchain: ${n.currency.blockchain}`);return this.getSwapPreviewInternal(t,r,i,n,a)}async getSwapPreviewInternal(e,t,r,n,i){let a=await this.atomexContext.managers.exchangeManager.getAvailableLiquidity({type:e.type,symbol:e.exchangeSymbol.name,side:e.side});if(!a)throw new Error(`No available liquidity for the "${e.exchangeSymbol.name}" symbol`);let c=[],m=[],d=await this.atomexContext.managers.exchangeManager.getOrderPreview(e);d||c.push({id:"not-enough-liquidity"});let l=await this.calculateSwapPreviewFees(t,r,n,i,e.useWatchTower),p=await this.getSwapPreviewAccountData(e,d,a,t,r,n,i,l,c,m);return{type:e.type,from:{currencyId:e.from,price:d?d.from.price:a.from.price,address:p.fromAddress,actual:d?{amount:d.from.amount,price:d.from.price}:{amount:e.isFromAmount?e.amount:new _(0),price:new _(0)},available:{amount:a.from.amount,price:a.from.price},max:p.maxOrderPreview&&{amount:p.maxOrderPreview.from.amount,price:p.maxOrderPreview.from.price}},to:{currencyId:e.to,price:d?d.to.price:a.to.price,address:p.toAddress,actual:d?{amount:d.to.amount,price:d.to.price}:{amount:e.isFromAmount?new _(0):e.amount,price:new _(0)},available:{amount:a.to.amount,price:a.to.price},max:p.maxOrderPreview&&{amount:p.maxOrderPreview.to.amount,price:p.maxOrderPreview.to.price}},symbol:e.exchangeSymbol.name,side:e.side,fees:l,errors:c,warnings:m}}clearCache(){this.swapPreviewFeesCache.clear(),this.userInvolvedSwapsCache.clear()}async dispose(){this.clearCache()}normalizeSwapPreviewParametersIfNeeded(e){return H.isNormalizedSwapPreviewParameters(e)?e:H.normalizeSwapPreviewParameters(e,this.atomexContext.providers.exchangeSymbolsProvider,!0)}async getSwapPreviewAccountData(e,t,r,n,i,a,c,m,d,l){var C;let[p,x]=await Promise.all([this.atomexContext.managers.walletsManager.getWallet(void 0,n.currency.blockchain).then(g=>g==null?void 0:g.getAddress()).then(g=>g&&this.atomexContext.managers.authorizationManager.getAuthToken(g)?g:void 0),this.atomexContext.managers.walletsManager.getWallet(void 0,a.currency.blockchain).then(g=>g==null?void 0:g.getAddress())]),S;if(p){let[g,y]=await Promise.all([this.atomexContext.managers.balanceManager.getBalance(p,n.currency),this.atomexContext.managers.balanceManager.getBalance(p,i.currency)]);if(!g||!y)throw new Error("Can not get from currency balances");let b=H.calculateMaxTotalFee(m,i.currency.id);y.isLessThan(b)&&d.push({id:"not-enough-funds",data:{type:"fees",currencyId:i.currency.id,requiredAmount:b}});let A=_.min(n.currency.id===i.currency.id?g.minus(b):g,r.from.amount);S=await this.getMaxOrderPreview(t,r,p,A,n,i,d,l)}if(x){let g=await this.atomexContext.managers.balanceManager.getBalance(x,c.currency);if(!g)throw new Error("Can not get to currency balance");let y=(C=m.success.find(b=>b.name==="redeem-fee"))==null?void 0:C.max;y&&g.isLessThan(y)&&d.push({id:"not-enough-funds",data:{type:"fees",currencyId:c.currency.id,requiredAmount:y}})}return{fromAddress:p,toAddress:x,maxOrderPreview:S}}async getMaxOrderPreview(e,t,r,n,i,a,c,m){if(n.isLessThanOrEqualTo(0)){i.currency.id!==a.currency.id&&c.push({id:"not-enough-funds",data:{type:"balance",currencyId:(e==null?void 0:e.from.currencyId)||t.from.currencyId,requiredAmount:(e==null?void 0:e.from.amount)||t.from.amount}});return}let d=await this.getUserInvolvedSwapsInfo(r,i.currency.id),l=n.minus(d.fromTotalAmount);if(l.isLessThanOrEqualTo(0)){c.push({id:"not-enough-funds",data:{type:"swaps",swapIds:d.swapIds,currencyId:d.fromCurrencyId,lockedAmount:d.fromTotalAmount}});return}let p=await this.atomexContext.managers.exchangeManager.getOrderPreview({type:t.type,from:t.from.currencyId,to:t.to.currencyId,amount:l,isFromAmount:!0});return p&&e&&e.from.amount.isGreaterThan(p.from.amount)&&(e.from.amount.isGreaterThan(n)?c.push({id:"not-enough-funds",data:{type:"balance",currencyId:e.from.currencyId,requiredAmount:e.from.amount.minus(p.from.amount)}}):c.push({id:"not-enough-funds",data:{type:"swaps",swapIds:d.swapIds,currencyId:d.fromCurrencyId,lockedAmount:d.fromTotalAmount}})),p}async getUserInvolvedSwapsInfo(e,t){let r=this.getUserInvolvedSwapsCacheKey(e,t),n=this.userInvolvedSwapsCache.get(r);if(n)return n;let i=[],a=(await this.atomexContext.managers.swapManager.getSwaps(e)).filter(m=>{if(!(m.from.currencyId===t&&(m.user.status==="Created"||m.user.status==="Involved")&&(m.counterParty.status==="Created"||m.counterParty.status==="Involved"||m.counterParty.status==="PartiallyInitiated"||m.counterParty.status==="Initiated")))return!1;let d=Date.now(),l=m.timeStamp.getTime();return l+m.user.requisites.lockTime*1e3>d&&l+m.counterParty.requisites.lockTime*1e3>d?(i.push(m.id),!0):!1}),c=a.reduce((m,d)=>m.plus(d.from.amount),new _(0));return n={swaps:a,swapIds:i,fromCurrencyId:t,fromTotalAmount:c},this.userInvolvedSwapsCache.set(r,n),n}async calculateSwapPreviewFees(e,t,r,n,i){let a=this.getSwapPreviewFeesCacheKey(e,r,i),c=this.swapPreviewFeesCache.get(a);if(c)return c;let m=e.atomexProtocol,d=r.atomexProtocol,l=await d.getRedeemFees({}),[p,x,S,C,g]=await Promise.all([m.getInitiateFees({}),i?d.getRedeemReward(l):l,m.getRefundFees({}),d.getInitiateFees({}),m.getRedeemFees({})]),y={name:"payment-fee",currencyId:t.currency.id,estimated:p.estimated,max:p.max},b=await this.calculateMakerFees(e.currency,t.currency,n.currency,C,g),A={success:[y,b,{name:i?"redeem-reward":"redeem-fee",currencyId:i?r.currency.id:n.currency.id,estimated:x.estimated,max:x.max}],refund:[y,b,{name:"refund-fee",currencyId:t.currency.id,estimated:S.estimated,max:S.max}]};return this.swapPreviewFeesCache.set(a,A),A}async calculateMakerFees(e,t,r,n,i){let[a,c]=await Promise.all([e!==r?this.convertFeesFromNativeCurrencyToCustom(n,r,e):n,e!==t?this.convertFeesFromNativeCurrencyToCustom(i,t,e):i]);return{name:"maker-fee",currencyId:e.id,estimated:a.estimated.plus(c.estimated),max:a.max.plus(c.max)}}async convertFeesFromNativeCurrencyToCustom(e,t,r){let n=await this.atomexContext.managers.priceManager.getPrice({baseCurrency:t,quoteCurrency:r,provider:"atomex"});if(!n)throw new Error(`It's no possible to convert fees from "${t.id}" to "${r.id}" currency`);let[i,a]=P.convertFromAndToCurrenciesToSymbolAndSide(this.atomexContext.providers.exchangeSymbolsProvider.getSymbolsMap(),t.id,r.id),c=i.baseCurrency===r.id?i.decimals.baseCurrency:i.decimals.quoteCurrency,m=v.toFixedBigNumber(e.estimated.multipliedBy(n),c,_.ROUND_CEIL),d=v.toFixedBigNumber(e.max.multipliedBy(n),c,_.ROUND_CEIL);return{estimated:m,max:d}}getSwapPreviewFeesCacheKey(e,t,r){return`${e.currency.id}_${t.currency.id}_${r}`}getUserInvolvedSwapsCacheKey(e,t){return`${e}_${t}`}static isNormalizedSwapPreviewParameters(e){return M.isNormalizedOrderPreviewParameters(e)}static normalizeSwapPreviewParameters(e,t,r){let n=M.normalizeOrderPreviewParameters(e,t);return{type:e.type,amount:e.amount,useWatchTower:typeof e.useWatchTower!="boolean"?r:e.useWatchTower,from:n.from,to:n.to,isFromAmount:n.isFromAmount,exchangeSymbol:n.exchangeSymbol,side:n.side,isBaseCurrencyAmount:n.isBaseCurrencyAmount}}static calculateMaxTotalFee(e,t){let r=this.calculateTotalFee(e.success,t),n=this.calculateTotalFee(e.refund,t);return _.max(r,n)}static calculateTotalFee(e,t){return e.reduce((r,n)=>n.currencyId===t&&n.name.endsWith("fee")?r.plus(n.max):r,new _(0))}};var be=class{constructor(e){this.options=e;s(this,"authorization");s(this,"exchangeManager");s(this,"balanceManager");s(this,"priceManager");s(this,"swapManager");s(this,"wallets");s(this,"atomexContext");s(this,"swapPreviewManager");s(this,"_isStarted",!1);if(this.atomexContext=e.atomexContext,this.swapPreviewManager=new H(e.atomexContext),this.wallets=e.managers.walletsManager,this.authorization=e.managers.authorizationManager,this.exchangeManager=e.managers.exchangeManager,this.swapManager=e.managers.swapManager,this.balanceManager=e.managers.balanceManager,this.priceManager=e.managers.priceManager,e.blockchains)for(let t of Object.keys(e.blockchains))this.addBlockchain(r=>[t,e.blockchains[t]])}get atomexNetwork(){return this.atomexContext.atomexNetwork}get isStarted(){return this._isStarted}async start(){this.isStarted||(await this.authorization.start(),await this.exchangeManager.start(),await this.swapManager.start(),this._isStarted=!0)}stop(){!this.isStarted||(this.authorization.stop(),this.exchangeManager.stop(),this.swapManager.stop(),this.balanceManager.dispose(),this.swapPreviewManager.dispose(),this._isStarted=!1)}addBlockchain(e){let[t,r]=e(this.atomexContext);this.atomexContext.providers.blockchainProvider.addBlockchain(t,r)}getCurrency(e){return this.atomexContext.providers.currenciesProvider.getCurrency(e)}getSwapPreview(e){return this.swapPreviewManager.getSwapPreview(e)}async swap(e,t=15){var A;if(typeof e=="number")throw new Error("Swap tracking is not implemented yet");let r=e.swapPreview;if(r.errors.length)throw new Error("Swap preview has errors");let n=r.from.address;if(!n)throw new Error(`Swap preview doesn't have the "from" address`);let i=r.to.address;if(!i)throw new Error(`Swap preview doesn't have the "to" address`);let[a,c]=P.getBaseQuoteCurrenciesBySymbol(r.symbol),m=this.atomexContext.providers.blockchainProvider.getCurrencyInfo(a);if(!m)throw new Error(`The "${a}" currency (base) is unknown`);let d=this.atomexContext.providers.blockchainProvider.getCurrencyInfo(c);if(!d)throw new Error(`The "${c}" currency (quote) is unknown`);if(m.atomexProtocol.type!=="multi-chain")throw new Error(`Unknown type (${m.atomexProtocol.type}) of the Atomex protocol (base)`);if(d.atomexProtocol.type!=="multi-chain")throw new Error(`Unknown type (${d.atomexProtocol.type}) of the Atomex protocol (quote)`);let l=m.atomexProtocol,p=d.atomexProtocol,x=a===r.from.currencyId?"from":"to",S=(A=r.fees.success.find(k=>k.name=="redeem-reward"))==null?void 0:A.estimated,C={orderBody:{type:r.type,symbol:r.symbol,side:r.side,amount:r[x].actual.amount,price:r[x].actual.price},requisites:{secretHash:null,receivingAddress:i,refundAddress:e.refundAddress||null,rewardForRedeem:S||new Ot(0),lockTime:18e3,baseCurrencyContract:l.swapContractAddress,quoteCurrencyContract:p.swapContractAddress}},g=await this.exchangeManager.addOrder(n,C),y=await this.exchangeManager.getOrder(n,g);if(!y)throw new Error(`The ${g} order not found`);if(y.status!=="Filled")throw new Error(`The ${g} order is not filled`);let b=await Promise.all(y.swapIds.map(k=>this.swapManager.getSwap(k,n)));if(!b.length)throw new Error("Swaps not found");if(b.some(k=>!k))throw new Error("Swap not found");return this.swapPreviewManager.clearCache(),b.length===1?b[0]:b}async convertCurrency(e,t,r){let n=await this.priceManager.getAveragePrice({baseCurrency:t,quoteCurrency:r});if(!n)return;let a=(Ot.isBigNumber(e)?e:new Ot(e)).multipliedBy(n),c=this.getCurrency(r);return c?ye(a,c.decimals):a}};var T=class extends Error{constructor(t){super(T.getMessage(t));s(this,"name");s(this,"componentName");this.componentName=t,this.name=this.constructor.name}static getMessage(t){return`Atomex "${t}" component has not resolved yet`}};var Nt=class{constructor(e){this.atomexNetwork=e;s(this,"id");s(this,"managers");s(this,"services");s(this,"providers");this.id=Nt.idCounter++,this.managers=new zt(this),this.services=new It(this),this.providers=new Rt(this)}},ve=Nt;s(ve,"idCounter",0);var zt=class{constructor(e){this.context=e;s(this,"_walletsManager");s(this,"_authorizationManager");s(this,"_exchangeManager");s(this,"_swapManager");s(this,"_priceManager");s(this,"_balanceManager")}get walletsManager(){if(!this._walletsManager)throw new T("managers.walletsManager");return this._walletsManager}set walletsManager(e){this._walletsManager=e}get authorizationManager(){if(!this._authorizationManager)throw new T("managers.authorizationManager");return this._authorizationManager}set authorizationManager(e){this._authorizationManager=e}get exchangeManager(){if(!this._exchangeManager)throw new T("managers.exchangeManager");return this._exchangeManager}set exchangeManager(e){this._exchangeManager=e}get swapManager(){if(!this._swapManager)throw new T("managers.swapManager");return this._swapManager}set swapManager(e){this._swapManager=e}get priceManager(){if(!this._priceManager)throw new T("managers.priceManager");return this._priceManager}set priceManager(e){this._priceManager=e}get balanceManager(){if(!this._balanceManager)throw new T("managers.balanceManager");return this._balanceManager}set balanceManager(e){this._balanceManager=e}},It=class{constructor(e){this.context=e;s(this,"_exchangeService");s(this,"_swapService")}get exchangeService(){if(!this._exchangeService)throw new T("services.exchangeService");return this._exchangeService}set exchangeService(e){this._exchangeService=e}get swapService(){if(!this._swapService)throw new T("services.swapService");return this._swapService}set swapService(e){this._swapService=e}},Rt=class{constructor(e){this.context=e;s(this,"_blockchainProvider");s(this,"_currenciesProvider");s(this,"_exchangeSymbolsProvider");s(this,"_orderBookProvider")}get blockchainProvider(){if(!this._blockchainProvider)throw new T("providers.blockchainProvider");return this._blockchainProvider}set blockchainProvider(e){this._blockchainProvider=e}get currenciesProvider(){if(!this._currenciesProvider)throw new T("providers.currenciesProvider");return this._currenciesProvider}set currenciesProvider(e){this._currenciesProvider=e}get exchangeSymbolsProvider(){if(!this._exchangeSymbolsProvider)throw new T("providers.exchangeSymbolsProvider");return this._exchangeSymbolsProvider}set exchangeSymbolsProvider(e){this._exchangeSymbolsProvider=e}get orderBookProvider(){if(!this._orderBookProvider)throw new T("providers.orderBookProvider");return this._orderBookProvider}set orderBookProvider(e){this._orderBookProvider=e}};var _t=class{constructor(e){this.blockchainProvider=e;s(this,"cache");this.cache=new E({absoluteExpirationMs:_t.cacheExpirationTime})}async getBalance(e,t,r=3){var i;let n=this.getCacheKey(e,t);if((r&1)===1){let a=this.cache.get(n);if(a)return a}if((r&2)===2){let a=(i=this.blockchainProvider.getCurrencyInfo(t.id))==null?void 0:i.balanceProvider;if(!a)throw new Error(`Balance provider not found for currency: ${t.id}`);let c=await a.getBalance(e);return this.cache.set(n,c),c}}dispose(){return this.cache.dispose()}getCacheKey(e,t){return`${e}_${t.id}`}},Se=_t;s(Se,"cacheExpirationTime",1e3*60*1);var ke=class{constructor(e){this.atomexNetwork=e;s(this,"wallets",new Set)}addWallet(e){return N.ensureNetworksAreSame(this,e),this.wallets.add(e),Promise.resolve(e)}async removeWallet(e){let t=this.wallets.delete(e);return Promise.resolve(t)}async getWallet(e,t,r){if(!this.wallets.size||!e&&!t&&!r)return;let n=[];for(let a of this.wallets){if(r&&a.id!==r)continue;let c=e?a.getAddress():void 0,m=t?a.getBlockchain():void 0;if((!e||e===c)&&(!t||t==m))return a;n.push(Promise.all([c,m]).then(([d,l])=>[a,d,l]))}let i=await Promise.allSettled(n);for(let a of i){if(a.status!=="fulfilled")continue;let[c,m,d]=a.value;if((!e||e===m)&&(!t||t==d))return c}}};var B={};R(B,{getRedeemRewardInNativeCurrency:()=>sr,getRedeemRewardInToken:()=>ao});import ar from"bignumber.js";var sr=async(o,e,t,r)=>{let n=typeof o=="string"?r.getCurrency(o):o;if(!n)throw new Error(`Currency info not found for ${o}`);let i=await t.getAveragePrice({baseCurrency:n,quoteCurrency:"USD"});if(!i)throw new Error(`Price for ${o} in USD not found`);let a=30,c=.15,m=.05,d=e.estimated.multipliedBy(i),l=a/Math.log((1-c)/m),p=(1-c)/Math.exp(d.toNumber()/l)+c,x=ye(e.estimated.multipliedBy(1+p),Math.min(n.decimals,9),ar.ROUND_FLOOR);return{estimated:x,max:x}},ao=async(o,e,t,r)=>{var d;let n=typeof o=="string"?r.getCurrency(o):o;if(!n)throw new Error(`Currency info not found for ${o}`);let i=(d=r.getNativeCurrencyInfo(n.blockchain))==null?void 0:d.currency;if(!i)throw new Error(`Native currency not found fir ${n.blockchain}`);let a=await t.getAveragePrice({baseCurrency:i,quoteCurrency:o});if(!a)throw new Error(`Price for ${i.id} in ${n.id} not found`);let c=await sr(i.id,e,t,r),m=ye(c.estimated.multipliedBy(a),Math.min(n.decimals,9),ar.ROUND_FLOOR);return{estimated:m,max:m}};var qe=class{constructor(e,t){this.currency=e;this.getBalanceImplementation=t}getBalance(e){return this.getBalanceImplementation(e)}};var Ue=class{constructor(){s(this,"currencyInfoMap",new Map);s(this,"networkOptionsMap",new Map);s(this,"blockchainToolkitProviders",new Set)}addBlockchain(e,t){var r,n;if(this.networkOptionsMap.has(e))throw new Error("There is already blockchain added with the same key");this.networkOptionsMap.set(e,t),this.blockchainToolkitProviders.add(t.blockchainToolkitProvider);for(let i of t.currencies){if(this.currencyInfoMap.has(i.id))throw new Error("There is already currency added with the same key");let a=t.currencyOptions[i.id],c=a==null?void 0:a.atomexProtocol;if(!c)throw new Error(`Atomex protocol is not defined for the "${i.id}" currency`);let m={currency:i,atomexProtocol:c,blockchainToolkitProvider:t.blockchainToolkitProvider,balanceProvider:(r=a==null?void 0:a.currencyBalanceProvider)!=null?r:this.createControlledBalancesProvider(i,t.balancesProvider),swapTransactionsProvider:(n=a==null?void 0:a.swapTransactionsProvider)!=null?n:t.swapTransactionsProvider};this.currencyInfoMap.set(i.id,m)}}getNetworkOptions(e){return this.networkOptionsMap.get(e)}async getReadonlyToolkit(e,t){let r=[];for(let i of this.blockchainToolkitProviders)i.toolkitId===e&&r.push(i.getReadonlyToolkit(t));let n=await Promise.all(r);for(let i of n)if(i)return i;return Promise.resolve(void 0)}getCurrency(e){var t;return(t=this.getCurrencyInfo(e))==null?void 0:t.currency}getNativeCurrencyInfo(e){for(let t of this.currencyInfoMap)if(t[1].currency.type==="native"&&t[1].currency.blockchain===e)return t[1]}getCurrencyInfo(e){return this.currencyInfoMap.get(e)}createControlledBalancesProvider(e,t){return new qe(e,r=>t.getBalance(r,e))}};import mr from"bignumber.js";var F={};R(F,{convertFromWei:()=>lo,getGasPriceInWei:()=>mo});import cr from"bignumber.js";var mo=async o=>{let e=await o.eth.getGasPrice();return new cr(e)},lo=(o,e,t)=>{let r=typeof e=="string"?e:e.toString(10),n=o.utils.fromWei(r,t);return new cr(n)};var Le=class{constructor(e,t,r,n,i,a){this.blockchain=e;this.atomexNetwork=t;this.atomexProtocolOptions=r;this.atomexBlockchainProvider=n;this.walletsManager=i;this.priceManager=a}get currencyId(){return this.atomexProtocolOptions.currencyId}get swapContractAddress(){return this.atomexProtocolOptions.swapContractAddress}async getInitiateFees(e){var l;let t=await this.getReadonlyWeb3(),r=await F.getGasPriceInWei(t),n=this.atomexProtocolOptions.initiateOperation.gasLimit,i=(l=e.rewardForRedeem)==null?void 0:l.isGreaterThan(0),a=new mr(i?n.withReward:n.withoutReward),c=r.multipliedBy(a).multipliedBy(Le.maxNetworkFeeMultiplier),m=F.convertFromWei(t,c,"ether"),d={estimated:m,max:m};return Promise.resolve(d)}async getRedeemFees(e){let t=await this.getReadonlyWeb3(),r=await F.getGasPriceInWei(t),n=this.atomexProtocolOptions.redeemOperation.gasLimit,i=r.multipliedBy(n).multipliedBy(Le.maxNetworkFeeMultiplier),a=F.convertFromWei(t,i,"ether"),c={estimated:a,max:a};return Promise.resolve(c)}async getRefundFees(e){let t=await this.getReadonlyWeb3(),r=await F.getGasPriceInWei(t),n=this.atomexProtocolOptions.refundOperation.gasLimit,i=r.multipliedBy(n).multipliedBy(Le.maxNetworkFeeMultiplier),a=F.convertFromWei(t,i,"ether"),c={estimated:a,max:a};return Promise.resolve(c)}async getReadonlyWeb3(){let e=await this.atomexBlockchainProvider.getReadonlyToolkit("web3",this.blockchain);if(!e)throw new Error("Web3 toolkit not found");return e}async getWallet(e){let t=await this.walletsManager.getWallet(e,this.blockchain,"web3");if(!t)throw new Error(`${this.blockchain} Web3 wallet not found`);return t}},q=Le;s(q,"maxNetworkFeeMultiplier",new mr(1.2));import yo from"web3";import{ec as po}from"elliptic";var Ft=o=>o.blockchain==="ethereum";var Dt=null,uo=()=>(Dt||(Dt=new po("secp256k1")),Dt),ho=o=>{let e=v.hexStringToUint8Array(o);if(e.length!==64&&e.length!==65)throw new Error(`Invalid signature: ${o}`);let t=e.length===64?27+(e[32]>>7):e[64];return(t===0||t===1)&&(t+=27),{r:st(e.slice(0,32)),s:st(e.slice(32,64)),v:t,recoveryParameter:1-t%2}},dr=(o,e)=>{let t=ho(o),r=$.from(e.startsWith("0x")?e.substring(2):e,"hex"),n=uo().recoverPubKey(r,{r:t.r,s:t.s},t.recoveryParameter);return"0x"+n.encode("hex",!1)};var ct=class{constructor(e,t){this.atomexNetwork=e;this.provider=t;s(this,"id","web3");s(this,"toolkit");this.toolkit=new yo(t)}async getBlockchain(){switch(await this.toolkit.eth.getChainId()){case 1:case 5:return"ethereum";case 56:case 97:return"binance"}return""}async getAddress(){let t=(await this.toolkit.eth.getAccounts())[0];if(!t)throw new Error("Address is unavailable");return t}getPublicKey(){}async sign(e){let t=await this.getAddress(),r=await this.signInternal(e,t),n=dr(r,this.toolkit.eth.accounts.hashMessage(e));return{address:t,publicKeyBytes:n.startsWith("0x")?n.substring(2):n,signatureBytes:r.substring(r.startsWith("0x")?2:0,r.length-2),algorithm:ct.signingAlgorithm}}signInternal(e,t){return new Promise((r,n)=>this.toolkit.eth.personal.sign(e,t,"",(i,a)=>a?r(a):n(i)))}static async bind(e,t){let r=new ct(e.atomexNetwork,t);return await e.wallets.addWallet(r),r}},Ae=ct;s(Ae,"signingAlgorithm","Keccak256WithEcdsa:Geth2940");import go from"web3";var ee=class{constructor(e,t){this.blockchain=e;this.rpcUrl=t;s(this,"toolkitId","web3");s(this,"toolkit")}getReadonlyToolkit(e){return e&&e!==this.blockchain?Promise.resolve(void 0):(this.toolkit||(this.toolkit=new go(this.rpcUrl)),Promise.resolve(this.toolkit))}};import lr from"bignumber.js";var Wt=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];var Te=class{constructor(e){this.blockchainProvider=e}async getBalance(e,t){if(!Ft(t))throw new Error("Not ethereum blockchain currency provided");let r=await this.blockchainProvider.getReadonlyToolkit("web3");if(!r)throw new Error("Readonly web3 toolkit not found");switch(t.type){case"native":return await this.getNativeTokenBalance(e,t,r);case"erc-20":return await this.getTokenBalance(e,t,r)}}async getNativeTokenBalance(e,t,r){let n=await r.eth.getBalance(e);return Z(new lr(n),t.decimals)}async getTokenBalance(e,t,r){let i=await new r.eth.Contract(Wt,t.contractAddress).methods.balanceOf(e).call();return Z(new lr(i),t.decimals)}};var te=class extends q{constructor(t,r,n,i,a){super("ethereum",t,r,n,i,a);this.atomexProtocolOptions=r;s(this,"type","multi-chain")}initiate(t){throw new Error("Method not implemented.")}getInitiateFees(t){return super.getInitiateFees(t)}redeem(t){throw new Error("Method not implemented.")}getRedeemReward(t){return B.getRedeemRewardInNativeCurrency(this.currencyId,t,this.priceManager,this.atomexBlockchainProvider)}getRedeemFees(t){return super.getRedeemFees(t)}refund(t){throw new Error("Method not implemented.")}getRefundFees(t){return super.getRefundFees(t)}};var re=class extends q{constructor(t,r,n,i,a){super("ethereum",t,r,n,i,a);this.atomexProtocolOptions=r;s(this,"type","multi-chain-approvable")}get currencyId(){return this.atomexProtocolOptions.currencyId}approve(t){throw new Error("Method not implemented.")}initiate(t){throw new Error("Method not implemented.")}getInitiateFees(t){return super.getInitiateFees(t)}redeem(t){throw new Error("Method not implemented.")}getRedeemReward(t){return B.getRedeemRewardInToken(this.currencyId,t,this.priceManager,this.atomexBlockchainProvider)}getRedeemFees(t){return super.getRedeemFees(t)}refund(t){throw new Error("Method not implemented.")}getRefundFees(t){return super.getRefundFees(t)}};var Ce=class{constructor(){s(this,"_isStarted",!1)}get isStarted(){return this._isStarted}async start(){this.isStarted||(this._isStarted=!0)}stop(){!this.isStarted||(this._isStarted=!1)}getSwapTransactions(e){throw new Error("Method not implemented.")}};var pr={id:"ETH",name:"Ethereum",symbol:"ETH",blockchain:"ethereum",decimals:18,type:"native"},$e=[pr],Ke=[pr];var ur=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Activated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"address",name:"_sender",type:"address"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!0,internalType:"address",name:"_participant",type:"address"},{indexed:!1,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_countdown",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_payoff",type:"uint256"},{indexed:!1,internalType:"bool",name:"_active",type:"bool"}],name:"Initiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"Redeemed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Refunded",type:"event"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"swaps",outputs:[{internalType:"bytes32",name:"hashedSecret",type:"bytes32"},{internalType:"address payable",name:"initiator",type:"address"},{internalType:"address payable",name:"participant",type:"address"},{internalType:"uint256",name:"refundTimestamp",type:"uint256"},{internalType:"uint256",name:"countdown",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"bool",name:"active",type:"bool"},{internalType:"enum Atomex.State",name:"state",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"address payable",name:"_participant",type:"address"},{internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"initiate",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"add",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"activate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"redeem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}];var fo={atomexProtocolVersion:1,currencyId:"ETH",swapContractAddress:"0xe9c251cbb4881f9e056e40135e7d3ea9a7d037df",swapContractBlockId:"8168569",initiateOperation:{gasLimit:{withoutReward:2e5,withReward:21e4}},redeemOperation:{gasLimit:14e4},refundOperation:{gasLimit:9e4},defaultGasPriceInGwei:90,maxGasPriceInGwei:650,abi:ur},Me={ETH:fo};var xo=w(f({},Me.ETH),{swapContractAddress:"0x512fe6B803bA327DCeFBF2Cec7De333f761B0f2b",swapContractBlockId:"6954501"}),mt={ETH:xo};var Po=(o,e,t)=>{switch(e.type){case"native":return new te(o.atomexNetwork,t,o.providers.blockchainProvider,o.managers.walletsManager,o.managers.priceManager);case"erc-20":return new re(o.atomexNetwork,t,o.providers.blockchainProvider,o.managers.walletsManager,o.managers.priceManager);default:throw new Error(`Unknown Ethereum currency: ${e.id}`)}},hr=(o,e,t)=>{let r={},n=e.reduce((i,a)=>(i[a.id]=a,i),{});for(let i of Object.values(t)){let a=n[i.currencyId];if(!a)throw new Error(`The ${i.currencyId} currency not found`);r[a.id]={atomexProtocol:Po(o,a,i)}}return r},dt=o=>{let e="ethereum",t="https://mainnet.infura.io/v3/df01d4ef450640a2a48d9af4c2078eaf",r="https://goerli.infura.io/v3/df01d4ef450640a2a48d9af4c2078eaf",n=new Te(o.providers.blockchainProvider),i=new Ce;return o.atomexNetwork==="mainnet"?{rpcUrl:t,currencies:$e,currencyOptions:hr(o,$e,Me),blockchainToolkitProvider:new ee(e,t),balancesProvider:n,swapTransactionsProvider:i}:{rpcUrl:r,currencies:Ke,currencyOptions:hr(o,Ke,mt),blockchainToolkitProvider:new ee(e,r),balancesProvider:n,swapTransactionsProvider:i}};var lt=class{constructor(e){this.swapService=e;s(this,"events",{swapUpdated:new h});s(this,"_isStarted",!1);s(this,"handleSwapServiceSwapUpdated",e=>{this.events.swapUpdated.emit(e)})}get isStarted(){return this._isStarted}async start(){this.isStarted||(this.attachEvents(),await this.swapService.start(),this._isStarted=!0)}stop(){!this.isStarted||(this.detachEvents(),this.swapService.stop(),this._isStarted=!1)}getSwap(e,t,r=2){return this.swapService.getSwap(e,t)}getSwaps(e,t,r=2){return this.swapService.getSwaps(e,t)}attachEvents(){this.swapService.events.swapUpdated.addListener(this.handleSwapServiceSwapUpdated)}detachEvents(){this.swapService.events.swapUpdated.removeListener(this.handleSwapServiceSwapUpdated)}};import{SigningType as Oo}from"@airgap/beacon-sdk";import{TezosToolkit as zo}from"@taquito/taquito";import{b58cdecode as Co,prefix as Mo,validatePkAndExtractPrefix as Bo}from"@taquito/utils";import Eo from"bignumber.js";var qt=o=>o.blockchain==="tezos";var O={};R(O,{decodeSignature:()=>He,getRawMichelineSigningData:()=>ko,getRawSigningData:()=>So,getTezosSigningAlgorithm:()=>To,getWalletMichelineSigningData:()=>Ao});import{b58cdecode as wo,prefix as bo,Prefix as Be}from"@taquito/utils";var vo="54657a6f73205369676e6564204d6573736167653a20",gr=(o,e)=>{let t=v.stringToHexString(o),r=e?e+t:t,n=Fe.padStart((r.length/2).toString(16),8,"0");return"0501"+n+r},So=o=>v.stringToHexString(o),ko=o=>gr(o),Ao=o=>gr(o,vo),To=o=>{let e=o.substring(0,o.startsWith("tz")?3:4);switch(e){case Be.TZ1:case Be.EDPK:return"Ed25519:Blake2b";case Be.TZ2:case Be.SPPK:return"Blake2bWithEcdsa:Secp256k1";case Be.TZ3:case Be.P2PK:return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address/public key prefix: ${e} (${o})`)}},He=o=>{let e=o.startsWith("sig")?o.substring(0,3):o.substring(0,5),t=wo(o,bo[e]);return Buffer.from(t).toString("hex")};var pt=new Eo(1e6),Ee=o=>{let e=Bo(o),t=Co(o,Mo[e]);return $.from(t).toString("hex")};var ut=class{constructor(e,t,r){this.atomexNetwork=e;this.beaconWallet=t;s(this,"id","taquito");s(this,"toolkit");this.toolkit=new zo(r),this.toolkit.setWalletProvider(t)}getBlockchain(){return"tezos"}getAddress(){return this.beaconWallet.getPKH()}async getPublicKey(){var e;return(e=await this.beaconWallet.client.getActiveAccount())==null?void 0:e.publicKey}async sign(e){let[t,r,n]=await Promise.all([this.getAddress(),this.getPublicKey(),this.beaconWallet.client.requestSignPayload({payload:O.getWalletMichelineSigningData(e),signingType:Oo.MICHELINE})]);if(!r)throw new Error("BeaconWallet: public key is unavailable");let i=O.getTezosSigningAlgorithm(r),a=Ee(r),c=He(n.signature);return{address:t,algorithm:i,publicKeyBytes:a,signatureBytes:c,signingDataType:"tezos/wallet-micheline"}}};import{InMemorySigner as Io}from"@taquito/signer";import{TezosToolkit as Ro}from"@taquito/taquito";var ht=class{constructor(e,t,r){this.atomexNetwork=e;s(this,"id","taquito");s(this,"toolkit");s(this,"internalInMemorySigner");this.internalInMemorySigner=new Io(t),this.toolkit=new Ro(r),this.toolkit.setSignerProvider(this.internalInMemorySigner)}getBlockchain(){return"tezos"}getAddress(){return this.internalInMemorySigner.publicKeyHash()}getPublicKey(){return this.internalInMemorySigner.publicKey()}async sign(e){let t=O.getRawSigningData(e),[r,n,i]=await Promise.all([this.getAddress(),this.getPublicKey(),this.internalInMemorySigner.sign(t)]),a=Ee(n),c=i.sbytes.substring(i.bytes.length),m=O.getTezosSigningAlgorithm(n);return{address:r,algorithm:m,publicKeyBytes:a,signatureBytes:c}}};import{TezosToolkit as No}from"@taquito/taquito";var yt=class{constructor(e,t,r){this.atomexNetwork=e;this.templeWallet=t;s(this,"id","taquito");s(this,"blockchain","tezos");s(this,"toolkit");this.toolkit=new No(r),this.toolkit.setWalletProvider(t)}getBlockchain(){return"tezos"}getAddress(){return this.templeWallet.getPKH()}getPublicKey(){var e;return(e=this.templeWallet.permission)==null?void 0:e.publicKey}async sign(e){let[t,r,n]=await Promise.all([this.getAddress(),this.getPublicKey(),this.templeWallet.sign(O.getWalletMichelineSigningData(e))]);if(!r)throw new Error("TempleWallet: public key is unavailable");let i=O.getTezosSigningAlgorithm(r),a=Ee(r),c=He(n);return{address:t,algorithm:i,publicKeyBytes:a,signatureBytes:c,signingDataType:"tezos/wallet-micheline"}}};var oe=class{constructor(e,t,r){this.atomexNetwork=e;this.walletOrSecretKey=t;this.rpcUrl=r;s(this,"internalWallet");this.internalWallet=this.createInternalWallet(t)}get id(){return this.internalWallet.id}get toolkit(){return this.internalWallet.toolkit}getAddress(){return this.internalWallet.getAddress()}getPublicKey(){return this.internalWallet.getPublicKey()}getBlockchain(){return this.internalWallet.getBlockchain()}sign(e){return this.internalWallet.sign(e)}createInternalWallet(e){var t;if(typeof e=="string")return new ht(this.atomexNetwork,e,this.rpcUrl);if(((t=e.client)==null?void 0:t.name)!==void 0)return new ut(this.atomexNetwork,e,this.rpcUrl);if(e.permission!==void 0&&e.connected!==void 0)return new yt(this.atomexNetwork,e,this.rpcUrl);throw new Error("Unknown Tezos wallet")}static async bind(e,t){var a;let r="tezos",n=(a=e.atomexContext.providers.blockchainProvider.getNetworkOptions(r))==null?void 0:a.rpcUrl;if(!n)throw new Error(`There is not rpc url for ${r} network`);let i=new oe(e.atomexNetwork,t,n);return await e.wallets.addWallet(i),i}};import Ut from"bignumber.js";var Q=class{constructor(e,t,r,n,i,a){this.blockchain=e;this.atomexNetwork=t;this.atomexProtocolOptions=r;this.atomexBlockchainProvider=n;this.walletsManager=i;this.priceManager=a;s(this,"type","multi-chain")}get currencyId(){return this.atomexProtocolOptions.currencyId}get swapContractAddress(){return this.atomexProtocolOptions.swapContractAddress}getInitiateFees(e){let t=new Ut(this.atomexProtocolOptions.initiateOperation.fee).div(pt),r={estimated:t,max:t};return Promise.resolve(r)}getRedeemFees(e){let t=new Ut(this.atomexProtocolOptions.redeemOperation.fee).div(pt),r={estimated:t,max:t};return Promise.resolve(r)}getRefundFees(e){let t=new Ut(this.atomexProtocolOptions.refundOperation.fee).div(pt),r={estimated:t,max:t};return Promise.resolve(r)}async getReadonlyTezosToolkit(){let e=await this.atomexBlockchainProvider.getReadonlyToolkit("taquito",this.blockchain);if(!e)throw new Error("Tezos toolkit not found");return e}async getWallet(e){let t=await this.walletsManager.getWallet(e,this.blockchain,"taquito");if(!t)throw new Error(`${this.blockchain} Taqutio wallet not found`);return t}};var ne=class extends Q{constructor(t,r,n,i,a){super("tezos",t,r,n,i,a);this.atomexProtocolOptions=r}get currencyId(){return this.atomexProtocolOptions.currencyId}initiate(t){throw new Error("Method not implemented.")}getInitiateFees(t){return super.getInitiateFees(t)}redeem(t){throw new Error("Method not implemented.")}getRedeemReward(t){return B.getRedeemRewardInNativeCurrency(this.currencyId,t,this.priceManager,this.atomexBlockchainProvider)}getRedeemFees(t){return super.getRedeemFees(t)}refund(t){throw new Error("Method not implemented.")}getRefundFees(t){return super.getRefundFees(t)}};var ie=class extends Q{constructor(t,r,n,i,a){super("tezos",t,r,n,i,a);this.atomexProtocolOptions=r}get currencyId(){return this.atomexProtocolOptions.currencyId}initiate(t){throw new Error("Method not implemented.")}getInitiateFees(t){return super.getInitiateFees(t)}redeem(t){throw new Error("Method not implemented.")}getRedeemReward(t){return B.getRedeemRewardInToken(this.currencyId,t,this.priceManager,this.atomexBlockchainProvider)}getRedeemFees(t){return super.getRedeemFees(t)}refund(t){throw new Error("Method not implemented.")}getRefundFees(t){return super.getRefundFees(t)}};var ae=class extends Q{constructor(t,r,n,i,a){super("tezos",t,r,n,i,a);this.atomexProtocolOptions=r}get currencyId(){return this.atomexProtocolOptions.currencyId}initiate(t){throw new Error("Method not implemented.")}getInitiateFees(t){return super.getInitiateFees(t)}redeem(t){throw new Error("Method not implemented.")}getRedeemReward(t){return B.getRedeemRewardInToken(this.currencyId,t,this.priceManager,this.atomexBlockchainProvider)}getRedeemFees(t){return super.getRedeemFees(t)}refund(t){throw new Error("Method not implemented.")}getRefundFees(t){return super.getRefundFees(t)}};var se=class{constructor(e){s(this,"httpClient");this.httpClient=new I(e)}async getBalance(e,t){if(!qt(t))throw new Error("Not tezos blockchain currency provided");switch(t.type){case"native":return await this.getNativeTokenBalance(e,t);case"fa1.2":case"fa2":return await this.getTokenBalance(e,t)}}async getNativeTokenBalance(e,t){let r=`/v1/accounts/${e}/balance`,n=await this.httpClient.request({urlPath:r},!1);return Z(n,t.decimals)}async getTokenBalance(e,t){let r="/v1/tokens/balances",n={account:e,"token.contract":t.contractAddress,"token.tokenId":t.type==="fa1.2"?0:t.tokenId,select:"balance"},i=await this.httpClient.request({urlPath:r,params:n},!1),a=i.length?i[0]:0;if(a===void 0)throw new Error("Invalid response");return Z(a,t.decimals)}};var Oe=class{constructor(){s(this,"_isStarted",!1)}get isStarted(){return this._isStarted}async start(){this.isStarted||(this._isStarted=!0)}stop(){!this.isStarted||(this._isStarted=!1)}getSwapTransactions(e){throw new Error("Method not implemented.")}};import{TezosToolkit as _o}from"@taquito/taquito";var Lt=class{constructor(e){this.rpcUrl=e;s(this,"toolkitId","taquito");s(this,"toolkit")}getReadonlyToolkit(e){return e&&e!==Lt.BLOCKCHAIN?Promise.resolve(void 0):(this.toolkit||(this.toolkit=new _o(this.rpcUrl)),Promise.resolve(this.toolkit))}},G=Lt;s(G,"BLOCKCHAIN","tezos");var fr={id:"XTZ",name:"Tezos",symbol:"XTZ",blockchain:"tezos",decimals:6,type:"native"},Fo={id:"TZBTC",name:"tzBTC",symbol:"tzBTC",blockchain:"tezos",type:"fa1.2",contractAddress:"KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn",decimals:8},Do={id:"KUSD",name:"Kolibri USD",symbol:"kUSD",blockchain:"tezos",type:"fa1.2",contractAddress:"KT1K9gCRgaLRFKTErYt1wVxA3Frb9FjasjTV",decimals:18},xr={id:"USDT_XTZ",name:"Tether USD",symbol:"USDt",blockchain:"tezos",type:"fa2",tokenId:0,contractAddress:"KT1XnTn74bUtxHfDtBmm2bGZAQfhPbvKWR8o",decimals:6},Qe=[fr,Fo,Do,xr],Ge=[fr,w(f({},xr),{contractAddress:"KT1BWvRQnVVowZZLGkct9A7sdj5YEe8CdUhR"})];var je={atomexProtocolVersion:1,initiateOperation:{fee:11e3,gasLimit:11e4,storageLimit:350},redeemOperation:{fee:11e3,gasLimit:15e3,storageLimit:257},refundOperation:{fee:11e3,gasLimit:11e4,storageLimit:257}},Pr={atomexProtocolVersion:1,initiateOperation:{fee:35e4,gasLimit:4e5,storageLimit:250},redeemOperation:{fee:12e4,gasLimit:4e5,storageLimit:257},refundOperation:{fee:12e4,gasLimit:4e5,storageLimit:257}};var wr={atomexProtocolVersion:1,initiateOperation:{fee:35e4,gasLimit:4e5,storageLimit:250},redeemOperation:{fee:12e4,gasLimit:4e5,storageLimit:257},refundOperation:{fee:12e4,gasLimit:4e5,storageLimit:257}};var Wo={atomexProtocolVersion:1,currencyId:"XTZ",swapContractAddress:"KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL",swapContractBlockId:"513046",initiateOperation:{fee:2e3,gasLimit:11e3,storageLimit:257},redeemOperation:{fee:2e3,gasLimit:15e3,storageLimit:257},refundOperation:{fee:1600,gasLimit:13e3,storageLimit:257}},qo=w(f({},je),{currencyId:"TZBTC",swapContractAddress:"KT1Ap287P1NzsnToSJdA4aqSNjPomRaHBZSr",swapContractBlockId:"900350",redeemOperation:w(f({},je.redeemOperation),{gasLimit:18e4})}),Uo=w(f({},je),{currencyId:"KUSD",swapContractAddress:"KT1EpQVwqLGSH7vMCWKJnq6Uxi851sEDbhWL",swapContractBlockId:"1358868",redeemOperation:w(f({},je.redeemOperation),{gasLimit:11e4})}),Lo=w(f({},Pr),{currencyId:"USDT_XTZ",swapContractAddress:"KT1Ays1Chwx3ArnHGoQXchUgDsvKe9JboUjj",swapContractBlockId:"2496680"}),gt={XTZ:Wo,TZBTC:qo,KUSD:Uo,USDT_XTZ:Lo};var $o={atomexProtocolVersion:1,currencyId:"XTZ",swapContractAddress:"KT1SJMtHZFSPva5AzQEx5btBuQ8BjvXqort3",swapContractBlockId:"320132",initiateOperation:{fee:2e3,gasLimit:11e3,storageLimit:257},redeemOperation:{fee:2e3,gasLimit:15e3,storageLimit:257},refundOperation:{fee:1600,gasLimit:13e3,storageLimit:257}},Ko=w(f({},wr),{currencyId:"USDT_XTZ",swapContractAddress:"KT1BWvRQnVVowZZLGkct9A7sdj5YEe8CdUhR",swapContractBlockId:"665321"}),$t={XTZ:$o,USDT_XTZ:Ko};var Ho=(o,e,t)=>{switch(e.type){case"native":return new ne(o.atomexNetwork,t,o.providers.blockchainProvider,o.managers.walletsManager,o.managers.priceManager);case"fa1.2":return new ie(o.atomexNetwork,t,o.providers.blockchainProvider,o.managers.walletsManager,o.managers.priceManager);case"fa2":return new ae(o.atomexNetwork,t,o.providers.blockchainProvider,o.managers.walletsManager,o.managers.priceManager);default:throw new Error(`Unknown Tezos currency: ${e.id}`)}},br=(o,e,t)=>{let r={},n=e.reduce((i,a)=>(i[a.id]=a,i),{});for(let i of Object.values(t)){let a=n[i.currencyId];if(!a)throw new Error(`The ${i.currencyId} currency not found`);r[a.id]={atomexProtocol:Ho(o,a,i)}}return r},ft=o=>{let e="https://rpc.tzkt.io/mainnet/",t="https://rpc.tzkt.io/ithacanet/",r=new Oe;return o.atomexNetwork==="mainnet"?{rpcUrl:e,currencies:Qe,currencyOptions:br(o,Qe,gt),blockchainToolkitProvider:new G(e),balancesProvider:new se("https://api.mainnet.tzkt.io/"),swapTransactionsProvider:r}:{rpcUrl:t,currencies:Ge,currencyOptions:br(o,Ge,$t),blockchainToolkitProvider:new G(t),balancesProvider:new se("https://api.ghostnet.tzkt.io/"),swapTransactionsProvider:r}};import z from"bignumber.js";var xt=o=>o.map(t=>Qo(t)),Qo=o=>{let[e,t]=P.getBaseQuoteCurrenciesBySymbol(o.symbol);return{ask:new z(o.ask),bid:new z(o.bid),symbol:o.symbol,timeStamp:new Date(o.timeStamp),baseCurrency:e,quoteCurrency:t}},Go=(o,e,t=9)=>{var d,l;let[r,n]=P.getBaseQuoteCurrenciesBySymbol(o.name),i=(d=e.getCurrency(r))==null?void 0:d.decimals,a=(l=e.getCurrency(n))==null?void 0:l.decimals,c=i?Math.min(i,t):t,m=a?Math.min(a,t):t;return{name:o.name,baseCurrency:r,quoteCurrency:n,minimumQty:new z(o.minimumQty),decimals:{baseCurrency:c,quoteCurrency:m,price:t}}},kr=(o,e,t)=>o.map(r=>Go(r,e,t)),Pt=o=>{let[e,t]=P.getBaseQuoteCurrenciesBySymbol(o.symbol);return{updateId:o.updateId,symbol:o.symbol,baseCurrency:e,quoteCurrency:t,entries:o.entries.map(n=>Ar(n))}},Ar=o=>({side:o.side,price:new z(o.price),qtyProfile:o.qtyProfile}),Tr=(o,e)=>{let t=new Map;for(let r of o){let n=t.get(r.symbol)||e.getOrderBook(r.symbol);if(!n)continue;let i=Ar(r),a=n.entries.find(d=>d.side===i.side&&d.price.isEqualTo(i.price)),c=r.qtyProfile.length?a?n.entries.map(d=>d===a?w(f({},d),{qtyProfile:i.qtyProfile}):d):[...n.entries,i]:n.entries.filter(d=>d!==a),m=w(f({},n),{updateId:r.updateId,entries:c});t.set(m.symbol,m)}return Array.from(t.values())},Kt=(o,e)=>{var i;let t=e.getSymbol(o.symbol);if(!t)throw new Error(`"${o.symbol}" symbol not found`);let[r,n]=P.convertSymbolAndSideToFromAndToSymbolCurrencies(t,o.side,o.qty,o.price);return{id:o.id,from:r,to:n,clientOrderId:o.clientOrderId,side:o.side,symbol:o.symbol,leaveQty:new z(o.leaveQty),timeStamp:new Date(o.timeStamp),type:o.type,status:o.status,swapIds:((i=o.swaps)==null?void 0:i.map(a=>a.id))||[]}},Cr=(o,e)=>o.map(t=>Kt(t,e)),vr=o=>o.map(t=>({id:t.txId,blockId:t.blockHeight,confirmations:t.confirmations,currencyId:t.currency,status:t.status,type:t.type})),Ve=(o,e)=>{let t=e.getSymbol(o.symbol);if(!t)throw new Error(`"${o.symbol}" symbol not found`);let[r,n]=P.convertSymbolAndSideToFromAndToSymbolCurrencies(t,o.side,o.qty,o.price);return{isInitiator:o.isInitiator,secret:o.secret,secretHash:o.secretHash,id:Number(o.id),from:r,to:n,trade:{qty:new z(o.qty),price:new z(o.price),side:o.side,symbol:o.symbol},timeStamp:new Date(o.timeStamp),counterParty:{status:o.counterParty.status,transactions:vr(o.counterParty.transactions),requisites:w(f({},o.counterParty.requisites),{rewardForRedeem:new z(o.counterParty.requisites.rewardForRedeem)}),trades:Sr(o.counterParty.trades)},user:{status:o.user.status,transactions:vr(o.user.transactions),requisites:w(f({},o.user.requisites),{rewardForRedeem:new z(o.user.requisites.rewardForRedeem)}),trades:Sr(o.user.trades)}}},Sr=o=>o.map(t=>({orderId:t.orderId,price:new z(t.price),qty:new z(t.qty)})),Mr=(o,e)=>o.map(t=>Ve(t,e)),Br=(o,e)=>{let t=e.getSymbol(o.symbol);if(!t)throw new Error(`"${o.symbol}" symbol not found`);let[r,n]=P.convertSymbolAndSideToFromAndToSymbolCurrencies(t,o.side,o.qty,o.price);return{id:o.id,clientOrderId:o.clientOrderId,side:o.side,status:o.status,leaveQty:new z(o.leaveQty),swapIds:o.swaps,symbol:o.symbol,type:o.type,timeStamp:new Date(o.timeStamp),from:r,to:n}};var ce=class{constructor(e){s(this,"atomexNetwork");s(this,"events",{swapUpdated:new h,orderUpdated:new h,orderBookSnapshot:new h,orderBookUpdated:new h,topOfBookUpdated:new h});s(this,"authorizationManager");s(this,"currenciesProvider");s(this,"exchangeSymbolsProvider");s(this,"apiBaseUrl");s(this,"httpClient");s(this,"_isStarted",!1);this.atomexNetwork=e.atomexNetwork,this.authorizationManager=e.authorizationManager,this.currenciesProvider=e.currenciesProvider,this.exchangeSymbolsProvider=e.exchangeSymbolsProvider,this.apiBaseUrl=e.apiBaseUrl,this.httpClient=new I(this.apiBaseUrl)}get isStarted(){return this._isStarted}async start(){this.isStarted||(this._isStarted=!0)}stop(){!this.isStarted||(this._isStarted=!1)}async getOrder(e,t){let r=`/v1/Orders/${t}`,n=this.getRequiredAuthToken(e),i=await this.httpClient.request({urlPath:r,authToken:n});return i?Kt(i,this.exchangeSymbolsProvider):void 0}async getOrders(e,t){let r="/v1/Orders",n=this.getRequiredAuthToken(e),i=w(f({},t),{sortAsc:void 0,sort:(t==null?void 0:t.sortAsc)!==void 0?t.sortAsc?"Asc":"Desc":void 0}),a=await this.httpClient.request({urlPath:r,authToken:n,params:i});return a?Cr(a,this.exchangeSymbolsProvider):[]}async getSymbols(){let e="/v1/Symbols",t=await this.httpClient.request({urlPath:e});return t?kr(t,this.currenciesProvider):[]}async getTopOfBook(e){let t="/v1/MarketData/quotes",r;if(e!=null&&e.length)if(typeof e[0]=="string")r=e;else{let a=this.exchangeSymbolsProvider.getSymbolsMap();r=e.map(c=>P.convertFromAndToCurrenciesToSymbolAndSide(a,c.from,c.to)[0].name)}let n={symbols:r==null?void 0:r.join(",")},i=await this.httpClient.request({urlPath:t,params:n});return i?xt(i):[]}async getOrderBook(e){let t="/v1/MarketData/book",r;if(typeof e=="string")r=e;else{let a=this.exchangeSymbolsProvider.getSymbolsMap();r=P.convertFromAndToCurrenciesToSymbolAndSide(a,e.from,e.to)[0].name}let n={symbol:r},i=await this.httpClient.request({urlPath:t,params:n});return i?Pt(i):void 0}async addOrder(e,t){let r="/v1/Orders",n=this.getRequiredAuthToken(e),i,a,c,m;if(M.isOrderPreview(t.orderBody)){i=t.orderBody.symbol,a=t.orderBody.side;let x=P.getBaseQuoteCurrenciesBySymbol(i)[0]===t.orderBody.from.currencyId?"from":"to";c=t.orderBody[x].amount,m=t.orderBody[x].price}else[i,a]=[t.orderBody.symbol,t.orderBody.side],c=t.orderBody.amount,m=t.orderBody.price;let d={clientOrderId:t.clientOrderId,symbol:i,side:a,type:t.orderBody.type,requisites:t.requisites?{secretHash:t.requisites.secretHash,receivingAddress:t.requisites.receivingAddress,refundAddress:t.requisites.refundAddress,rewardForRedeem:t.requisites.rewardForRedeem.toNumber(),lockTime:t.requisites.lockTime,quoteCurrencyContract:t.requisites.quoteCurrencyContract,baseCurrencyContract:t.requisites.baseCurrencyContract}:void 0,proofsOfFunds:t.proofsOfFunds.map(p=>({address:p.address,currency:p.currency,timeStamp:p.timeStamp,message:p.message,publicKey:p.publicKey,signature:p.signature,algorithm:p.algorithm})),qty:c.toNumber(),price:m.toNumber()},l=await this.httpClient.request({urlPath:r,authToken:n,method:"POST",payload:d});if(l===void 0)throw new Error("Unexpected response dto");return l.orderId}async cancelOrder(e,t){let r=`/v1/Orders/${t.orderId}`,n=this.getRequiredAuthToken(e),i,a;if(t.symbol&&t.side)[i,a]=[t.symbol,t.side];else if(t.from&&t.to){let d=this.exchangeSymbolsProvider.getSymbolsMap(),l=P.convertFromAndToCurrenciesToSymbolAndSide(d,t.from,t.to);i=l[0].name,a=l[1]}else throw new Error("Invalid cancelOrderRequest argument passed");let c={symbol:i,side:a},m=await this.httpClient.request({urlPath:r,authToken:n,params:c,method:"DELETE"});if(m===void 0)throw new Error("Unexpected response dto");return m}async cancelAllOrders(e,t){let r="/v1/Orders",n=this.getRequiredAuthToken(e),i,a;if(t.symbol&&t.side)[i,a]=[t.symbol,t.side];else if(t.from&&t.to){let m=this.exchangeSymbolsProvider.getSymbolsMap(),d=P.convertFromAndToCurrenciesToSymbolAndSide(m,t.from,t.to);i=d[0].name,a=d[1],t.cancelAllDirections&&(a="All")}else throw new Error("Invalid cancelAllOrdersRequest argument passed");let c=await this.httpClient.request({urlPath:r,authToken:n,params:{symbol:i,side:a,forAllConnections:t.forAllConnections},method:"DELETE"});if(c===void 0)throw new Error("Unexpected response dto");return c}getSwapTransactions(e){throw new Error("Method not implemented.")}async getSwap(e,t){let r=`/v1/Swaps/${e}`,i={userIds:this.getUserIds(t).join(",")},a=await this.httpClient.request({urlPath:r,params:i});return a?Ve(a,this.exchangeSymbolsProvider):void 0}async getSwaps(e,t){let r="/v1/Swaps",n=this.getUserIds(e),i=w(f({},t),{sortAsc:void 0,sort:(t==null?void 0:t.sortAsc)!==void 0?t.sortAsc?"Asc":"Desc":void 0,userIds:n.join(",")}),a=await this.httpClient.request({urlPath:r,params:i});return a?Mr(a,this.exchangeSymbolsProvider):[]}getUserIds(e){let r=(Array.isArray(e)?e:[e]).map(n=>{var i;return(i=this.authorizationManager.getAuthToken(n))==null?void 0:i.userId}).filter(n=>n);if(!r.length)throw new Error("Incorrect accountAddresses");return r}getRequiredAuthToken(e){var r;let t=(r=this.authorizationManager.getAuthToken(e))==null?void 0:r.value;if(!t)throw new Error(`Cannot find auth token for address: ${e}`);return t}};var me=class{constructor(e,t){this.url=e;this.authToken=t;s(this,"events",{messageReceived:new h,closed:new h});s(this,"_socket");s(this,"onMessageReceived",e=>{this.events.messageReceived.emit(JSON.parse(e.data))});s(this,"onClosed",e=>{this.events.closed.emit(this,e)})}get socket(){if(!this._socket)throw new Error("Internal websocket is not created. Use the connect method first");return this._socket}async connect(){return this.disconnect(),new Promise(e=>{let t=this.authToken?["access_token",this.authToken]:void 0;this._socket=new WebSocket(this.url,t),this.socket.addEventListener("message",this.onMessageReceived),this.socket.addEventListener("error",this.onError),this.socket.addEventListener("close",this.onClosed),this.socket.addEventListener("open",()=>e())})}disconnect(){this._socket&&(this.socket.removeEventListener("message",this.onMessageReceived),this.socket.removeEventListener("error",this.onError),this.socket.removeEventListener("close",this.onClosed),this.socket.close())}subscribe(e){let t={method:"subscribe",data:e,requestId:Date.now()};this.socket.send(JSON.stringify(t))}unsubscribe(e){let t={method:"unsubscribe",data:e,requestId:Date.now()};this.socket.send(JSON.stringify(t))}onError(e){throw new Error(`Websocket received error: ${JSON.stringify(e)}`)}};var Ht=class{constructor(e,t){this.webSocketApiBaseUrl=e;this.authorizationManager=t;s(this,"events",{messageReceived:new h});s(this,"sockets",new Map);s(this,"_isStarted",!1);s(this,"onAuthorized",async e=>{this.removeSocket(e.userId);let t=new me(new URL(Ht.EXCHANGE_URL_PATH,this.webSocketApiBaseUrl),e.value);t.events.messageReceived.addListener(this.onSocketMessageReceived),t.events.closed.addListener(this.onClosed),this.sockets.set(e.userId,t),await t.connect()});s(this,"onUnauthorized",e=>{this.removeSocket(e.userId)});s(this,"onSocketMessageReceived",e=>{this.events.messageReceived.emit(e)});s(this,"onClosed",(e,t)=>{setTimeout(()=>{e.connect()},1e3)})}get isStarted(){return this._isStarted}async start(){this.isStarted||(this.subscribeOnAuthEvents(),this._isStarted=!0)}stop(){!this.isStarted||(this.sockets.forEach((e,t)=>{this.removeSocket(t)}),this._isStarted=!1)}subscribeOnAuthEvents(){this.authorizationManager.events.authorized.addListener(this.onAuthorized),this.authorizationManager.events.unauthorized.addListener(this.onUnauthorized)}removeSocket(e){let t=this.sockets.get(e);t&&(t.events.messageReceived.removeListener(this.onSocketMessageReceived),t.events.closed.removeListener(this.onClosed),this.sockets.delete(e),t.disconnect())}},ze=Ht;s(ze,"EXCHANGE_URL_PATH","/ws/exchange");var Ze=class{constructor(e){this.webSocketApiBaseUrl=e;s(this,"events",{messageReceived:new h});s(this,"socket");s(this,"_isStarted",!1);s(this,"onSocketClosed",(e,t)=>{setTimeout(async()=>{await e.connect(),this.subscribeOnStreams(e)},1e3)});s(this,"onSocketMessageReceived",e=>{this.events.messageReceived.emit(e)});this.socket=new me(new URL(Ze.MARKET_DATA_URL_PATH,this.webSocketApiBaseUrl))}get isStarted(){return this._isStarted}async start(){this.isStarted||(this.socket.events.messageReceived.addListener(this.onSocketMessageReceived),this.socket.events.closed.addListener(this.onSocketClosed),await this.socket.connect(),this.subscribeOnStreams(this.socket),this._isStarted=!0)}stop(){!this.isStarted||(this.socket.events.messageReceived.removeListener(this.onSocketMessageReceived),this.socket.events.closed.removeListener(this.onSocketClosed),this.socket.disconnect(),this._isStarted=!1)}subscribeOnStreams(e){e.subscribe(Ze.TOP_OF_BOOK_STREAM),e.subscribe(Ze.ORDER_BOOK_STREAM)}},j=Ze;s(j,"MARKET_DATA_URL_PATH","/ws/marketdata"),s(j,"TOP_OF_BOOK_STREAM","topOfBook"),s(j,"ORDER_BOOK_STREAM","orderBook");var de=class{constructor(e){s(this,"atomexNetwork");s(this,"events",{swapUpdated:new h,orderUpdated:new h,orderBookSnapshot:new h,orderBookUpdated:new xe,topOfBookUpdated:new h});s(this,"authorizationManager");s(this,"exchangeSymbolsProvider");s(this,"currenciesProvider");s(this,"webSocketApiBaseUrl");s(this,"marketDataWebSocketClient");s(this,"exchangeWebSocketClient");s(this,"orderBookProvider");s(this,"_isStarted",!1);s(this,"onSocketMessageReceived",e=>{switch(e.event){case"order":this.events.orderUpdated.emit(Br(e.data,this.exchangeSymbolsProvider));break;case"swap":this.events.swapUpdated.emit(Ve(e.data,this.exchangeSymbolsProvider));break;case"topOfBook":this.events.topOfBookUpdated.emit(xt(e.data));break;case"snapshot":this.onOrderBookSnapshotReceived(e.data);break;case"entries":this.onOrderBookEntriesReceived(e.data);break}});this.atomexNetwork=e.atomexNetwork,this.authorizationManager=e.authorizationManager,this.currenciesProvider=e.currenciesProvider,this.exchangeSymbolsProvider=e.exchangeSymbolsProvider,this.orderBookProvider=e.orderBookProvider,this.webSocketApiBaseUrl=e.webSocketApiBaseUrl,this.exchangeWebSocketClient=new ze(this.webSocketApiBaseUrl,this.authorizationManager),this.marketDataWebSocketClient=new j(this.webSocketApiBaseUrl)}get isStarted(){return this._isStarted}async start(){this.isStarted||(this.exchangeWebSocketClient.events.messageReceived.addListener(this.onSocketMessageReceived),this.marketDataWebSocketClient.events.messageReceived.addListener(this.onSocketMessageReceived),await Promise.all([this.exchangeWebSocketClient.start(),this.marketDataWebSocketClient.start()]),this._isStarted=!0)}stop(){!this.isStarted||(this.exchangeWebSocketClient.events.messageReceived.removeListener(this.onSocketMessageReceived),this.marketDataWebSocketClient.events.messageReceived.removeListener(this.onSocketMessageReceived),this.exchangeWebSocketClient.stop(),this.marketDataWebSocketClient.stop(),this._isStarted=!1)}getOrder(e,t){throw new Error("Method not implemented.")}getOrders(e,t){throw new Error("Method not implemented.")}getSymbols(){throw new Error("Method not implemented.")}getTopOfBook(e){throw new Error("Method not implemented.")}async getOrderBook(e){throw new Error("Method not implemented.")}addOrder(e,t){throw new Error("Method not implemented.")}cancelOrder(e,t){throw new Error("Method not implemented.")}cancelAllOrders(e,t){throw new Error("Method not implemented.")}getSwapTransactions(e){throw new Error("Method not implemented.")}getSwap(e,t){throw new Error("Method not implemented.")}getSwaps(e,t){throw new Error("Method not implemented.")}onOrderBookSnapshotReceived(e){let t=Pt(e);this.orderBookProvider.setOrderBook(t.symbol,t),this.events.orderBookSnapshot.emit(t)}onOrderBookEntriesReceived(e){let t=Tr(e,this.orderBookProvider);for(let r of t)this.orderBookProvider.setOrderBook(r.symbol,r),this.events.orderBookUpdated.emit(r.symbol,r)}};var Ie=class{constructor(e,t,r){this.atomexNetwork=e;this.restAtomexClient=t;this.webSocketAtomexClient=r;s(this,"events");s(this,"_isStarted",!1);N.ensureNetworksAreSame(this,t),N.ensureNetworksAreSame(this,r),this.events={swapUpdated:this.webSocketAtomexClient.events.swapUpdated,orderBookSnapshot:this.webSocketAtomexClient.events.orderBookSnapshot,orderBookUpdated:this.webSocketAtomexClient.events.orderBookUpdated,orderUpdated:this.webSocketAtomexClient.events.orderUpdated,topOfBookUpdated:this.webSocketAtomexClient.events.topOfBookUpdated}}get isStarted(){return this._isStarted}async start(){this.isStarted||(await Promise.all([this.webSocketAtomexClient.start(),this.restAtomexClient.start()]),this._isStarted=!0)}stop(){!this.isStarted||(this.webSocketAtomexClient.stop(),this.restAtomexClient.stop(),this._isStarted=!1)}getOrder(e,t){return this.restAtomexClient.getOrder(e,t)}getOrders(e,t){return this.restAtomexClient.getOrders(e,t)}getSymbols(){return this.restAtomexClient.getSymbols()}getTopOfBook(e){return this.restAtomexClient.getTopOfBook(e)}async getOrderBook(e){return this.restAtomexClient.getOrderBook(e)}addOrder(e,t){return this.restAtomexClient.addOrder(e,t)}cancelOrder(e,t){return this.restAtomexClient.cancelOrder(e,t)}cancelAllOrders(e,t){return this.restAtomexClient.cancelAllOrders(e,t)}getSwapTransactions(e){return this.restAtomexClient.getSwapTransactions(e)}getSwap(e,t){return this.restAtomexClient.getSwap(e,t)}getSwaps(e,t){return this.restAtomexClient.getSwaps(e,t)}};var Qt=(o,e)=>new Ie(o.atomexNetwork,new ce({atomexNetwork:o.atomexNetwork,authorizationManager:o.managers.authorizationManager,currenciesProvider:o.providers.currenciesProvider,exchangeSymbolsProvider:o.providers.exchangeSymbolsProvider,apiBaseUrl:e.apiBaseUrl}),new de({atomexNetwork:o.atomexNetwork,authorizationManager:o.managers.authorizationManager,currenciesProvider:o.providers.currenciesProvider,exchangeSymbolsProvider:o.providers.exchangeSymbolsProvider,orderBookProvider:o.providers.orderBookProvider,webSocketApiBaseUrl:e.webSocketApiBaseUrl}));var Xe=(r=>(r[r.Local=1]="Local",r[r.Remote=2]="Remote",r[r.All=3]="All",r))(Xe||{});var Je=class{constructor(e){s(this,"events",{authorized:new h,unauthorized:new h,authTokenExpiring:new h,authTokenExpired:new h});s(this,"atomexNetwork");s(this,"walletsManager");s(this,"store");s(this,"authorizationUrl");s(this,"expiringNotificationTimeInSeconds");s(this,"_authTokenData",new Map);s(this,"_isStarted",!1);s(this,"authTokenExpiringTimeoutCallback",e=>{let t=this._authTokenData.get(e.address);if(!t)return;clearTimeout(t.watcherId);let r=e.expired.getTime()-Date.now(),n=setTimeout(this.authTokenExpiredTimeoutCallback,At(r),e);this._authTokenData.set(e.address,w(f({},t),{watcherId:n})),this.events.authTokenExpiring.emit(e)});s(this,"authTokenExpiredTimeoutCallback",e=>{this.unregisterAuthToken(e),this.events.authTokenExpired.emit(e)});this.atomexNetwork=e.atomexNetwork,this.store=e.store,this.walletsManager=e.walletsManager,N.ensureNetworksAreSame(this,this.walletsManager),this.authorizationUrl=new URL(Je.DEFAULT_GET_AUTH_TOKEN_URI,e.authorizationBaseUrl),this.expiringNotificationTimeInSeconds=e.expiringNotificationTimeInSeconds||Je.DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS}get isStarted(){return this._isStarted}async start(){this.isStarted||(this._isStarted=!0)}stop(){if(!!this.isStarted){for(let e of this.authTokenData)this.untrackAuthToken(e[1].watcherId);this._isStarted=!1}}get authTokenData(){return this._authTokenData}getAuthToken(e){var t;return(t=this.authTokenData.get(e))==null?void 0:t.authToken}async authorize({address:e,authTokenSource:t=3,blockchain:r,authMessage:n=Je.DEFAULT_AUTH_MESSAGE}){if((t&1)===1){let p=this.getAuthToken(e)||await this.loadAuthTokenFromStore(e);if(p&&!this.isTokenExpiring(p))return p}if((t&2)!==2)return;let i=await this.walletsManager.getWallet(e,r);if(!i)throw new Error(`Not found: the corresponding wallet by the ${e} address`);let a=this.getAuthorizationTimeStamp(n),c=await i.sign(n+a);if(c.address!==e)throw new Error("Invalid address in the signed data");let m={message:n,publicKey:c.publicKeyBytes,algorithm:c.algorithm,signingDataType:c.signingDataType,signature:c.signatureBytes,timeStamp:a},d=await this.requestAuthToken(m),l={value:d.token,userId:d.id,address:e,expired:new Date(d.expires),request:m};return await this.registerAuthToken(l,!0),l}async unauthorize(e){let t=this.getAuthToken(e);return t?this.unregisterAuthToken(t):!1}async loadAuthTokenFromStore(e){let t=await this.store.getAuthToken(e);if(!!t)return await this.registerAuthToken(t,!1)}async registerAuthToken(e,t){let r=this.trackAuthToken(e);if(!r)return;let n={authToken:e,watcherId:r};return this._authTokenData.set(e.address,n),t&&(e=await this.store.upsertAuthToken(e.address,e)),this.events.authorized.emit(e),e}async unregisterAuthToken(e){let t=this._authTokenData.get(e.address);if(!t)return!1;this.untrackAuthToken(t.watcherId);let r=await this.store.removeAuthToken(e)&&this._authTokenData.delete(e.address);return r&&this.events.unauthorized.emit(e),r}trackAuthToken(e){let t=e.expired.getTime()-Date.now();if(t<=0){this.store.removeAuthToken(e),this.events.authTokenExpired.emit(e);return}let r=t-this.expiringNotificationTimeInSeconds*1e3;return setTimeout(this.authTokenExpiringTimeoutCallback,At(r),e)}untrackAuthToken(e){clearTimeout(e)}getAuthorizationTimeStamp(e){return Date.now()}async requestAuthToken(e){let t=await fetch(this.authorizationUrl.href,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(await t.text());return t.json()}isTokenExpiring(e){return e.expired.getTime()-Date.now()<=this.expiringNotificationTimeInSeconds*1e3}},U=Je;s(U,"DEFAULT_AUTH_MESSAGE","Signing in "),s(U,"DEFAULT_GET_AUTH_TOKEN_URI","/v1/token"),s(U,"DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS",60);var le=class{mapAuthTokenToSerializedAuthToken(e){return{a:e.address,u:e.userId,e:e.expired.getTime(),v:e.value,r:this.mapAuthTokenRequestDataToSerializedAuthTokenRequestData(e.request)}}mapSerializedAuthTokenToAuthToken(e){return e.r?{address:e.a,userId:e.u,expired:new Date(e.e),value:e.v,request:this.mapSerializedAuthTokenRequestDataToAuthTokenRequestData(e.r)}:null}mapAuthTokenRequestDataToSerializedAuthTokenRequestData(e){return{m:e.message,t:e.timeStamp,pk:e.publicKey,s:e.signature,a:e.algorithm,sdt:e.signingDataType}}mapSerializedAuthTokenRequestDataToAuthTokenRequestData(e){return{message:e.m,timeStamp:e.t,publicKey:e.pk,signature:e.s,algorithm:e.a,signingDataType:e.sdt}}};var Gt=class{constructor(e,t,r=Gt.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}getAuthToken(e){let t=localStorage.getItem(this.getKey(e));return t&&this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(JSON.parse(t))||void 0}getAuthTokens(e){return e.map(t=>this.getAuthToken(t)).filter(Boolean)}upsertAuthToken(e,t){let r=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!r)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return localStorage.setItem(this.getKey(e),JSON.stringify(r)),t}removeAuthToken(e){return localStorage.removeItem(this.getKey(e)),!0}getKey(e){return this.keyPrefix+e}},Ye=Gt;s(Ye,"DefaultKeyPrefix","authToken:");var jt=class{constructor(e,t,r=jt.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}get key(){return this.keyPrefix}getAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]&&(this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(t[e])||void 0)}getAuthTokens(e){let t=this.getSerializedAuthTokensStoreObject();return Object.values(t).map(r=>this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(r)).filter(r=>!!r&&e.indexOf(r.address)>-1)}upsertAuthToken(e,t){let r=this.getSerializedAuthTokensStoreObject(),n=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!n)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return r[e]=n,this.localStorage.setItem(this.key,JSON.stringify(r)),t}removeAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]?(delete t[e],Object.keys(t).length?this.localStorage.setItem(this.key,JSON.stringify(t)):this.localStorage.removeItem(this.key),!0):!1}getSerializedAuthTokensStoreObject(){let e=this.localStorage.getItem(this.key);return e?JSON.parse(e):{}}},et=jt;s(et,"DefaultKeyPrefix","authTokens");var pe=class{constructor(e="single-key",t=new le){s(this,"storeStrategy");this.storeStrategy=typeof e=="string"?this.createPreDefinedStoreStrategy(e,t):e}getAuthToken(e){return Promise.resolve(this.storeStrategy.getAuthToken(e))}getAuthTokens(...e){return Promise.resolve(this.storeStrategy.getAuthTokens(e))}upsertAuthToken(e,t){return Promise.resolve(this.storeStrategy.upsertAuthToken(e,t))}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.storeStrategy.removeAuthToken(t))}createPreDefinedStoreStrategy(e,t){switch(e){case"single-key":return new et(globalThis.localStorage,t);case"multiple-keys":return new Ye(globalThis.localStorage,t);default:throw new Error(`Unknown the store strategy name: ${e}`)}}};var Re=class{constructor(){s(this,"authTokensMap",new Map)}getAuthToken(e){return Promise.resolve(this.authTokensMap.get(e))}getAuthTokens(...e){return Promise.resolve(e.reduce((t,r)=>{let n=this.authTokensMap.get(r);return n&&t.push(n),t},[]))}upsertAuthToken(e,t){return this.authTokensMap.set(e,t),Promise.resolve(t)}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.authTokensMap.delete(t))}};var Vt=(o,e,t)=>{let r=globalThis.window?"browser":"node";return new U({atomexNetwork:o.atomexNetwork,walletsManager:o.managers.walletsManager,authorizationBaseUrl:e.authorizationBaseUrl,store:r==="browser"?new pe(e.store.browser.storeStrategy):new Re})};var Er="https://api.atomex.me",jo={authorization:{authorizationBaseUrl:Er,store:{node:{},browser:{storeStrategy:"single-key"}}},exchange:{apiBaseUrl:Er,webSocketApiBaseUrl:"wss://api.atomex.me"}},Or="https://api.test.atomex.me",Vo={authorization:{authorizationBaseUrl:Or,store:{node:{},browser:{storeStrategy:"single-key"}}},exchange:{apiBaseUrl:Or,webSocketApiBaseUrl:"wss://ws.api.test.atomex.me"}},Zt={mainnet:jo,testnet:Vo};var ue=class{constructor(e,t=new ve(e.atomexNetwork)){this.options=e;this.atomexContext=t;s(this,"customAuthorizationManagerFactory");s(this,"customWalletsManagerFactory");s(this,"customExchangeManagerFactory")}get controlledAtomexContext(){return this.atomexContext}useAuthorizationManager(e){return this.customAuthorizationManagerFactory=e,this}useWalletsManager(e){return this.customWalletsManagerFactory=e,this}useExchangeManager(e){return this.customExchangeManagerFactory=e,this}build(){let e=new Ue;this.controlledAtomexContext.providers.blockchainProvider=e,this.controlledAtomexContext.providers.currenciesProvider=e,this.controlledAtomexContext.providers.exchangeSymbolsProvider=this.createExchangeSymbolsProvider(),this.controlledAtomexContext.providers.orderBookProvider=this.createOrderBookProvider(),this.controlledAtomexContext.managers.walletsManager=this.createWalletsManager(),this.controlledAtomexContext.managers.authorizationManager=this.createAuthorizationManager();let t=this.createDefaultExchangeService();this.controlledAtomexContext.services.exchangeService=t,this.controlledAtomexContext.services.swapService=t,this.controlledAtomexContext.managers.exchangeManager=this.createExchangeManager(),this.controlledAtomexContext.managers.swapManager=this.createSwapManager(),this.controlledAtomexContext.managers.priceManager=this.createPriceManager(),this.controlledAtomexContext.managers.balanceManager=this.createBalanceManager();let r=this.createDefaultBlockchainOptions();return new be({atomexContext:this.atomexContext,managers:{walletsManager:this.atomexContext.managers.walletsManager,authorizationManager:this.atomexContext.managers.authorizationManager,exchangeManager:this.atomexContext.managers.exchangeManager,swapManager:this.atomexContext.managers.swapManager,balanceManager:this.atomexContext.managers.balanceManager,priceManager:this.atomexContext.managers.priceManager},blockchains:r})}createExchangeSymbolsProvider(){return new X}createOrderBookProvider(){return new we}createAuthorizationManager(){let e=Zt[this.atomexContext.atomexNetwork].authorization;return this.customAuthorizationManagerFactory?this.customAuthorizationManagerFactory(this.atomexContext,e,this.options):Vt(this.atomexContext,e,this.options)}createWalletsManager(){return this.customWalletsManagerFactory?this.customWalletsManagerFactory(this.atomexContext,this.options):new ke(this.atomexContext.atomexNetwork)}createDefaultExchangeService(){let e=Zt[this.atomexContext.atomexNetwork].exchange;return Qt(this.atomexContext,e)}createExchangeManager(){return this.customExchangeManagerFactory?this.customExchangeManagerFactory(this.atomexContext,this.options):new Pe({authorizationManager:this.atomexContext.managers.authorizationManager,exchangeService:this.atomexContext.services.exchangeService,symbolsProvider:this.atomexContext.providers.exchangeSymbolsProvider,orderBookProvider:this.atomexContext.providers.orderBookProvider})}createSwapManager(){return new lt(this.atomexContext.services.swapService)}createBalanceManager(){return new Se(this.atomexContext.providers.blockchainProvider)}createDefaultBlockchainOptions(){return{tezos:ft(this.atomexContext),ethereum:dt(this.atomexContext)}}createPriceManager(){return new J(this.atomexContext.providers.currenciesProvider,new Map([["binance",new W],["kraken",new K],["atomex",new Y(this.atomexContext.services.exchangeService)]]))}};var zr=o=>new ue(w(f({},o),{atomexNetwork:"mainnet"})).build(),Ir=o=>new ue(w(f({},o),{atomexNetwork:"testnet"})).build();var Xt={};R(Xt,{Atomex:()=>tt,EthereumHelpers:()=>ot,FA12Helpers:()=>it,FA2Helpers:()=>at,Helpers:()=>he,TezosHelpers:()=>L,dt2ts:()=>V,now:()=>rt});var u={api:{mainnet:{baseUrl:"https://api.atomex.me"},testnet:{baseUrl:"https://api.test.atomex.me"},localhost:{baseUrl:"http://127.0.0.1:5000"}},blockchains:{ethereum:{rpc:{mainnet:{chainID:1,rpc:"https://mainnet.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10},testnet:{chainID:5,rpc:"https://goerli.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10}}},tezos:{rpc:{mainnet:{chainID:"NetXdQprcVkpaWU",rpc:"https://rpc.tzkt.io/mainnet/",blockTime:30,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250},testnet:{chainID:"NetXnHfVqm9iesp",rpc:"https://rpc.tzkt.io/ithacanet/",blockTime:15,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250}}}},currencies:{ETH:{contracts:{mainnet:{address:"0xe9c251cbb4881f9e056e40135e7d3ea9a7d037df",initiateGasLimitWithoutReward:2e5,initiateGasLimitWithReward:21e4,redeemGasLimit:14e4},testnet:{address:"0x512fe6B803bA327DCeFBF2Cec7De333f761B0f2b",initiateGasLimitWithoutReward:2e5,initiateGasLimitWithReward:21e4,redeemGasLimit:14e4},abi:[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Activated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"address",name:"_sender",type:"address"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!0,internalType:"address",name:"_participant",type:"address"},{indexed:!1,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_countdown",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_payoff",type:"uint256"},{indexed:!1,internalType:"bool",name:"_active",type:"bool"}],name:"Initiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"Redeemed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Refunded",type:"event"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"swaps",outputs:[{internalType:"bytes32",name:"hashedSecret",type:"bytes32"},{internalType:"address payable",name:"initiator",type:"address"},{internalType:"address payable",name:"participant",type:"address"},{internalType:"uint256",name:"refundTimestamp",type:"uint256"},{internalType:"uint256",name:"countdown",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"bool",name:"active",type:"bool"},{internalType:"enum Atomex.State",name:"state",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"address payable",name:"_participant",type:"address"},{internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"initiate",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"add",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"activate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"redeem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}]},decimals:{original:18,displayed:4},blockchain:"ethereum"},XTZ:{contracts:{mainnet:{address:"KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL",redeemTxSize:133,initiateTxSize:200,gasLimit:15e3},testnet:{address:"KT1SJMtHZFSPva5AzQEx5btBuQ8BjvXqort3",redeemTxSize:133,initiateTxSize:200,gasLimit:85e3},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}],annots:["%fund"]},{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}],annots:["%withdraw"]}]},withdraw:{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}]},refund:{prim:"bytes",annots:[":hashed_secret"]},redeem:{prim:"bytes",annots:[":secret"]},initiate:{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate"]},fund:{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}]},add:{prim:"bytes",annots:[":hashed_secret"]}}},decimals:{original:6,displayed:3},blockchain:"tezos"},TZBTC:{contracts:{mainnet:{address:"KT1Ap287P1NzsnToSJdA4aqSNjPomRaHBZSr",tokenAddress:"KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},testnet:{address:"KT1Jj1jzDQbDRHt4u7M73DUrBDV1napRbNFr",tokenAddress:"",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:8,displayed:4},blockchain:"tezos"},USDT_XTZ:{contracts:{mainnet:{address:"KT1Ays1Chwx3ArnHGoQXchUgDsvKe9JboUjj",tokenAddress:"KT1XnTn74bUtxHfDtBmm2bGZAQfhPbvKWR8o",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},testnet:{address:"KT1HHjNxi3okxxGJT1SPPhpcs3gMQt8hqixY",tokenAddress:"KT1BWvRQnVVowZZLGkct9A7sdj5YEe8CdUhR",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:6,displayed:4},blockchain:"tezos"}}};var tt=class{constructor(e,t,r){s(this,"_network");s(this,"_baseUrl");s(this,"_authToken");s(this,"_authorizationManager");this._network=e,this._baseUrl=t,this._authToken=r}static create(e){return new tt(e=="mainnet"?"mainnet":"testnet",u.api[e].baseUrl)}setAuthorizationManager(e){this._authorizationManager=e}getLocalAuthToken(e){var r;let t=(r=this._authorizationManager)==null?void 0:r.getAuthToken(e);return t==null?void 0:t.value}setAuthToken(e){this._authToken=e}async makeRequest(e,t,r=!1,n,i){let a=new URL(t,this._baseUrl);n!==void 0&&Object.keys(n).forEach(l=>a.searchParams.append(l,n[l]));let c={};if(r){let l=typeof r=="string"?this.getLocalAuthToken(r):this._authToken;if(!l)throw new Error("Auth token is undefined");c.Authorization=`Bearer ${l}`}let m;e==="post"&&i!==void 0&&(m=JSON.stringify(i),c["Content-Type"]="application/json");let d=await fetch(a.toString(),{method:e,headers:c,body:m});if(d.ok)return d.json();{let l=await d.text();throw Error(l)}}async getAuthToken(e){return this.makeRequest("post","/v1/Token",!1,{},e)}async getSymbols(){return this.makeRequest("get","/v1/Symbols",!1)}async getQuotes(e){let t=e!==void 0&&e.length>0?e.join(","):"All";return this.makeRequest("get","/v1/MarketData/quotes",!1,{symbols:t})}async getOrderBook(e){return this.makeRequest("get","/v1/MarketData/book",!1,{symbol:e})}async addOrder(e){var i;let[t,r]=this.splitSymbol(e.symbol).map(a=>this.getCurrencyConfig(a)),n=e;return n.requisites=f({baseCurrencyContract:t.contractAddress,quoteCurrencyContract:r.contractAddress},n.requisites),this.makeRequest("post","/v1/Orders",((i=e.requisites)==null?void 0:i.receivingAddress)||!0,{},n).then(a=>a.orderId)}async getOrders(e,t){return this.makeRequest("get","/v1/Orders",e||!0,f({},t))}async getOrder(e,t){return this.makeRequest("get",`/v1/Orders/${e}`,t||!0)}async cancelOrder(e,t,r,n){return this.makeRequest("delete",`/v1/Orders/${e}`,n||!0,{symbol:t,side:r}).then(i=>i.result)}async addSwapRequisites(e,t){return this.makeRequest("post",`/v1/Swaps/${e}/requisites`,(t==null?void 0:t.receivingAddress)||!0,{},t).then(r=>r.result)}async getSwaps(e,t){return this.makeRequest("get","/v1/Swaps",e||!0,f({},t))}async getSwap(e,t){return this.makeRequest("get",`/v1/Swaps/${e}`,t||!0)}getOrderPreview(e,t,r,n){let i=e.entries.filter(m=>m.side==t?!1:(()=>{switch(t+n){case"BuySend":case"SellReceive":return r/m.price;default:return r}})()<=Math.max(...m.qtyProfile)).map(m=>m.price);if(i.length==0)throw new Error(`No matching order found (${n} ${r} / ${t})`);let a=t=="Buy"?Math.min(...i):Math.max(...i),c=()=>{switch(t+n){case"BuySend":case"SellReceive":return r/a;default:return r*a}};return{price:a,amountSent:n=="Send"?r:c(),amountReceived:n=="Receive"?r:c()}}splitSymbol(e){let[t,r]=e.split("/",2);if(!t||!r)throw new Error("Symbol is invalid");return[t,r]}getCurrencyConfig(e){let t=Object.entries(u.currencies).find(([r,n])=>r==e);if(t==null)throw new Error(`No matching config section for ${e}`);return{blockchain:t[1].blockchain,decimals:t[1].decimals.original,displayDecimals:t[1].decimals.displayed,contractAddress:t[1].contracts[this._network].address,tokenAddress:t[1].contracts[this._network].tokenAddress}}formatAmount(e,t){let r=this.getCurrencyConfig(t);return parseFloat(typeof e=="string"?parseFloat(e).toFixed(r.displayDecimals):e.toFixed(r.displayDecimals))}getOrderSide(e,t,r){let[n,i]=this.splitSymbol(e);if(n===t&&i===r)return"Sell";if(i===t&&n===r)return"Buy";throw new Error(`Mismatch ${t} => ${r} (${e})`)}getMaxOrderSize(e,t){return Math.max(...e.entries.filter(r=>r.side!=t).map(r=>Math.max(...r.qtyProfile)))}};import wt from"bignumber.js";import Zo from"elliptic";import Xo from"web3";var he=class{constructor(e){this.atomex=e}validateInitiateTransactionBySwap(e){let t=e.counterParty.transactions.find(n=>n.type==="Lock");if(!t)return Promise.resolve({status:"NotFound",confirmations:0,nextBlockETA:0});let r=this.atomex.getCurrency(e.to.currencyId);if(!r)throw new Error(`Config of the "${e.to.currencyId}" not found`);return this.validateInitiateTransaction(t.blockId,t.id,e.secretHash,e.user.requisites.receivingAddress,v.tokensAmountToNat(e.to.amount,r.decimals),v.tokensAmountToNat(e.user.requisites.rewardForRedeem,r.decimals),0,2)}},V=o=>Math.round(new Date(o).getTime()/1e3),rt=()=>Math.round(Date.now()/1e3);var ot=class extends he{constructor(t,r,n,i,a,c,m,d){super(t);s(this,"_web3");s(this,"_contract");s(this,"_timeBetweenBlocks");s(this,"_functions");s(this,"_initiateGasLimitWithoutReward");s(this,"_initiateGasLimitWithReward");s(this,"_redeemGasLimit");this._web3=r,this._contract=this.createContract(n,i),this._timeBetweenBlocks=a,this._initiateGasLimitWithoutReward=c,this._initiateGasLimitWithReward=m,this._redeemGasLimit=d,this._functions=new Map,this.initializeFunctions(n)}initializeFunctions(t){t.forEach(r=>{r.type==="function"&&this._functions.set(r.name,{types:r.inputs,signature:this._web3.eth.abi.encodeFunctionSignature(r)})})}static async create(t,r,n){let i=u.blockchains.ethereum.rpc[r];n!==void 0&&(i.rpc=n);let a=new Xo(i.rpc),c=await a.eth.getChainId();if(i.chainID!==c)throw new Error(`Wrong chain ID: expected ${i.chainID}, actual ${c}`);return new ot(t,a,u.currencies.ETH.contracts.abi,u.currencies.ETH.contracts[r].address,i.blockTime,u.currencies.ETH.contracts[r].initiateGasLimitWithoutReward,u.currencies.ETH.contracts[r].initiateGasLimitWithReward,u.currencies.ETH.contracts[r].redeemGasLimit)}getAuthMessage(t,r){let n=Date.now();return{message:t,timestamp:n,msgToSign:t+n.toString(),algorithm:"Keccak256WithEcdsa:Geth2940"}}buildInitiateTransaction(t){if(t.refundTimestamp<rt())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);return{data:this._contract.methods.initiate("0x"+t.secretHash,t.receivingAddress,t.refundTimestamp,t.rewardForRedeem.toString(10)).encodeABI(),contractAddr:this._contract.options.address,amount:t.netAmount.plus(t.rewardForRedeem)}}buildRedeemTransaction(t,r){return{data:this._contract.methods.redeem(r,t).encodeABI(),contractAddr:this._contract.options.address}}buildRefundTransaction(t){return{data:this._contract.methods.refund(t).encodeABI(),contractAddr:this._contract.options.address}}buildActivateTransaction(t){return{data:this._contract.methods.activate(t).encodeABI(),contractAddr:this._contract.options.address}}parseInitiateParameters(t){let r=this._functions.get("initiate");if(!t.input.startsWith(r.signature))throw new Error(`Unexpected method signature: ${t.input}`);let n=this._web3.eth.abi.decodeParameters(r.types,t.input.slice(r.signature.length));return{secretHash:n._hashedSecret.slice(2),receivingAddress:n._participant,refundTimestamp:parseInt(n._refundTimestamp),rewardForRedeem:new wt(this._web3.utils.toBN(n._payoff).toString()),netAmount:new wt(this._web3.utils.toBN(t.value).sub(this._web3.utils.toBN(n._payoff)).toString())}}async validateInitiateTransaction(t,r,n,i,a,c,m,d=2){var g;a=new wt(a),c=new wt(c);let l=a.minus(c),p=await this.getTransaction(r);try{if(!p)throw new Error(`Failed to retrieve transaction: ${r}`);let y=[];((g=p.to)==null?void 0:g.toLowerCase())!==this._contract.options.address.toLowerCase()&&y.push(`Wrong contract address: expect ${this._contract.options.address}, actual ${p.to}`);let b=this.parseInitiateParameters(p);if(b.secretHash!==n&&y.push(`Secret hash: expect ${n}, actual ${b.secretHash}`),b.receivingAddress.toLowerCase()!==i.toLowerCase()&&y.push(`Receiving address: expect ${i}, actual ${b.receivingAddress}`),b.netAmount.isEqualTo(l)||y.push(`Net amount: expect ${l.toString(10)}, actual ${b.netAmount.toString(10)}`),b.refundTimestamp<m&&y.push(`Refund timestamp: minimum ${m}, actual ${b.refundTimestamp}`),y.length){let A=y.reduce((k,vt,St)=>`${k}
	${St+1}. ${vt};`,`Initiate transaction that satisfies the expected criteria is not found in ${r} contents:`);throw new Error(A)}}catch(y){return{status:"Invalid",message:y.message,confirmations:0,nextBlockETA:0}}let x=await this.getBlock("latest"),S=x.number-(p.blockNumber||x.number),C={status:p.blockNumber!==void 0?"Included":"Pending",confirmations:S,nextBlockETA:parseInt(x.timestamp.toString())+this._timeBetweenBlocks};return S>=d&&(C.status="Confirmed"),C}hexSlice(t,r,n){return"0x"+n.slice(t*2+2,r*2+2)}getVRS(t){let r=[this.hexSlice(64,(t.length-2)/2,t),this.hexSlice(0,32,t),this.hexSlice(32,64,t)];return{v:parseInt(r[0].slice(2),16),r:r[1].slice(2),s:r[2].slice(2)}}recoverPublicKey(t,r){let n=this._web3.eth.accounts.hashMessage(t),i=this.getVRS(r),c=new Zo.ec("secp256k1").recoverPubKey(Buffer.from(n.slice(2),"hex"),i,i.v<2?i.v:1-i.v%2);return"0x"+c.encode("hex",!1)}encodePublicKey(t){return t.startsWith("0x")?t.slice(2):t}encodeSignature(t){let r=this.getVRS(t);return r.r.padStart(64,"0")+r.s.padStart(64,"0")}async estimateInitiateFees(t){let r=await this._web3.eth.getGasPrice();return parseInt(r)*this._initiateGasLimitWithReward*1.2}async estimateRedeemFees(t){let r=await this._web3.eth.getGasPrice(),n=parseInt(r)*this._redeemGasLimit;return{totalCost:n,rewardForRedeem:2*n}}isValidAddress(t){return this._web3.utils.isAddress(t)}getTransaction(t){return this._web3.eth.getTransaction(t)}getBlock(t){return this._web3.eth.getBlock(t)}createContract(t,r){return new this._web3.eth.Contract(t,r)}};import{ParameterSchema as Jo}from"@taquito/michelson-encoder";import{OpKind as Yo}from"@taquito/rpc";import{TezosToolkit as en}from"@taquito/taquito";import{b58cdecode as bt,prefix as nt,validateAddress as tn,ValidationResult as rn}from"@taquito/utils";import Ne from"bignumber.js";var on=o=>new Date(o*1e3).toISOString().slice(0,-5)+"Z",L=class extends he{constructor(t,r,n,i,a,c,m,d,l,p,x,S){super(t);s(this,"_tezos");s(this,"_contractAddress");s(this,"_timeBetweenBlocks");s(this,"_entrypoints");s(this,"_gasLimit");s(this,"_minimalFees");s(this,"_minimalNanotezPerGasUnit");s(this,"_minimalNanotezPerByte");s(this,"_costPerByte");s(this,"_redeemTxSize");s(this,"_initiateTxSize");this._tezos=r,this._contractAddress=i,this._timeBetweenBlocks=a,this._gasLimit=c,this._minimalFees=m,this._minimalNanotezPerGasUnit=d,this._minimalNanotezPerByte=l,this._costPerByte=p,this._redeemTxSize=x,this._initiateTxSize=S,this._entrypoints=new Map(Object.entries(n).map(([C,g])=>[C,new Jo(g)]))}static async create(t,r,n="XTZ",i){let a=u.blockchains.tezos.rpc[r];i!==void 0&&(a.rpc=i);let c=new en(a.rpc),m=await c.rpc.getChainId();if(a.chainID!==m.toString())throw new Error(`Wrong chain ID: expected ${a.chainID}, actual ${m}`);return new L(t,c,u.currencies[n].contracts.entrypoints,u.currencies[n].contracts[r].address,u.blockchains.tezos.rpc[r].blockTime,u.currencies[n].contracts[r].gasLimit,u.blockchains.tezos.rpc[r].minimalFees,u.blockchains.tezos.rpc[r].minimalNanotezPerGasUnit,u.blockchains.tezos.rpc[r].minimalNanotezPerByte,u.blockchains.tezos.rpc[r].costPerByte,u.currencies[n].contracts[r].redeemTxSize,u.currencies[n].contracts[r].initiateTxSize)}getTezosAlgorithm(t){switch(t){case"tz1":return"Ed25519:Blake2b";case"tz2":return"Blake2bWithEcdsa:Secp256k1";case"tz3":return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address prefix: ${t}`)}}getAuthMessage(t,r){let n=Date.now();return{message:t,timestamp:n,msgToSign:t+n.toString(),algorithm:this.getTezosAlgorithm(r.slice(0,3))}}buildInitiateTransaction(t){var n;if(t.refundTimestamp<rt())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);let r=(n=this._entrypoints.get("initiate"))==null?void 0:n.Encode(t.receivingAddress,t.secretHash,on(t.refundTimestamp),t.rewardForRedeem);return{data:{entrypoint:"initiate",value:r},contractAddr:this._contractAddress,amount:t.netAmount.plus(t.rewardForRedeem)}}buildRedeemTransaction(t,r=""){var n;return{data:{entrypoint:"redeem",value:(n=this._entrypoints.get("redeem"))==null?void 0:n.Encode(t)},contractAddr:this._contractAddress}}buildRefundTransaction(t){var r;return{data:{entrypoint:"refund",value:(r=this._entrypoints.get("refund"))==null?void 0:r.Encode(t)},contractAddr:this._contractAddress}}getBlockDetails(t){return{level:t.metadata.level_info.level,timestamp:V(t.header.timestamp)}}parseInitiateParameters(t){var i;if(t.parameters===void 0)throw new Error("Parameters are undefined");let r=(i=this._entrypoints.get(t.parameters.entrypoint))==null?void 0:i.Execute(t.parameters.value);if(r===void 0)throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`);let n=(()=>{switch(t.parameters.entrypoint){case"initiate":return r;case"fund":case"default":return r.initiate;default:throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`)}})();return{secretHash:n.settings.hashed_secret,receivingAddress:n.participant,refundTimestamp:V(n.settings.refund_time),netAmount:new Ne(t.amount).minus(n.settings.payoff),rewardForRedeem:new Ne(n.settings.payoff)}}findContractCall(t,r){var a;let n=(a=t.operations[3])==null?void 0:a.find(c=>c.hash==r);if(n===void 0)throw new Error(`Operation not found: ${r} @ ${t.hash}`);let i=n.contents.filter(c=>c.kind=="transaction"&&c.destination==this._contractAddress);if(i.length===0)throw new Error("Unsupported contract version is used");return i}async validateInitiateTransaction(t,r,n,i,a,c,m,d=2){a=new Ne(a),c=new Ne(c);let l=a.minus(c),p=await this.getBlock(t);try{let y=[];if(!this.findContractCall(p,r).find(A=>{y=[];let k=this.parseInitiateParameters(A);return k.secretHash!==n&&y.push(`Secret hash: expect ${n}, actual ${k.secretHash}. Counter = ${A.counter}`),k.receivingAddress.toLowerCase()!==i.toLowerCase()&&y.push(`Receiving address: expect ${i}, actual ${k.receivingAddress}. Counter = ${A.counter}`),k.netAmount.isEqualTo(l)||y.push(`Net amount: expect ${l.toString(10)}, actual ${k.netAmount.toString(10)}. Counter = ${A.counter}`),k.refundTimestamp<m&&y.push(`Refund timestamp: minimum ${m}, actual ${k.refundTimestamp}. Counter = ${A.counter}`),!y.length},this)){let A=y.reduce((k,vt,St)=>`${k}
	${St+1}. ${vt};`,`Initiate transaction that satisfies the expected criteria is not found in ${r} contents:`);throw new Error(A)}}catch(y){return{status:"Invalid",message:y.message,confirmations:0,nextBlockETA:0}}let x=this.getBlockDetails(await this.getBlock("head")),S=this.getBlockDetails(p),C=x.level-S.level,g={status:"Included",confirmations:C,nextBlockETA:x.timestamp+this._timeBetweenBlocks};return C>=d&&(g.status="Confirmed"),g}encodePublicKey(t){switch(t.substring(0,2)){case"ed":return Buffer.from(bt(t,nt.edpk)).toString("hex");case"p2":return Buffer.from(bt(t,nt.p2pk)).toString("hex");case"sp":return Buffer.from(bt(t,nt.sppk)).toString("hex");default:throw new Error("Unsupported Public Key Type")}}encodeSignature(t){var n;let r=t.startsWith("sig")?t.substring(0,3):t.substring(0,5);if(Object.prototype.hasOwnProperty.call(nt,r))return Buffer.from(bt(t,(n=Object.getOwnPropertyDescriptor(nt,r))==null?void 0:n.value)).toString("hex");throw new Error("Unsupported Signature Type")}calcFees(t=0,r=0,n=0){return this._minimalFees+this._minimalNanotezPerGasUnit*t+this._minimalNanotezPerByte*n+r*this._costPerByte}async estimateInitiateFees(t){let r={receivingAddress:"tz1Q2prWCrDGFDuGTe7axdt4z9e3QkCqdhmD",secretHash:"169cbd29345af89a0983f28254e71bdd1367890b9876fc8a9ea117c32f6a521b",refundTimestamp:2147483647,rewardForRedeem:new Ne(0),netAmount:new Ne(100)},n=this.buildInitiateTransaction(r),i=await this._tezos.rpc.getBlockHeader(),a=await this._tezos.rpc.getContract(t),c=await this._tezos.rpc.runOperation({chain_id:i.chain_id,operation:{branch:i.hash,signature:"sigUHx32f9wesZ1n2BWpixXz4AQaZggEtchaQNHYGRCoWNAXx45WGW2ua3apUUUAGMLPwAU41QoaFCzVSL61VaessLg4YbbP",contents:[{amount:"0",counter:(parseInt(a.counter||"0")+1).toString(),destination:this._contractAddress,fee:this.calcFees(104e4,6e4,this._initiateTxSize).toString(),gas_limit:"1040000",kind:Yo.TRANSACTION,source:t,storage_limit:"60000",parameters:n.data}]}}),m=0,d=0;return c.contents.forEach(l=>{if(l.metadata.operation_result.status!=="applied")throw new Error("Some error was encountered while estimating fees");d+=parseInt(l.metadata.operation_result.consumed_gas||"0"),m+=parseInt(l.metadata.operation_result.paid_storage_size_diff||"0")}),this.calcFees(d,m,this._initiateTxSize)}async estimateRedeemFees(t){let r=this.calcFees(this._gasLimit,0,this._redeemTxSize);return await this._tezos.rpc.getManagerKey(t)===null&&(r+=257*this._costPerByte),{totalCost:r,rewardForRedeem:2*r}}isValidAddress(t){return tn(t)==rn.VALID}getBlock(t){return this._tezos.rpc.getBlock({block:t.toString()})}};import{TezosToolkit as nn}from"@taquito/taquito";import Rr from"bignumber.js";var it=class extends L{static async create(e,t,r,n){let i=u.blockchains.tezos.rpc[t];n!==void 0&&(i.rpc=n);let a=new nn(i.rpc),c=await a.rpc.getChainId();if(i.chainID!==c.toString())throw new Error(`Wrong chain ID: expected ${i.chainID}, actual ${c}`);return new it(e,a,u.currencies[r].contracts.entrypoints,u.currencies[r].contracts[t].address,u.blockchains.tezos.rpc[t].blockTime,u.currencies[r].contracts[t].gasLimit,u.blockchains.tezos.rpc[t].minimalFees,u.blockchains.tezos.rpc[t].minimalNanotezPerGasUnit,u.blockchains.tezos.rpc[t].minimalNanotezPerByte,u.blockchains.tezos.rpc[t].costPerByte,u.currencies[r].contracts[t].redeemTxSize,u.currencies[r].contracts[t].initiateTxSize)}parseInitiateParameters(e){var n;if(e.parameters===void 0)throw new Error("Parameters are undefined");let t=(n=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:n.Execute(e.parameters.value);if(t===void 0)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=(()=>{switch(e.parameters.entrypoint){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`)}})();return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:V(r.refundTime),netAmount:new Rr(r.totalAmount).minus(r.payoffAmount),rewardForRedeem:new Rr(r.payoffAmount)}}};import{TezosToolkit as an}from"@taquito/taquito";import Nr from"bignumber.js";var at=class extends L{static async create(e,t,r,n){let i=u.blockchains.tezos.rpc[t];n!==void 0&&(i.rpc=n);let a=new an(i.rpc),c=await a.rpc.getChainId();if(i.chainID!==c.toString())throw new Error(`Wrong chain ID: expected ${i.chainID}, actual ${c}`);return new at(e,a,u.currencies[r].contracts.entrypoints,u.currencies[r].contracts[t].address,u.blockchains.tezos.rpc[t].blockTime,u.currencies[r].contracts[t].gasLimit,u.blockchains.tezos.rpc[t].minimalFees,u.blockchains.tezos.rpc[t].minimalNanotezPerGasUnit,u.blockchains.tezos.rpc[t].minimalNanotezPerByte,u.blockchains.tezos.rpc[t].costPerByte,u.currencies[r].contracts[t].redeemTxSize,u.currencies[r].contracts[t].initiateTxSize)}parseInitiateParameters(e){var n;if(!e.parameters)throw new Error("Parameters are undefined");let t=(n=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:n.Execute(e.parameters.value);if(!t)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=this.getInitiateParams(e.parameters.entrypoint,t);return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:V(r.refundTime),netAmount:new Nr(r.totalAmount).minus(r.payoffAmount),rewardForRedeem:new Nr(r.payoffAmount)}}getInitiateParams(e,t){switch(e){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e}`)}}};export{be as Atomex,ue as AtomexBuilder,Xe as AuthTokenSource,U as AuthorizationManager,fe as DataSource,le as DefaultSerializedAuthTokenMapper,re as ERC20EthereumWeb3AtomexProtocolMultiChain,te as EthereumWeb3AtomexProtocolMultiChain,Pe as ExchangeManager,ie as FA12TezosTaquitoAtomexProtocolMultiChain,ae as FA2TezosTaquitoAtomexProtocolMultiChain,De as ImportantDataReceivingMode,Re as InMemoryAuthorizationManagerStore,X as InMemoryExchangeSymbolsProvider,pe as LocalStorageAuthorizationManagerStore,Ie as MixedApiAtomexClient,ce as RestAtomexClient,oe as TaquitoBlockchainWallet,ne as TezosTaquitoAtomexProtocolMultiChain,ke as WalletsManager,Ae as Web3BlockchainWallet,de as WebSocketAtomexClient,N as atomexUtils,v as converters,zr as createDefaultMainnetAtomex,Ir as createDefaultTestnetAtomex,ge as guards,Xt as legacy,At as prepareTimeoutDuration,Fe as textUtils,yn as wait};
//# sourceMappingURL=index.js.map
