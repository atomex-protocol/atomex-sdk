var be=Object.defineProperty,Re=Object.defineProperties;var De=Object.getOwnPropertyDescriptors;var ke=Object.getOwnPropertySymbols;var Ue=Object.prototype.hasOwnProperty,Fe=Object.prototype.propertyIsEnumerable;var pe=(o,e,t)=>e in o?be(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,B=(o,e)=>{for(var t in e||(e={}))Ue.call(e,t)&&pe(o,t,e[t]);if(ke)for(var t of ke(e))Fe.call(e,t)&&pe(o,t,e[t]);return o},Pe=(o,e)=>Re(o,De(e));var K=(o,e)=>{for(var t in e)be(o,t,{get:e[t],enumerable:!0})};var i=(o,e,t)=>(pe(o,typeof e!="symbol"?e+"":e,t),t);var O=class{constructor(e){this.options=e;i(this,"authorization");i(this,"signers");i(this,"atomexContext");if(this.atomexContext=e.atomexContext,this.signers=e.managers.signersManager,this.authorization=e.managers.authorizationManager,e.blockchains)for(let t of Object.keys(e.blockchains))this.addBlockchain(r=>e.blockchains[t])}get atomexNetwork(){return this.atomexContext.atomexNetwork}async addSigner(e){var t,r;await this.signers.addSigner(e),await((r=(t=this.options.blockchains)==null?void 0:t[e.blockchain])==null?void 0:r.mainnet.blockchainToolkitProvider.addSigner(e))}addBlockchain(e){let t=e(this.atomexContext)}async swap(e,t){throw new Error("Not implemented")}};var he=class{constructor(e){this.atomexNetwork=e;i(this,"id");i(this,"managers");i(this,"services");this.id=he.idCounter++,this.managers=new ue(this),this.services=new le(this)}},_=he;i(_,"idCounter",0);var ue=class{constructor(e){this.context=e;i(this,"_signersManager");i(this,"_authorizationManager");i(this,"_exchangeManager")}get signersManager(){if(!this._signersManager)throw new w("managers.signersManager");return this._signersManager}set signersManager(e){this._signersManager=e}get authorizationManager(){if(!this._authorizationManager)throw new w("managers.authorizationManager");return this._authorizationManager}set authorizationManager(e){this._authorizationManager=e}get exchangeManager(){if(!this._exchangeManager)throw new w("managers.exchangeManager");return this._exchangeManager}set exchangeManager(e){this._exchangeManager=e}},le=class{constructor(e){this.context=e;i(this,"_exchangeService")}get exchangeService(){if(!this._exchangeService)throw new w("services.exchangeService");return this._exchangeService}set exchangeService(e){this._exchangeService=e}},w=class extends Error{constructor(t){super(w.getMessage(t));i(this,"name");i(this,"componentName");this.componentName=t,this.name=this.constructor.name}static getMessage(t){return`Atomex "${t}" component has not resolved yet`}};var b={};K(b,{hexStringToObject:()=>qe,hexStringToString:()=>Ce,hexStringToUint8Array:()=>Ee,numberToTokensAmount:()=>Ke,objectToHexString:()=>We,stringToHexString:()=>Me,tokensAmountToNat:()=>$e,uint8ArrayToHexString:()=>re});import ze from"bignumber.js";import{Buffer as k}from"buffer";var ve=fetch;var Ee=o=>{var t;let e=(t=o.match(/[\da-f]{2}/gi))==null?void 0:t.map(r=>parseInt(r,16));return new Uint8Array(e)},re=o=>k.from(o).toString("hex"),Me=o=>k.from(o,"utf8").toString("hex"),Ce=o=>k.from(Ee(o)).toString("utf8"),We=o=>Me(JSON.stringify(o)),qe=o=>{try{return JSON.parse(Ce(o))}catch(e){return null}},$e=(o,e)=>new ze(o).multipliedBy(10**e).integerValue(),Ke=(o,e)=>new ze(o).integerValue().div(10**e);var f={};K(f,{ensureNetworksAreSame:()=>Le});var Le=(o,e)=>{if((typeof o=="string"?o:o.atomexNetwork)!==(typeof e=="string"?e:e.atomexNetwork))throw new Error("Networks are different")};var L={};K(L,{capitalize:()=>He,padEnd:()=>Ge,padStart:()=>je});var He=o=>{var e;return o&&((e=o[0])==null?void 0:e.toLocaleUpperCase())+o.slice(1)},Be=(o,e,t,r=" ")=>{if(String.prototype.padStart!==void 0)return o.padStart(t,r);let n=o.length;if(t<=n||r=="")return o;let a=t-n,s=r.repeat(Math.ceil(a/r.length));return s.length>a&&(s=s.slice(0,a)),e?s+o:o+s},je=(o,e,t=" ")=>String.prototype.padStart!==void 0?o.padStart(e,t):Be(o,!0,e,t),Ge=(o,e,t=" ")=>String.prototype.padEnd!==void 0?o.padEnd(e,t):Be(o,!1,e,t);var Nt=o=>new Promise(e=>setTimeout(e,o)),ge=o=>Math.min(o,2147483647);var N=class{constructor(e){this.atomexNetwork=e;i(this,"_signers",new Set)}get signers(){return this._signers}addSigner(e){return f.ensureNetworksAreSame(this,e),this._signers.add(e),Promise.resolve(e)}async removeSigner(e,t){let r=typeof e=="string"?await this.findSigner(e,t):e;return r?this._signers.delete(r):!1}async findSigner(e,t){if(!this.signers.size)return;let r=[];for(let a of this.signers){if(t&&a.blockchain!==t)continue;let s=a.getAddress();if(typeof s=="string"){if(s===e)return a;continue}r.push(s.then(m=>[a,m]))}let n=await Promise.allSettled(r);for(let a of n)if(a.status==="fulfilled"&&a.value[1]===e)return a.value[0]}};var u=class{constructor(){i(this,"listeners",new Set)}addListener(e){return this.listeners.add(e),this}removeListener(e){return this.listeners.has(e)&&this.listeners.delete(e),this}removeAllListeners(){return this.listeners=new Set,this}emit(...e){!this.listeners.size||(this.listeners.size===1?this.listeners.values().next().value(...e):[...this.listeners].forEach(t=>t(...e)))}};var I=class{constructor(e,t){this.atomexNetwork=e;this.authorizationManager=t;i(this,"orderUpdated",new u);i(this,"orderBookUpdated",new u);i(this,"topOfBookUpdated",new u)}getOrder(e){throw new Error("Method not implemented.")}getOrders(e){throw new Error("Method not implemented.")}getSymbols(){throw new Error("Method not implemented.")}getTopOfBook(){throw new Error("Method not implemented.")}getOrderBook(){throw new Error("Method not implemented.")}addOrder(e){throw new Error("Method not implemented.")}cancelOrder(e){throw new Error("Method not implemented.")}cancelAllOrders(){throw new Error("Method not implemented.")}getSwapTransactions(e){throw new Error("Method not implemented.")}getSwap(e){throw new Error("Not implemented")}};var R=class{constructor(e,t){this.atomexNetwork=e;this.authorizationManager=t;i(this,"orderUpdated",new u);i(this,"orderBookUpdated",new u);i(this,"topOfBookUpdated",new u)}getOrder(e){throw new Error("Method not implemented.")}getOrders(e){throw new Error("Method not implemented.")}getSymbols(){throw new Error("Method not implemented.")}getTopOfBook(){throw new Error("Method not implemented.")}getOrderBook(){throw new Error("Method not implemented.")}addOrder(e){throw new Error("Method not implemented.")}cancelOrder(e){throw new Error("Method not implemented.")}cancelAllOrders(){throw new Error("Method not implemented.")}getSwapTransactions(e){throw new Error("Method not implemented.")}getSwap(e){throw new Error("Not implemented")}};var D=class{constructor(e,t,r){this.atomexNetwork=e;this.restAtomexClient=t;this.webSocketAtomexClient=r;f.ensureNetworksAreSame(this,t),f.ensureNetworksAreSame(this,r)}get orderUpdated(){return this.webSocketAtomexClient.orderUpdated}get orderBookUpdated(){return this.webSocketAtomexClient.orderBookUpdated}get topOfBookUpdated(){return this.webSocketAtomexClient.topOfBookUpdated}getOrder(e){return this.restAtomexClient.getOrder(e)}getOrders(e){return this.restAtomexClient.getOrders(e)}getSymbols(){return this.restAtomexClient.getSymbols()}getTopOfBook(){return this.restAtomexClient.getTopOfBook()}getOrderBook(){return this.restAtomexClient.getOrderBook()}addOrder(e){return this.restAtomexClient.addOrder(e)}cancelOrder(e){return this.restAtomexClient.cancelOrder(e)}cancelAllOrders(){return this.restAtomexClient.cancelAllOrders()}getSwapTransactions(e){return this.restAtomexClient.getSwapTransactions(e)}getSwap(e){return this.restAtomexClient.getSwap(e)}};var ne=(r=>(r[r.Local=0]="Local",r[r.Remote=1]="Remote",r[r.SafeMerged=2]="SafeMerged",r))(ne||{});var oe=class{constructor(e){i(this,"currencies");this.currencies=new Map(e instanceof Map?e:Object.entries(e))}getCurrency(e){return Promise.resolve(this.currencies.get(e))}addCurrency(e){this.currencies.set(e.id,e)}removeCurrency(e){return this.currencies.delete(e)}};var ie=class{constructor(e){this.exchangeService=e;i(this,"orderUpdated",new u);i(this,"orderBookUpdated",new u);i(this,"topOfBookUpdated",new u);i(this,"handleExchangeServiceOrderBookUpdated",e=>{this.orderBookUpdated.emit(e)});i(this,"handleExchangeServiceTopOfBookUpdated",e=>{this.topOfBookUpdated.emit(e)});i(this,"handleExchangeServiceOrderUpdated",e=>{this.orderUpdated.emit(e)});this.attachEvents()}getOrder(e,t=2){throw new Error("Not implemented")}getOrders(e,t=2){throw new Error("Not implemented")}getSymbols(){throw new Error("Not implemented")}getTopOfBook(){throw new Error("Not implemented")}getOrderBook(){throw new Error("Not implemented")}getRewardForRedeem(e,t){throw new Error("Not implemented")}addOrder(e){throw new Error("Not implemented")}cancelOrder(e){throw new Error("Not implemented")}cancelAllOrders(){throw new Error("Not implemented")}attachEvents(){this.exchangeService.orderUpdated.addListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.orderBookUpdated.addListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.topOfBookUpdated.addListener(this.handleExchangeServiceTopOfBookUpdated)}detachEvents(){this.exchangeService.orderUpdated.removeListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.orderBookUpdated.removeListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.topOfBookUpdated.removeListener(this.handleExchangeServiceTopOfBookUpdated)}};var H=class{constructor(e){i(this,"events",{authorized:new u,unauthorized:new u,authTokenExpiring:new u,authTokenExpired:new u});i(this,"atomexNetwork");i(this,"signersManager");i(this,"store");i(this,"authorizationUrl");i(this,"expiringNotificationTimeInSeconds");i(this,"_authTokenData",new Map);i(this,"authTokenExpiringTimeoutCallback",e=>{let t=this._authTokenData.get(e.address);if(!t)return;clearTimeout(t.watcherId);let r=e.expired.getTime()-Date.now(),n=setTimeout(this.authTokenExpiredTimeoutCallback,ge(r),e);this._authTokenData.set(e.address,Pe(B({},t),{watcherId:n})),this.events.authTokenExpiring.emit(e)});i(this,"authTokenExpiredTimeoutCallback",e=>{this.unregisterAuthToken(e),this.events.authTokenExpired.emit(e)});this.atomexNetwork=e.atomexNetwork,this.store=e.store,this.signersManager=e.signersManager,f.ensureNetworksAreSame(this,this.signersManager),this.authorizationUrl=new URL(H.DEFAULT_GET_AUTH_TOKEN_URI,e.authorizationBaseUrl),this.expiringNotificationTimeInSeconds=e.expiringNotificationTimeInSeconds||H.DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS}get authTokenData(){return this._authTokenData}getAuthToken(e){var t;return(t=this.authTokenData.get(e))==null?void 0:t.authToken}async authorize(e,t=!1,r,n=H.DEFAULT_AUTH_MESSAGE){if(!t){let p=this.getAuthToken(e)||await this.loadAuthTokenFromStore(e);if(p&&!this.isTokenExpiring(p))return p}let a=await this.signersManager.findSigner(e,r);if(!a)throw new Error(`Not found: the corresponding signer by the ${e} address`);let s=this.getAuthorizationTimeStamp(n),m=await a.sign(n+s);if(m.address!==e)throw new Error("Invalid address in the signed data");let d=await this.requestAuthToken({message:n,publicKey:m.publicKeyBytes,algorithm:m.algorithm,signingDataType:m.signingDataType,signature:m.signatureBytes,timeStamp:s}),l={value:d.token,userId:d.id,address:e,expired:new Date(d.expires)};return await this.registerAuthToken(l,!0),l}async unauthorize(e){let t=this.getAuthToken(e);return t?this.unregisterAuthToken(t):!1}async loadAuthTokenFromStore(e){let t=await this.store.getAuthToken(e);if(!!t)return await this.registerAuthToken(t,!1)}async registerAuthToken(e,t){let r=this.trackAuthToken(e);if(!r)return;let n={authToken:e,watcherId:r};return this._authTokenData.set(e.address,n),t&&(e=await this.store.upsertAuthToken(e.address,e)),this.events.authorized.emit(e),e}async unregisterAuthToken(e){let t=this._authTokenData.get(e.address);if(!t)return!1;this.untrackAuthToken(t.watcherId);let r=await this.store.removeAuthToken(e)&&this._authTokenData.delete(e.address);return r&&this.events.unauthorized.emit(e),r}trackAuthToken(e){let t=e.expired.getTime()-Date.now();if(t<=0){this.store.removeAuthToken(e),this.events.authTokenExpired.emit(e);return}let r=t-this.expiringNotificationTimeInSeconds*1e3;return setTimeout(this.authTokenExpiringTimeoutCallback,ge(r),e)}untrackAuthToken(e){clearTimeout(e)}getAuthorizationTimeStamp(e){return Date.now()}async requestAuthToken(e){let t=await ve(this.authorizationUrl.href,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(await t.text());return t.json()}isTokenExpiring(e){return e.expired.getTime()-Date.now()<=this.expiringNotificationTimeInSeconds*1e3}},x=H;i(x,"DEFAULT_AUTH_MESSAGE","Signing in "),i(x,"DEFAULT_GET_AUTH_TOKEN_URI","/v1/token"),i(x,"DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS",60);var z=class{mapAuthTokenToSerializedAuthToken(e){return{a:e.address,u:e.userId,e:e.expired.getTime(),v:e.value}}mapSerializedAuthTokenToAuthToken(e){return{address:e.a,userId:e.u,expired:new Date(e.e),value:e.v}}};var ye=class{constructor(e,t,r=ye.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}getAuthToken(e){let t=localStorage.getItem(this.getKey(e));return t&&this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(JSON.parse(t))||void 0}getAuthTokens(e){return e.map(t=>this.getAuthToken(t)).filter(Boolean)}upsertAuthToken(e,t){let r=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!r)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return localStorage.setItem(this.getKey(e),JSON.stringify(r)),t}removeAuthToken(e){return localStorage.removeItem(this.getKey(e)),!0}getKey(e){return this.keyPrefix+e}},j=ye;i(j,"DefaultKeyPrefix","authToken:");var fe=class{constructor(e,t,r=fe.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}get key(){return this.keyPrefix}getAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]&&(this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(t[e])||void 0)}getAuthTokens(e){let t=this.getSerializedAuthTokensStoreObject();return Object.values(t).map(r=>this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(r)).filter(r=>!!r&&e.indexOf(r.address)>-1)}upsertAuthToken(e,t){let r=this.getSerializedAuthTokensStoreObject(),n=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!n)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return r[e]=n,this.localStorage.setItem(this.key,JSON.stringify(r)),t}removeAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]?(delete t[e],Object.keys(t).length?this.localStorage.setItem(this.key,JSON.stringify(t)):this.localStorage.removeItem(this.key),!0):!1}getSerializedAuthTokensStoreObject(){let e=this.localStorage.getItem(this.key);return e?JSON.parse(e):{}}},G=fe;i(G,"DefaultKeyPrefix","authTokens");var E=class{constructor(e="single-key",t=new z){i(this,"storeStrategy");this.storeStrategy=typeof e=="string"?this.createPreDefinedStoreStrategy(e,t):e}getAuthToken(e){return Promise.resolve(this.storeStrategy.getAuthToken(e))}getAuthTokens(...e){return Promise.resolve(this.storeStrategy.getAuthTokens(e))}upsertAuthToken(e,t){return Promise.resolve(this.storeStrategy.upsertAuthToken(e,t))}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.storeStrategy.removeAuthToken(t))}createPreDefinedStoreStrategy(e,t){switch(e){case"single-key":return new G(globalThis.localStorage,t);case"multiple-keys":return new j(globalThis.localStorage,t);default:throw new Error(`Unknown the store strategy name: ${e}`)}}};var U=class{constructor(){i(this,"authTokensMap",new Map)}getAuthToken(e){return Promise.resolve(this.authTokensMap.get(e))}getAuthTokens(...e){return Promise.resolve(e.reduce((t,r)=>{let n=this.authTokensMap.get(r);return n&&t.push(n),t},[]))}upsertAuthToken(e,t){return this.authTokensMap.set(e,t),Promise.resolve(t)}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.authTokensMap.delete(t))}};var xe=(o,e,t)=>{let r=globalThis.window?"browser":"node";return new x({atomexNetwork:o.atomexNetwork,signersManager:o.managers.signersManager,authorizationBaseUrl:e.authorizationBaseUrl,store:r==="browser"?new E(e.store.browser.storeStrategy):new U})};var Qe={authorization:{authorizationBaseUrl:"https://api.atomex.me",store:{node:{},browser:{storeStrategy:"single-key"}}}},Ve={authorization:{authorizationBaseUrl:"https://api.test.atomex.me",store:{node:{},browser:{storeStrategy:"single-key"}}}},Oe={mainnet:Qe,testnet:Ve};var ae=class{constructor(e,t=new _(e.atomexNetwork)){this.options=e;this.atomexContext=t;i(this,"customAuthorizationManagerFactory");i(this,"customSignersManagerFactory")}get controlledAtomexContext(){return this.atomexContext}useAuthorizationManager(e){this.customAuthorizationManagerFactory=e}useSignersManager(e){this.customSignersManagerFactory=e}createAuthorizationManager(){let e=Oe[this.atomexContext.atomexNetwork].authorization;return this.customAuthorizationManagerFactory?this.customAuthorizationManagerFactory(this.atomexContext,e,this.options):xe(this.atomexContext,e,this.options)}createSignersManager(){return this.customSignersManagerFactory?this.customSignersManagerFactory(this.atomexContext,this.options):new N(this.atomexContext.atomexNetwork)}build(){this.controlledAtomexContext.managers.signersManager=this.createSignersManager(),this.controlledAtomexContext.managers.authorizationManager=this.createAuthorizationManager();let e=new D(this.atomexContext.atomexNetwork,new I(this.atomexContext.atomexNetwork,this.controlledAtomexContext.managers.authorizationManager),new R(this.atomexContext.atomexNetwork,this.controlledAtomexContext.managers.authorizationManager));return this.controlledAtomexContext.services.exchangeService=e,this.controlledAtomexContext.managers.exchangeManager=new ie(this.atomexContext.services.exchangeService),new O({atomexContext:this.atomexContext,managers:{signersManager:this.atomexContext.managers.signersManager,authorizationManager:this.atomexContext.managers.authorizationManager,exchangeManager:this.atomexContext.managers.exchangeManager}})}};import{ec as Ze}from"elliptic";var Se=null,Je=()=>(Se||(Se=new Ze("secp256k1")),Se),Xe=o=>{let e=b.hexStringToUint8Array(o);if(e.length!==64&&e.length!==65)throw new Error(`Invalid signature: ${o}`);let t=e.length===64?27+(e[32]>>7):e[64];return(t===0||t===1)&&(t+=27),{r:re(e.slice(0,32)),s:re(e.slice(32,64)),v:t,recoveryParameter:1-t%2}},_e=(o,e)=>{let t=Xe(o),r=k.from(e.startsWith("0x")?e.substring(2):e,"hex"),n=Je().recoverPubKey(r,{r:t.r,s:t.s},t.recoveryParameter);return"0x"+n.encode("hex",!1)};var Ae=class{constructor(e,t){this.atomexNetwork=e;this.web3=t;i(this,"blockchain","ethereum")}async getAddress(){let t=(await this.web3.eth.getAccounts())[0];if(!t)throw new Error("Address is unavailable");return t}getPublicKey(){}async sign(e){let t=await this.getAddress(),r=await this.signInternal(e,t),n=_e(r,this.web3.eth.accounts.hashMessage(e));return{address:t,publicKeyBytes:n.startsWith("0x")?n.substring(2):n,signatureBytes:r.substring(r.startsWith("0x")?2:0,r.length-2),algorithm:Ae.signingAlgorithm}}signInternal(e,t){return new Promise((r,n)=>this.web3.eth.personal.sign(e,t,"",(a,s)=>s?r(s):n(a)))}},F=Ae;i(F,"signingAlgorithm","Keccak256WithEcdsa:Geth2940");import{SigningType as ct}from"@airgap/beacon-sdk";import{b58cdecode as at,prefix as st,validatePkAndExtractPrefix as mt}from"@taquito/utils";var g={};K(g,{decodeSignature:()=>Q,getRawMichelineSigningData:()=>nt,getRawSigningData:()=>rt,getTezosSigningAlgorithm:()=>it,getWalletMichelineSigningData:()=>ot});import{b58cdecode as Ye,prefix as et,Prefix as W}from"@taquito/utils";var tt="54657a6f73205369676e6564204d6573736167653a20",Ie=(o,e)=>{let t=b.stringToHexString(o),r=e?e+t:t,n=L.padStart((r.length/2).toString(16),8,"0");return"0501"+n+r},rt=o=>b.stringToHexString(o),nt=o=>Ie(o),ot=o=>Ie(o,tt),it=o=>{let e=o.substring(0,o.startsWith("tz")?3:4);switch(e){case W.TZ1:case W.EDPK:return"Ed25519:Blake2b";case W.TZ2:case W.SPPK:return"Blake2bWithEcdsa:Secp256k1";case W.TZ3:case W.P2PK:return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address/public key prefix: ${e} (${o})`)}},Q=o=>{let e=o.startsWith("sig")?o.substring(0,3):o.substring(0,5),t=Ye(o,et[e]);return Buffer.from(t).toString("hex")};var q=o=>{let e=mt(o),t=at(o,st[e]);return k.from(t).toString("hex")};var se=class{constructor(e,t){this.atomexNetwork=e;this.beaconWallet=t;i(this,"blockchain","tezos")}getAddress(){return this.beaconWallet.getPKH()}async getPublicKey(){var e;return(e=await this.beaconWallet.client.getActiveAccount())==null?void 0:e.publicKey}async sign(e){let[t,r,n]=await Promise.all([this.getAddress(),this.getPublicKey(),this.beaconWallet.client.requestSignPayload({payload:g.getWalletMichelineSigningData(e),signingType:ct.MICHELINE})]);if(!r)throw new Error("BeaconWallet: public key is unavailable");let a=g.getTezosSigningAlgorithm(r),s=q(r),m=Q(n.signature);return{address:t,algorithm:a,publicKeyBytes:s,signatureBytes:m,signingDataType:"tezos/wallet-micheline"}}};var me=class{constructor(e,t){this.atomexNetwork=e;this.templeWallet=t;i(this,"blockchain","tezos")}getAddress(){return this.templeWallet.getPKH()}getPublicKey(){var e;return(e=this.templeWallet.permission)==null?void 0:e.publicKey}async sign(e){let[t,r,n]=await Promise.all([this.getAddress(),this.getPublicKey(),this.templeWallet.sign(g.getWalletMichelineSigningData(e))]);if(!r)throw new Error("TempleWallet: public key is unavailable");let a=g.getTezosSigningAlgorithm(r),s=q(r),m=Q(n);return{address:t,algorithm:a,publicKeyBytes:s,signatureBytes:m,signingDataType:"tezos/wallet-micheline"}}};var V=class{constructor(e,t){this.atomexNetwork=e;this.wallet=t;i(this,"blockchain","tezos");i(this,"internalSigner");this.internalSigner=this.createInternalSigner()}getAddress(){return this.internalSigner.getAddress()}getPublicKey(){return this.internalSigner.getPublicKey()}sign(e){return this.internalSigner.sign(e)}createInternalSigner(){var e;if(((e=this.wallet.client)==null?void 0:e.name)!==void 0)return new se(this.atomexNetwork,this.wallet);if(this.wallet.permission!==void 0&&this.wallet.connected!==void 0)return new me(this.atomexNetwork,this.wallet);throw new Error("Unknown Tezos wallet")}};import{InMemorySigner as dt}from"@taquito/signer";var ce=class{constructor(e,t){this.atomexNetwork=e;i(this,"blockchain","tezos");i(this,"internalInMemorySigner");this.internalInMemorySigner=new dt(t)}getAddress(){return this.internalInMemorySigner.publicKeyHash()}getPublicKey(){return this.internalInMemorySigner.publicKey()}async sign(e){let t=g.getRawSigningData(e),[r,n,a]=await Promise.all([this.getAddress(),this.getPublicKey(),this.internalInMemorySigner.sign(t)]),s=q(n),m=a.sbytes.substring(a.bytes.length),d=g.getTezosSigningAlgorithm(n);return{address:r,algorithm:d,publicKeyBytes:s,signatureBytes:m}}};var Te={};K(Te,{Atomex:()=>Z,EthereumHelpers:()=>X,FA12Helpers:()=>ee,FA2Helpers:()=>te,Helpers:()=>M,TezosHelpers:()=>S,dt2ts:()=>P,now:()=>J});var c={api:{mainnet:{baseUrl:"https://api.atomex.me"},testnet:{baseUrl:"https://api.test.atomex.me"},localhost:{baseUrl:"http://127.0.0.1:5000"}},blockchains:{ethereum:{rpc:{mainnet:{chainID:1,rpc:"https://mainnet.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10},testnet:{chainID:5,rpc:"https://goerli.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10}}},tezos:{rpc:{mainnet:{chainID:"NetXdQprcVkpaWU",rpc:"https://rpc.tzkt.io/mainnet/",blockTime:30,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250},testnet:{chainID:"NetXnHfVqm9iesp",rpc:"https://rpc.tzkt.io/ithacanet/",blockTime:15,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250}}}},currencies:{ETH:{contracts:{mainnet:{address:"0xe9c251cbb4881f9e056e40135e7d3ea9a7d037df",gasLimit:2e5},testnet:{address:"0x512fe6B803bA327DCeFBF2Cec7De333f761B0f2b",gasLimit:17e4},abi:[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Activated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"address",name:"_sender",type:"address"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!0,internalType:"address",name:"_participant",type:"address"},{indexed:!1,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_countdown",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_payoff",type:"uint256"},{indexed:!1,internalType:"bool",name:"_active",type:"bool"}],name:"Initiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"Redeemed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Refunded",type:"event"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"swaps",outputs:[{internalType:"bytes32",name:"hashedSecret",type:"bytes32"},{internalType:"address payable",name:"initiator",type:"address"},{internalType:"address payable",name:"participant",type:"address"},{internalType:"uint256",name:"refundTimestamp",type:"uint256"},{internalType:"uint256",name:"countdown",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"bool",name:"active",type:"bool"},{internalType:"enum Atomex.State",name:"state",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"address payable",name:"_participant",type:"address"},{internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"initiate",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"add",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"activate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"redeem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}]},decimals:{original:18,displayed:4},blockchain:"ethereum"},XTZ:{contracts:{mainnet:{address:"KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL",redeemTxSize:133,initiateTxSize:200,gasLimit:15e3},testnet:{address:"KT1SJMtHZFSPva5AzQEx5btBuQ8BjvXqort3",redeemTxSize:133,initiateTxSize:200,gasLimit:85e3},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}],annots:["%fund"]},{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}],annots:["%withdraw"]}]},withdraw:{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}]},refund:{prim:"bytes",annots:[":hashed_secret"]},redeem:{prim:"bytes",annots:[":secret"]},initiate:{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate"]},fund:{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}]},add:{prim:"bytes",annots:[":hashed_secret"]}}},decimals:{original:6,displayed:3},blockchain:"tezos"},TZBTC:{contracts:{mainnet:{address:"KT1Ap287P1NzsnToSJdA4aqSNjPomRaHBZSr",tokenAddress:"KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},testnet:{address:"KT1Jj1jzDQbDRHt4u7M73DUrBDV1napRbNFr",tokenAddress:"",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:8,displayed:4},blockchain:"tezos"},USDT_XTZ:{contracts:{mainnet:{address:"<mainnet address>",tokenAddress:"",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},testnet:{address:"KT1HHjNxi3okxxGJT1SPPhpcs3gMQt8hqixY",tokenAddress:"KT1BWvRQnVVowZZLGkct9A7sdj5YEe8CdUhR",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:6,displayed:4},blockchain:"tezos"}}};var Z=class{constructor(e,t,r){i(this,"_network");i(this,"_baseUrl");i(this,"_authToken");i(this,"_authorizationManager");this._network=e,this._baseUrl=t,this._authToken=r}static create(e){return new Z(e=="mainnet"?"mainnet":"testnet",c.api[e].baseUrl)}setAuthorizationManager(e){this._authorizationManager=e}getLocalAuthToken(e){var r;let t=(r=this._authorizationManager)==null?void 0:r.getAuthToken(e);return t==null?void 0:t.value}setAuthToken(e){this._authToken=e}async makeRequest(e,t,r=!1,n,a){let s=new URL(t,this._baseUrl);n!==void 0&&Object.keys(n).forEach(p=>s.searchParams.append(p,n[p]));let m={};if(r){let p=typeof r=="string"?this.getLocalAuthToken(r):this._authToken;if(!p)throw new Error("Auth token is undefined");m.Authorization=`Bearer ${p}`}let d;e==="post"&&a!==void 0&&(d=JSON.stringify(a),m["Content-Type"]="application/json");let l=await fetch(s.toString(),{method:e,headers:m,body:d});if(l.ok)return l.json();{let p=await l.text();throw Error(p)}}async getAuthToken(e){return this.makeRequest("post","/v1/Token",!1,{},e)}async getSymbols(){return this.makeRequest("get","/v1/Symbols",!1)}async getQuotes(e){let t=e!==void 0&&e.length>0?e.join(","):"All";return this.makeRequest("get","/v1/MarketData/quotes",!1,{symbols:t})}async getOrderBook(e){return this.makeRequest("get","/v1/MarketData/book",!1,{symbol:e})}async addOrder(e){var a;let[t,r]=this.splitSymbol(e.symbol).map(s=>this.getCurrencyConfig(s)),n=e;return n.requisites=B({baseCurrencyContract:t.contractAddress,quoteCurrencyContract:r.contractAddress},n.requisites),this.makeRequest("post","/v1/Orders",((a=e.requisites)==null?void 0:a.receivingAddress)||!0,{},n).then(s=>s.orderId)}async getOrders(e,t){return this.makeRequest("get","/v1/Orders",e||!0,B({},t))}async getOrder(e,t){return this.makeRequest("get",`/v1/Orders/${e}`,t||!0)}async cancelOrder(e,t,r,n){return this.makeRequest("delete",`/v1/Orders/${e}`,n||!0,{symbol:t,side:r}).then(a=>a.result)}async addSwapRequisites(e,t){return this.makeRequest("post",`/v1/Swaps/${e}/requisites`,(t==null?void 0:t.receivingAddress)||!0,{},t).then(r=>r.result)}async getSwaps(e,t){return this.makeRequest("get","/v1/Swaps",e||!0,B({},t))}async getSwap(e,t){return this.makeRequest("get",`/v1/Swaps/${e}`,t||!0)}getOrderPreview(e,t,r,n){let a=e.entries.filter(d=>d.side==t?!1:(()=>{switch(t+n){case"BuySend":case"SellReceive":return r/d.price;default:return r}})()<=Math.max(...d.qtyProfile)).map(d=>d.price);if(a.length==0)throw new Error(`No matching order found (${n} ${r} / ${t})`);let s=t=="Buy"?Math.min(...a):Math.max(...a),m=()=>{switch(t+n){case"BuySend":case"SellReceive":return r/s;default:return r*s}};return{price:s,amountSent:n=="Send"?r:m(),amountReceived:n=="Receive"?r:m()}}splitSymbol(e){let[t,r]=e.split("/",2);if(!t||!r)throw new Error("Symbol is invalid");return[t,r]}getCurrencyConfig(e){let t=Object.entries(c.currencies).find(([r,n])=>r==e);if(t==null)throw new Error(`No matching config section for ${e}`);return{blockchain:t[1].blockchain,decimals:t[1].decimals.original,displayDecimals:t[1].decimals.displayed,contractAddress:t[1].contracts[this._network].address,tokenAddress:t[1].contracts[this._network].tokenAddress}}formatAmount(e,t){let r=this.getCurrencyConfig(t);return parseFloat(typeof e=="string"?parseFloat(e).toFixed(r.displayDecimals):e.toFixed(r.displayDecimals))}getOrderSide(e,t,r){let[n,a]=this.splitSymbol(e);if(n===t&&a===r)return"Sell";if(a===t&&n===r)return"Buy";throw new Error(`Mismatch ${t} => ${r} (${e})`)}getMaxOrderSize(e,t){return Math.max(...e.entries.filter(r=>r.side!=t).map(r=>Math.max(...r.qtyProfile)))}};import ut from"elliptic";import lt from"web3";var M=class{},P=o=>Math.round(new Date(o).getTime()/1e3),J=()=>Math.round(Date.now()/1e3);var X=class extends M{constructor(t,r,n,a,s){super();i(this,"_web3");i(this,"_contract");i(this,"_timeBetweenBlocks");i(this,"_functions");i(this,"_gasLimit");this._web3=t,this._contract=new t.eth.Contract(r,n),this._timeBetweenBlocks=a,this._gasLimit=s,this._functions=new Map,r.forEach(m=>{m.type==="function"&&this._functions.set(m.name,{types:m.inputs,signature:t.eth.abi.encodeFunctionSignature(m)})})}static async create(t,r){let n=c.blockchains.ethereum.rpc[t];r!==void 0&&(n.rpc=r);let a=new lt(n.rpc),s=await a.eth.getChainId();if(n.chainID!==s)throw new Error(`Wrong chain ID: expected ${n.chainID}, actual ${s}`);return new X(a,c.currencies.ETH.contracts.abi,c.currencies.ETH.contracts[t].address,n.blockTime,c.currencies.ETH.contracts[t].gasLimit)}getAuthMessage(t,r){let n=Date.now();return{message:t,timestamp:n,msgToSign:t+n.toString(),algorithm:"Keccak256WithEcdsa:Geth2940"}}buildInitiateTransaction(t){if(t.refundTimestamp<J())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);return{data:this._contract.methods.initiate("0x"+t.secretHash,t.receivingAddress,t.refundTimestamp,t.rewardForRedeem).encodeABI(),contractAddr:this._contract.options.address,amount:t.netAmount+t.rewardForRedeem}}buildRedeemTransaction(t,r){return{data:this._contract.methods.redeem(r,t).encodeABI(),contractAddr:this._contract.options.address}}buildRefundTransaction(t){return{data:this._contract.methods.refund(t).encodeABI(),contractAddr:this._contract.options.address}}buildAddTransaction(t,r){return{data:this._contract.methods.add(t).encodeABI(),contractAddr:this._contract.options.address,amount:r}}buildActivateTransaction(t){return{data:this._contract.methods.activate(t).encodeABI(),contractAddr:this._contract.options.address}}parseInitiateParameters(t){let r=this._functions.get("initiate");if(!t.input.startsWith(r.signature))throw new Error(`Unexpected method signature: ${t.input}`);let n=this._web3.eth.abi.decodeParameters(r.types,t.input.slice(r.signature.length));return{secretHash:n._hashedSecret.slice(2),receivingAddress:n._participant,refundTimestamp:parseInt(n._refundTimestamp),rewardForRedeem:parseInt(this._web3.utils.toBN(n._payoff).toString()),netAmount:parseInt(this._web3.utils.toBN(t.value).sub(this._web3.utils.toBN(n._payoff)).toString())}}async validateInitiateTransaction(t,r,n,a,s,m,d,l=2){let p=s-m,y=await this._web3.eth.getTransaction(r);try{if(y===void 0)throw new Error(`Failed to retrieve transaction: ${r}`);if(y.to!==this._contract.options.address)throw new Error(`Wrong contract address: ${y.to}`);let h=this.parseInitiateParameters(y);if(h.secretHash!==n)throw new Error(`Secret hash: expect ${n}, actual ${h.secretHash}`);if(h.receivingAddress.toLowerCase()!==a.toLowerCase())throw new Error(`Receiving address: expect ${a}, actual ${h.receivingAddress}`);if(h.netAmount!==p)throw new Error(`Net amount: expect ${p}, actual ${h.netAmount}`);if(h.refundTimestamp<d)throw new Error(`Refund timestamp: minimum ${d}, actual ${h.refundTimestamp}`)}catch(h){return{status:"Invalid",message:h.message,confirmations:0,nextBlockETA:0}}let A=await this._web3.eth.getBlock("latest"),C=A.number-(y.blockNumber||A.number),v={status:y.blockNumber!==void 0?"Included":"Pending",confirmations:C,nextBlockETA:parseInt(A.timestamp.toString())+this._timeBetweenBlocks};return C>=l&&(v.status="Confirmed"),v}hexSlice(t,r,n){return"0x"+n.slice(t*2+2,r*2+2)}getVRS(t){let r=[this.hexSlice(64,(t.length-2)/2,t),this.hexSlice(0,32,t),this.hexSlice(32,64,t)];return{v:parseInt(r[0].slice(2),16),r:r[1].slice(2),s:r[2].slice(2)}}recoverPublicKey(t,r){let n=this._web3.eth.accounts.hashMessage(t),a=this.getVRS(r),m=new ut.ec("secp256k1").recoverPubKey(Buffer.from(n.slice(2),"hex"),a,a.v<2?a.v:1-a.v%2);return"0x"+m.encode("hex",!1)}encodePublicKey(t){return t.startsWith("0x")?t.slice(2):t}encodeSignature(t){let r=this.getVRS(t);return r.r.padStart(64,"0")+r.s.padStart(64,"0")}async estimateInitiateFees(t){let r={receivingAddress:"0x0000000000000000000000000000000000000000",secretHash:"0000000000000000000000000000000000000000000000000000000000000000",refundTimestamp:2147483647,rewardForRedeem:0,netAmount:0},n=this.buildInitiateTransaction(r),a=await this._web3.eth.getGasPrice(),s=await this._web3.eth.estimateGas({from:t,to:n.contractAddr,data:n.data,value:n.amount});return parseInt(a)*s}async estimateRedeemFees(t){let r=await this._web3.eth.getGasPrice(),n=parseInt(r)*this._gasLimit;return{totalCost:n,rewardForRedeem:2*n}}isValidAddress(t){return this._web3.utils.isAddress(t)}};import{ParameterSchema as ht}from"@taquito/michelson-encoder";import{OpKind as gt}from"@taquito/rpc";import{TezosToolkit as yt}from"@taquito/taquito";import{b58cdecode as de,prefix as Y,validateAddress as ft,ValidationResult as xt}from"@taquito/utils";var St=o=>new Date(o*1e3).toISOString().slice(0,-5)+"Z",S=class extends M{constructor(t,r,n,a,s,m,d,l,p,y,A){super();i(this,"_tezos");i(this,"_contractAddress");i(this,"_timeBetweenBlocks");i(this,"_entrypoints");i(this,"_gasLimit");i(this,"_minimalFees");i(this,"_minimalNanotezPerGasUnit");i(this,"_minimalNanotezPerByte");i(this,"_costPerByte");i(this,"_redeemTxSize");i(this,"_initiateTxSize");this._tezos=t,this._contractAddress=n,this._timeBetweenBlocks=a,this._gasLimit=s,this._minimalFees=m,this._minimalNanotezPerGasUnit=d,this._minimalNanotezPerByte=l,this._costPerByte=p,this._redeemTxSize=y,this._initiateTxSize=A,this._entrypoints=new Map(Object.entries(r).map(([C,v])=>[C,new ht(v)]))}static async create(t,r="XTZ",n){let a=c.blockchains.tezos.rpc[t];n!==void 0&&(a.rpc=n);let s=new yt(a.rpc),m=await s.rpc.getChainId();if(a.chainID!==m.toString())throw new Error(`Wrong chain ID: expected ${a.chainID}, actual ${m}`);return new S(s,c.currencies[r].contracts.entrypoints,c.currencies[r].contracts[t].address,c.blockchains.tezos.rpc[t].blockTime,c.currencies[r].contracts[t].gasLimit,c.blockchains.tezos.rpc[t].minimalFees,c.blockchains.tezos.rpc[t].minimalNanotezPerGasUnit,c.blockchains.tezos.rpc[t].minimalNanotezPerByte,c.blockchains.tezos.rpc[t].costPerByte,c.currencies[r].contracts[t].redeemTxSize,c.currencies[r].contracts[t].initiateTxSize)}getTezosAlgorithm(t){switch(t){case"tz1":return"Ed25519:Blake2b";case"tz2":return"Blake2bWithEcdsa:Secp256k1";case"tz3":return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address prefix: ${t}`)}}getAuthMessage(t,r){let n=Date.now();return{message:t,timestamp:n,msgToSign:t+n.toString(),algorithm:this.getTezosAlgorithm(r.slice(0,3))}}buildInitiateTransaction(t){var n;if(t.refundTimestamp<J())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);let r=(n=this._entrypoints.get("initiate"))==null?void 0:n.Encode(t.receivingAddress,t.secretHash,St(t.refundTimestamp),t.rewardForRedeem);return{data:{entrypoint:"initiate",value:r},contractAddr:this._contractAddress,amount:t.netAmount+t.rewardForRedeem}}buildRedeemTransaction(t,r=""){var n;return{data:{entrypoint:"redeem",value:(n=this._entrypoints.get("redeem"))==null?void 0:n.Encode(t)},contractAddr:this._contractAddress}}buildRefundTransaction(t){var r;return{data:{entrypoint:"refund",value:(r=this._entrypoints.get("refund"))==null?void 0:r.Encode(t)},contractAddr:this._contractAddress}}buildAddTransaction(t,r){var n;return{amount:r,data:{entrypoint:"add",value:(n=this._entrypoints.get("add"))==null?void 0:n.Encode(t)},contractAddr:this._contractAddress}}getBlockDetails(t){return{level:t.metadata.level_info.level,timestamp:P(t.header.timestamp)}}parseInitiateParameters(t){var a;if(t.parameters===void 0)throw new Error("Parameters are undefined");let r=(a=this._entrypoints.get(t.parameters.entrypoint))==null?void 0:a.Execute(t.parameters.value);if(r===void 0)throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`);let n=(()=>{switch(t.parameters.entrypoint){case"initiate":return r;case"fund":case"default":return r.initiate;default:throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`)}})();return{secretHash:n.settings.hashed_secret,receivingAddress:n.participant,refundTimestamp:P(n.settings.refund_time),netAmount:parseInt(t.amount)-parseInt(n.settings.payoff),rewardForRedeem:parseInt(n.settings.payoff)}}findContractCall(t,r){var s;let n=(s=t.operations[3])==null?void 0:s.find(m=>m.hash==r);if(n===void 0)throw new Error(`Operation not found: ${r} @ ${t.hash}`);let a=n.contents.filter(m=>m.kind=="transaction"&&m.destination==this._contractAddress);if(a.length===0)throw new Error("Unsupported contract version is used");return a}async validateInitiateTransaction(t,r,n,a,s,m,d,l=2){let p=s-m,y=await this._tezos.rpc.getBlock({block:t.toString()});try{if(this.findContractCall(y,r).find($=>{let T=this.parseInitiateParameters($);return T.secretHash!==n?(console.log(`[${$.counter}] Secret hash: expect ${n}, actual ${T.secretHash}`),!1):T.receivingAddress.toLowerCase()!==a.toLowerCase()?(console.log(`[${$.counter}] Receiving address: expect ${a}, actual ${T.receivingAddress}`),!1):T.netAmount!==p?(console.log(`[${$.counter}] Net amount: expect ${p}, actual ${T.netAmount}`),!1):T.refundTimestamp<d?(console.log(`[${$.counter}] Refund timestamp: minimum ${d}, actual ${T.refundTimestamp}`),!1):!0},this)===void 0)throw new Error(`Initiate transaction that satisfies the expected criteria is not found in ${r} contents`)}catch(we){return{status:"Invalid",message:we.message,confirmations:0,nextBlockETA:0}}let A=this.getBlockDetails(await this._tezos.rpc.getBlock({block:"head"})),C=this.getBlockDetails(y),v=A.level-C.level,h={status:"Included",confirmations:v,nextBlockETA:A.timestamp+this._timeBetweenBlocks};return v>=l&&(h.status="Confirmed"),h}encodePublicKey(t){switch(t.substring(0,2)){case"ed":return Buffer.from(de(t,Y.edpk)).toString("hex");case"p2":return Buffer.from(de(t,Y.p2pk)).toString("hex");case"sp":return Buffer.from(de(t,Y.sppk)).toString("hex");default:throw new Error("Unsupported Public Key Type")}}encodeSignature(t){var n;let r=t.startsWith("sig")?t.substring(0,3):t.substring(0,5);if(Object.prototype.hasOwnProperty.call(Y,r))return Buffer.from(de(t,(n=Object.getOwnPropertyDescriptor(Y,r))==null?void 0:n.value)).toString("hex");throw new Error("Unsupported Signature Type")}calcFees(t=0,r=0,n=0){return this._minimalFees+this._minimalNanotezPerGasUnit*t+this._minimalNanotezPerByte*n+r*this._costPerByte}async estimateInitiateFees(t){let r={receivingAddress:"tz1Q2prWCrDGFDuGTe7axdt4z9e3QkCqdhmD",secretHash:"169cbd29345af89a0983f28254e71bdd1367890b9876fc8a9ea117c32f6a521b",refundTimestamp:2147483647,rewardForRedeem:0,netAmount:100},n=this.buildInitiateTransaction(r),a=await this._tezos.rpc.getBlockHeader(),s=await this._tezos.rpc.getContract(t),m=await this._tezos.rpc.runOperation({chain_id:a.chain_id,operation:{branch:a.hash,signature:"sigUHx32f9wesZ1n2BWpixXz4AQaZggEtchaQNHYGRCoWNAXx45WGW2ua3apUUUAGMLPwAU41QoaFCzVSL61VaessLg4YbbP",contents:[{amount:"0",counter:(parseInt(s.counter||"0")+1).toString(),destination:this._contractAddress,fee:this.calcFees(104e4,6e4,this._initiateTxSize).toString(),gas_limit:"1040000",kind:gt.TRANSACTION,source:t,storage_limit:"60000",parameters:n.data}]}}),d=0,l=0;return m.contents.forEach(p=>{if(p.metadata.operation_result.status!=="applied")throw new Error("Some error was encountered while estimating fees");l+=parseInt(p.metadata.operation_result.consumed_gas||"0"),d+=parseInt(p.metadata.operation_result.paid_storage_size_diff||"0")}),this.calcFees(l,d,this._initiateTxSize)}async estimateRedeemFees(t){let r=this.calcFees(this._gasLimit,0,this._redeemTxSize);return await this._tezos.rpc.getManagerKey(t)===null&&(r+=257*this._costPerByte),{totalCost:r,rewardForRedeem:2*r}}isValidAddress(t){return ft(t)==xt.VALID}};import{TezosToolkit as At}from"@taquito/taquito";var ee=class extends S{static async create(e,t,r){let n=c.blockchains.tezos.rpc[e];r!==void 0&&(n.rpc=r);let a=new At(n.rpc),s=await a.rpc.getChainId();if(n.chainID!==s.toString())throw new Error(`Wrong chain ID: expected ${n.chainID}, actual ${s}`);return new ee(a,c.currencies[t].contracts.entrypoints,c.currencies[t].contracts[e].address,c.blockchains.tezos.rpc[e].blockTime,c.currencies[t].contracts[e].gasLimit,c.blockchains.tezos.rpc[e].minimalFees,c.blockchains.tezos.rpc[e].minimalNanotezPerGasUnit,c.blockchains.tezos.rpc[e].minimalNanotezPerByte,c.blockchains.tezos.rpc[e].costPerByte,c.currencies[t].contracts[e].redeemTxSize,c.currencies[t].contracts[e].initiateTxSize)}parseInitiateParameters(e){var n;if(e.parameters===void 0)throw new Error("Parameters are undefined");let t=(n=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:n.Execute(e.parameters.value);if(t===void 0)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=(()=>{switch(e.parameters.entrypoint){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`)}})();return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:P(r.refundTime),netAmount:parseInt(r.totalAmount)-parseInt(r.payoffAmount),rewardForRedeem:parseInt(r.payoffAmount)}}};import{TezosToolkit as Tt}from"@taquito/taquito";var te=class extends S{static async create(e,t,r){let n=c.blockchains.tezos.rpc[e];r!==void 0&&(n.rpc=r);let a=new Tt(n.rpc),s=await a.rpc.getChainId();if(n.chainID!==s.toString())throw new Error(`Wrong chain ID: expected ${n.chainID}, actual ${s}`);return new te(a,c.currencies[t].contracts.entrypoints,c.currencies[t].contracts[e].address,c.blockchains.tezos.rpc[e].blockTime,c.currencies[t].contracts[e].gasLimit,c.blockchains.tezos.rpc[e].minimalFees,c.blockchains.tezos.rpc[e].minimalNanotezPerGasUnit,c.blockchains.tezos.rpc[e].minimalNanotezPerByte,c.blockchains.tezos.rpc[e].costPerByte,c.currencies[t].contracts[e].redeemTxSize,c.currencies[t].contracts[e].initiateTxSize)}parseInitiateParameters(e){var n;if(!e.parameters)throw new Error("Parameters are undefined");let t=(n=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:n.Execute(e.parameters.value);if(!t)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=this.getInitiateParams(e.parameters.entrypoint,t);return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:P(r.refundTime),netAmount:parseInt(r.totalAmount)-parseInt(r.payoffAmount),rewardForRedeem:parseInt(r.payoffAmount)}}getInitiateParams(e,t){switch(e){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e}`)}}};export{O as Atomex,ae as AtomexBuilder,x as AuthorizationManager,z as DefaultSerializedAuthTokenMapper,ne as ImportantDataReceivingMode,U as InMemoryAuthorizationManagerStore,oe as InMemoryCurrenciesProvider,ce as InMemoryTezosSigner,E as LocalStorageAuthorizationManagerStore,D as MixedApiAtomexClient,I as RestAtomexClient,N as SignersManager,V as WalletTezosSigner,F as Web3EthereumSigner,R as WebSocketAtomexClient,f as atomexUtils,b as converters,Te as legacy,ge as prepareTimeoutDuration,L as textUtils,Nt as wait};
//# sourceMappingURL=index.js.map
