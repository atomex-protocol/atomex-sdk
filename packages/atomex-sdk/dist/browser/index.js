var tt=Object.defineProperty,At=Object.defineProperties;var vt=Object.getOwnPropertyDescriptors;var et=Object.getOwnPropertySymbols;var Pt=Object.prototype.hasOwnProperty,Ct=Object.prototype.propertyIsEnumerable;var Oe=(n,e,t)=>e in n?tt(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,f=(n,e)=>{for(var t in e||(e={}))Pt.call(e,t)&&Oe(n,t,e[t]);if(et)for(var t of et(e))Ct.call(e,t)&&Oe(n,t,e[t]);return n},v=(n,e)=>At(n,vt(e));var te=(n,e)=>{for(var t in e)tt(n,t,{get:e[t],enumerable:!0})};var i=(n,e,t)=>(Oe(n,typeof e!="symbol"?e+"":e,t),t);var U=class{constructor(e){this.options=e;i(this,"authorization");i(this,"exchangeManager");i(this,"swapManager");i(this,"signers");i(this,"atomexContext");if(this.atomexContext=e.atomexContext,this.signers=e.managers.signersManager,this.authorization=e.managers.authorizationManager,this.exchangeManager=e.managers.exchangeManager,this.swapManager=e.managers.swapManager,e.blockchains)for(let t of Object.keys(e.blockchains))this.addBlockchain(r=>e.blockchains[t])}get atomexNetwork(){return this.atomexContext.atomexNetwork}async addSigner(e){var t,r,o;await this.signers.addSigner(e),await((o=(r=(t=this.options.blockchains)==null?void 0:t[e.blockchain])==null?void 0:r.mainnet.blockchainToolkitProvider)==null?void 0:o.addSigner(e))}addBlockchain(e){let t=e(this.atomexContext),r=this.atomexNetwork=="mainnet"?t.mainnet:t.testnet;r&&this.atomexContext.providers.blockchainProvider.addBlockchain(r)}async swap(e,t){throw new Error("Not implemented")}dispose(){this.authorization.dispose(),this.atomexContext.managers.exchangeManager.dispose(),this.atomexContext.managers.swapManager.dispose(),this.atomexContext.services.exchangeService.dispose(),this.atomexContext.services.swapService.dispose()}};var Ie=class{constructor(e){this.atomexNetwork=e;i(this,"id");i(this,"managers");i(this,"services");i(this,"providers");this.id=Ie.idCounter++,this.managers=new _e(this),this.services=new De(this),this.providers=new Re(this)}},W=Ie;i(W,"idCounter",0);var _e=class{constructor(e){this.context=e;i(this,"_signersManager");i(this,"_authorizationManager");i(this,"_exchangeManager");i(this,"_swapManager")}get signersManager(){if(!this._signersManager)throw new S("managers.signersManager");return this._signersManager}set signersManager(e){this._signersManager=e}get authorizationManager(){if(!this._authorizationManager)throw new S("managers.authorizationManager");return this._authorizationManager}set authorizationManager(e){this._authorizationManager=e}get exchangeManager(){if(!this._exchangeManager)throw new S("managers.exchangeManager");return this._exchangeManager}set exchangeManager(e){this._exchangeManager=e}get swapManager(){if(!this._swapManager)throw new S("managers.swapManager");return this._swapManager}set swapManager(e){this._swapManager=e}},De=class{constructor(e){this.context=e;i(this,"_exchangeService");i(this,"_swapService")}get exchangeService(){if(!this._exchangeService)throw new S("services.exchangeService");return this._exchangeService}set exchangeService(e){this._exchangeService=e}get swapService(){if(!this._swapService)throw new S("services.swapService");return this._swapService}set swapService(e){this._swapService=e}},Re=class{constructor(e){this.context=e;i(this,"_blockchainProvider")}get blockchainProvider(){if(!this._blockchainProvider)throw new S("providers.blockchainProvider");return this._blockchainProvider}set blockchainProvider(e){this._blockchainProvider=e}},S=class extends Error{constructor(t){super(S.getMessage(t));i(this,"name");i(this,"componentName");this.componentName=t,this.name=this.constructor.name}static getMessage(t){return`Atomex "${t}" component has not resolved yet`}};var ke=class{constructor(e,t){this.currency=e;this.getBalanceImplementation=t}getBalance(e){return this.getBalanceImplementation(e)}};var re=class{constructor(){i(this,"currencyInfoMap",new Map)}addBlockchain(e){var t,r;for(let o of e.currencies){if(this.currencyInfoMap.has(o.id))throw new Error("There is already currency added with the same key");let s=e.currencyOptions[o.id],a={currency:o,atomexProtocol:s==null?void 0:s.atomexProtocol,blockchainToolkitProvider:e.blockchainToolkitProvider,balanceProvider:(t=s==null?void 0:s.currencyBalanceProvider)!=null?t:this.createControlledBalancesProvider(o,e.balancesProvider),swapTransactionsProvider:(r=s==null?void 0:s.swapTransactionsProvider)!=null?r:e.swapTransactionsProvider};this.currencyInfoMap.set(o.id,a)}}getCurrencyInfo(e){return this.currencyInfoMap.get(e)}createControlledBalancesProvider(e,t){return new ke(e,r=>t.getBalance(r,e))}};var C={};te(C,{hexStringToObject:()=>Bt,hexStringToString:()=>it,hexStringToUint8Array:()=>nt,numberToTokensAmount:()=>Mt,objectToHexString:()=>Et,stringToHexString:()=>ot,tokensAmountToNat:()=>zt,uint8ArrayToHexString:()=>be});import rt from"bignumber.js";import{Buffer as P}from"buffer";var nt=n=>{var t;let e=(t=n.match(/[\da-f]{2}/gi))==null?void 0:t.map(r=>parseInt(r,16));return new Uint8Array(e)},be=n=>P.from(n).toString("hex"),ot=n=>P.from(n,"utf8").toString("hex"),it=n=>P.from(nt(n)).toString("utf8"),Et=n=>ot(JSON.stringify(n)),Bt=n=>{try{return JSON.parse(it(n))}catch(e){return null}},zt=(n,e)=>new rt(n).multipliedBy(10**e).integerValue(),Mt=(n,e)=>new rt(n).integerValue().div(10**e);var w={};te(w,{ensureNetworksAreSame:()=>Ot});var Ot=(n,e)=>{if((typeof n=="string"?n:n.atomexNetwork)!==(typeof e=="string"?e:e.atomexNetwork))throw new Error("Networks are different")};var ne={};te(ne,{capitalize:()=>_t,padEnd:()=>Rt,padStart:()=>Dt});var _t=n=>{var e;return n&&((e=n[0])==null?void 0:e.toLocaleUpperCase())+n.slice(1)},st=(n,e,t,r=" ")=>{if(String.prototype.padStart!==void 0)return n.padStart(t,r);let o=n.length;if(t<=o||r=="")return n;let s=t-o,a=r.repeat(Math.ceil(s/r.length));return a.length>s&&(a=a.slice(0,s)),e?a+n:n+a},Dt=(n,e,t=" ")=>String.prototype.padStart!==void 0?n.padStart(e,t):st(n,!0,e,t),Rt=(n,e,t=" ")=>String.prototype.padEnd!==void 0?n.padEnd(e,t):st(n,!1,e,t);var Pr=n=>new Promise(e=>setTimeout(e,n)),Ne=n=>Math.min(n,2147483647);var q=class{constructor(e){this.atomexNetwork=e;i(this,"_signers",new Set)}get signers(){return this._signers}addSigner(e){return w.ensureNetworksAreSame(this,e),this._signers.add(e),Promise.resolve(e)}async removeSigner(e,t){let r=typeof e=="string"?await this.findSigner(e,t):e;return r?this._signers.delete(r):!1}async findSigner(e,t){if(!this.signers.size)return;let r=[];for(let s of this.signers){if(t&&s.blockchain!==t)continue;let a=s.getAddress();if(typeof a=="string"){if(a===e)return s;continue}r.push(a.then(c=>[s,c]))}let o=await Promise.allSettled(r);for(let s of o)if(s.status==="fulfilled"&&s.value[1]===e)return s.value[0]}};import{ec as It}from"elliptic";var Ue=null,Nt=()=>(Ue||(Ue=new It("secp256k1")),Ue),Ut=n=>{let e=C.hexStringToUint8Array(n);if(e.length!==64&&e.length!==65)throw new Error(`Invalid signature: ${n}`);let t=e.length===64?27+(e[32]>>7):e[64];return(t===0||t===1)&&(t+=27),{r:be(e.slice(0,32)),s:be(e.slice(32,64)),v:t,recoveryParameter:1-t%2}},at=(n,e)=>{let t=Ut(n),r=P.from(e.startsWith("0x")?e.substring(2):e,"hex"),o=Nt().recoverPubKey(r,{r:t.r,s:t.s},t.recoveryParameter);return"0x"+o.encode("hex",!1)};var We=class{constructor(e,t){this.atomexNetwork=e;this.web3=t;i(this,"blockchain","ethereum")}async getAddress(){let t=(await this.web3.eth.getAccounts())[0];if(!t)throw new Error("Address is unavailable");return t}getPublicKey(){}async sign(e){let t=await this.getAddress(),r=await this.signInternal(e,t),o=at(r,this.web3.eth.accounts.hashMessage(e));return{address:t,publicKeyBytes:o.startsWith("0x")?o.substring(2):o,signatureBytes:r.substring(r.startsWith("0x")?2:0,r.length-2),algorithm:We.signingAlgorithm}}signInternal(e,t){return new Promise((r,o)=>this.web3.eth.personal.sign(e,t,"",(s,a)=>a?r(a):o(s)))}},F=We;i(F,"signingAlgorithm","Keccak256WithEcdsa:Geth2940");var ct={id:"ETH",name:"Ethereum",symbol:"ETH",blockchain:"ethereum",decimals:18,type:"native"},qe=[ct],Fe=[ct];var L=class{getBalance(e,t){throw new Error("Method not implemented.")}};var $=class{getSwapTransactions(e){throw new Error("Method not implemented.")}};var K=class{getReadonlyToolkit(e,t){throw new Error("Method not implemented.")}getToolkit(e,t,r){throw new Error("Method not implemented.")}addSigner(e){throw new Error("Method not implemented.")}removeSigner(e){throw new Error("Method not implemented.")}};var oe=(r=>(r[r.Local=0]="Local",r[r.Remote=1]="Remote",r[r.SafeMerged=2]="SafeMerged",r))(oe||{});var Te=class{constructor(e){i(this,"currencies");this.currencies=new Map(e instanceof Map?e:Object.entries(e))}getCurrency(e){return Promise.resolve(this.currencies.get(e))}addCurrency(e){this.currencies.set(e.id,e)}removeCurrency(e){return this.currencies.delete(e)}};var p=class{constructor(){i(this,"listeners",new Set)}addListener(e){return this.listeners.add(e),this}removeListener(e){return this.listeners.has(e)&&this.listeners.delete(e),this}removeAllListeners(){return this.listeners=new Set,this}emit(...e){!this.listeners.size||(this.listeners.size===1?this.listeners.values().next().value(...e):[...this.listeners].forEach(t=>t(...e)))}};var Ae=class{constructor(e){this.exchangeService=e;i(this,"events",{orderUpdated:new p,orderBookUpdated:new p,topOfBookUpdated:new p});i(this,"handleExchangeServiceOrderUpdated",e=>{this.events.orderUpdated.emit(e)});i(this,"handleExchangeServiceOrderBookUpdated",e=>{this.events.orderBookUpdated.emit(e)});i(this,"handleExchangeServiceTopOfBookUpdated",e=>{this.events.topOfBookUpdated.emit(e)});this.attachEvents()}getOrder(e,t,r=2){return this.exchangeService.getOrder(e,t)}getOrders(e,t,r=2){return this.exchangeService.getOrders(e,t)}getSymbols(){return this.exchangeService.getSymbols()}getTopOfBook(e){return this.exchangeService.getTopOfBook(e)}async getOrderBook(e){return this.exchangeService.getOrderBook(e)}addOrder(e,t){return this.exchangeService.addOrder(e,t)}cancelOrder(e,t){return this.exchangeService.cancelOrder(e,t)}cancelAllOrders(e,t){return this.exchangeService.cancelAllOrders(e,t)}getRewardForRedeem(e,t){throw new Error("Not implemented")}attachEvents(){this.exchangeService.events.orderUpdated.addListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.events.orderBookUpdated.addListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.events.topOfBookUpdated.addListener(this.handleExchangeServiceTopOfBookUpdated)}detachEvents(){this.exchangeService.events.orderUpdated.removeListener(this.handleExchangeServiceOrderUpdated),this.exchangeService.events.orderBookUpdated.removeListener(this.handleExchangeServiceOrderBookUpdated),this.exchangeService.events.topOfBookUpdated.removeListener(this.handleExchangeServiceTopOfBookUpdated)}dispose(){this.exchangeService.dispose()}};var ve=class{constructor(e){this.swapService=e;i(this,"events",{swapUpdated:new p});i(this,"handleSwapServiceSwapUpdated",e=>{this.events.swapUpdated.emit(e)});this.attachEvents()}getSwap(e,t,r=2){return this.swapService.getSwap(e,t)}getSwaps(e,t,r=2){return this.swapService.getSwaps(e,t)}attachEvents(){this.swapService.events.swapUpdated.addListener(this.handleSwapServiceSwapUpdated)}detachEvents(){this.swapService.events.swapUpdated.removeListener(this.handleSwapServiceSwapUpdated)}dispose(){this.swapService.dispose()}};import{SigningType as Vt}from"@airgap/beacon-sdk";import{b58cdecode as Ht,prefix as jt,validatePkAndExtractPrefix as Gt}from"@taquito/utils";var x={};te(x,{decodeSignature:()=>ie,getRawMichelineSigningData:()=>$t,getRawSigningData:()=>Lt,getTezosSigningAlgorithm:()=>Qt,getWalletMichelineSigningData:()=>Kt});import{b58cdecode as Wt,prefix as qt,Prefix as Q}from"@taquito/utils";var Ft="54657a6f73205369676e6564204d6573736167653a20",mt=(n,e)=>{let t=C.stringToHexString(n),r=e?e+t:t,o=ne.padStart((r.length/2).toString(16),8,"0");return"0501"+o+r},Lt=n=>C.stringToHexString(n),$t=n=>mt(n),Kt=n=>mt(n,Ft),Qt=n=>{let e=n.substring(0,n.startsWith("tz")?3:4);switch(e){case Q.TZ1:case Q.EDPK:return"Ed25519:Blake2b";case Q.TZ2:case Q.SPPK:return"Blake2bWithEcdsa:Secp256k1";case Q.TZ3:case Q.P2PK:return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address/public key prefix: ${e} (${n})`)}},ie=n=>{let e=n.startsWith("sig")?n.substring(0,3):n.substring(0,5),t=Wt(n,qt[e]);return Buffer.from(t).toString("hex")};var H=n=>{let e=Gt(n),t=Ht(n,jt[e]);return P.from(t).toString("hex")};var Pe=class{constructor(e,t){this.atomexNetwork=e;this.beaconWallet=t;i(this,"blockchain","tezos")}getAddress(){return this.beaconWallet.getPKH()}async getPublicKey(){var e;return(e=await this.beaconWallet.client.getActiveAccount())==null?void 0:e.publicKey}async sign(e){let[t,r,o]=await Promise.all([this.getAddress(),this.getPublicKey(),this.beaconWallet.client.requestSignPayload({payload:x.getWalletMichelineSigningData(e),signingType:Vt.MICHELINE})]);if(!r)throw new Error("BeaconWallet: public key is unavailable");let s=x.getTezosSigningAlgorithm(r),a=H(r),c=ie(o.signature);return{address:t,algorithm:s,publicKeyBytes:a,signatureBytes:c,signingDataType:"tezos/wallet-micheline"}}};var Ce=class{constructor(e,t){this.atomexNetwork=e;this.templeWallet=t;i(this,"blockchain","tezos")}getAddress(){return this.templeWallet.getPKH()}getPublicKey(){var e;return(e=this.templeWallet.permission)==null?void 0:e.publicKey}async sign(e){let[t,r,o]=await Promise.all([this.getAddress(),this.getPublicKey(),this.templeWallet.sign(x.getWalletMichelineSigningData(e))]);if(!r)throw new Error("TempleWallet: public key is unavailable");let s=x.getTezosSigningAlgorithm(r),a=H(r),c=ie(o);return{address:t,algorithm:s,publicKeyBytes:a,signatureBytes:c,signingDataType:"tezos/wallet-micheline"}}};var se=class{constructor(e,t){this.atomexNetwork=e;this.wallet=t;i(this,"blockchain","tezos");i(this,"internalSigner");this.internalSigner=this.createInternalSigner()}getAddress(){return this.internalSigner.getAddress()}getPublicKey(){return this.internalSigner.getPublicKey()}sign(e){return this.internalSigner.sign(e)}createInternalSigner(){var e;if(((e=this.wallet.client)==null?void 0:e.name)!==void 0)return new Pe(this.atomexNetwork,this.wallet);if(this.wallet.permission!==void 0&&this.wallet.connected!==void 0)return new Ce(this.atomexNetwork,this.wallet);throw new Error("Unknown Tezos wallet")}};import{InMemorySigner as Zt}from"@taquito/signer";var Ee=class{constructor(e,t){this.atomexNetwork=e;i(this,"blockchain","tezos");i(this,"internalInMemorySigner");this.internalInMemorySigner=new Zt(t)}getAddress(){return this.internalInMemorySigner.publicKeyHash()}getPublicKey(){return this.internalInMemorySigner.publicKey()}async sign(e){let t=x.getRawSigningData(e),[r,o,s]=await Promise.all([this.getAddress(),this.getPublicKey(),this.internalInMemorySigner.sign(t)]),a=H(o),c=s.sbytes.substring(s.bytes.length),m=x.getTezosSigningAlgorithm(o);return{address:r,algorithm:m,publicKeyBytes:a,signatureBytes:c}}};var pt={id:"XTZ",name:"Tezos",symbol:"XTZ",blockchain:"tezos",decimals:6,type:"native"},ut={id:"TZBTC",name:"tzBTC",symbol:"tzBTC",blockchain:"tezos",decimals:8,type:"fa1.2"},lt={id:"USDT_XTZ",name:"Tether USD",symbol:"USDt",blockchain:"tezos",decimals:6,tokenId:0,type:"fa2"},Le=[pt,ut,lt],$e=[pt,ut,lt];var j=class{getBalance(e,t){throw new Error("Method not implemented.")}};var G=class{getSwapTransactions(e){throw new Error("Method not implemented.")}};var V=class{getReadonlyToolkit(e,t){throw new Error("Method not implemented.")}getToolkit(e,t,r){throw new Error("Method not implemented.")}addSigner(e){throw new Error("Method not implemented.")}removeSigner(e){throw new Error("Method not implemented.")}};var ae=class{constructor(e){this.baseUrl=e}async request(e){let t=new URL(e.urlPath,this.baseUrl);e.params&&this.setSearchParams(t,e.params);let r=await fetch(t.toString(),{headers:this.createHeaders(e),method:e.method||"GET",body:e.payload?JSON.stringify(e.payload):void 0});if(r.status!==404){if(!r.ok){let o=await r.text();throw Error(o)}return await r.json()}}setSearchParams(e,t){for(let r in t){let o=t[r];o!=null&&e.searchParams.set(r,String(o))}}createHeaders(e){let t={};return e.authToken&&(t.Authorization=`Bearer ${e.authToken}`),e.method==="POST"&&e.payload&&(t["Content-Type"]="application/json"),t}};import h from"bignumber.js";var ce=n=>{let[e="",t=""]=n.split("/");return[e,t]},Ke=(n,e,t,r)=>{let[o,s]=ce(n),a=new h(e),c=new h(t),m=c.multipliedBy(a),l=a.div(m),u={currencyId:o,amount:a,price:c},g={currencyId:s,amount:m,price:l};return r==="Buy"?[g,u]:[u,g]},Z=(n,e,t)=>{let r=n.find(s=>s.name===`${e}/${t}`),o="Sell";if(r||(r=n.find(s=>s.name===`${t}/${e}`),o="Buy"),!r)throw new Error(`Invalid pair: ${e}/${t}`);return[r.name,o]},Be=n=>n.map(t=>Jt(t)),Jt=n=>{let[e,t]=ce(n.symbol);return{ask:new h(n.ask),bid:new h(n.bid),symbol:n.symbol,timeStamp:new Date(n.timeStamp),quoteCurrency:e,baseCurrency:t}},yt=n=>n.map(t=>{let[r,o]=ce(t.name);return{name:t.name,minimumQty:new h(t.minimumQty),quoteCurrency:r,baseCurrency:o}}),ft=n=>{let[e,t]=ce(n.symbol);return{updateId:n.updateId,symbol:n.symbol,quoteCurrency:e,baseCurrency:t,entries:n.entries.map(o=>({side:o.side,price:new h(o.price),qtyProfile:o.qtyProfile}))}},xt=n=>{let e=n[0];if(!e)throw new Error("Unexpected dto");let[t,r]=ce(e.symbol);return{updateId:e.updateId,symbol:e.symbol,quoteCurrency:t,baseCurrency:r,entries:n.map(s=>({side:s.side,price:new h(s.price),qtyProfile:s.qtyProfile}))}},Qe=n=>{var r;let[e,t]=Ke(n.symbol,n.qty,n.price,n.side);return{id:n.id,from:e,to:t,clientOrderId:n.clientOrderId,side:n.side,symbol:n.symbol,leaveQty:new h(n.leaveQty),timeStamp:new Date(n.timeStamp),type:n.type,status:n.status,swapIds:((r=n.swaps)==null?void 0:r.map(o=>o.id))||[]}},St=n=>n.map(t=>Qe(t)),ht=n=>n.map(t=>({id:t.txId,blockId:t.blockHeight,confirmations:t.confirmations,currencyId:t.currency,status:t.status,type:t.type})),de=n=>{let[e,t]=Ke(n.symbol,n.qty,n.price,n.side);return{isInitiator:n.isInitiator,secret:n.secret,secretHash:n.secretHash,id:Number(n.id),from:e,to:t,trade:{qty:new h(n.qty),price:new h(n.price),side:n.side,symbol:n.symbol},timeStamp:new Date(n.timeStamp),counterParty:{status:n.counterParty.status,transactions:ht(n.counterParty.transactions),requisites:v(f({},n.counterParty.requisites),{rewardForRedeem:new h(n.counterParty.requisites.rewardForRedeem)}),trades:gt(n.counterParty.trades)},user:{status:n.user.status,transactions:ht(n.user.transactions),requisites:v(f({},n.user.requisites),{rewardForRedeem:new h(n.user.requisites.rewardForRedeem)}),trades:gt(n.user.trades)}}},gt=n=>n.map(t=>({orderId:t.orderId,price:new h(t.price),qty:new h(t.qty)})),wt=n=>n.map(t=>de(t)),kt=n=>{let[e,t]=Ke(n.symbol,n.qty,n.price,n.side);return{id:n.id,clientOrderId:n.clientOrderId,side:n.side,status:n.status,leaveQty:new h(n.leaveQty),swapIds:n.swaps,symbol:n.symbol,type:n.type,timeStamp:new Date(n.timeStamp),from:e,to:t}};var M=class{constructor(e){i(this,"atomexNetwork");i(this,"events",{swapUpdated:new p,orderUpdated:new p,orderBookUpdated:new p,topOfBookUpdated:new p});i(this,"authorizationManager");i(this,"apiBaseUrl");i(this,"httpClient");i(this,"_symbolsCache");this.atomexNetwork=e.atomexNetwork,this.authorizationManager=e.authorizationManager,this.apiBaseUrl=e.apiBaseUrl,this.httpClient=new ae(this.apiBaseUrl)}async getOrder(e,t){let r=`/v1/Orders/${t}`,o=this.getRequiredAuthToken(e),s=await this.httpClient.request({urlPath:r,authToken:o});return s?Qe(s):void 0}async getOrders(e,t){let r="/v1/Orders",o=this.getRequiredAuthToken(e),s=v(f({},t),{sortAsc:void 0,sort:(t==null?void 0:t.sortAsc)!==void 0?t.sortAsc?"Asc":"Desc":void 0}),a=await this.httpClient.request({urlPath:r,authToken:o,params:s});return a?St(a):[]}async getSymbols(){let e="/v1/Symbols",t=await this.httpClient.request({urlPath:e}),r=t?yt(t):[];return t&&(this._symbolsCache=r),r}async getTopOfBook(e){let t="/v1/MarketData/quotes",r;if(e!=null&&e.length)if(typeof e[0]=="string")r=e;else{let a=await this.getCachedSymbols();r=e.map(c=>Z(a,c.from,c.to)[0])}let o={symbols:r==null?void 0:r.join(",")},s=await this.httpClient.request({urlPath:t,params:o});return s?Be(s):[]}async getOrderBook(e){let t="/v1/MarketData/book",r;if(typeof e=="string")r=e;else{let a=await this.getCachedSymbols();[r]=Z(a,e.from,e.to)}let o={symbol:r},s=await this.httpClient.request({urlPath:t,params:o});return s?ft(s):void 0}async addOrder(e,t){let r="/v1/Orders",o=this.getRequiredAuthToken(e),s,a;if(t.symbol&&t.side)[s,a]=[t.symbol,t.side];else if(t.from&&t.to){let l=await this.getCachedSymbols();[s,a]=Z(l,t.from,t.to)}else throw new Error("Invalid newOrderRequest argument passed");let c={symbol:s,side:a,clientOrderId:t.clientOrderId,type:t.type,proofsOfFunds:t.proofsOfFunds,requisites:t.requisites,amount:t.amount.toNumber(),price:t.price.toNumber()},m=await this.httpClient.request({urlPath:r,authToken:o,method:"POST",payload:c});if(m===void 0)throw new Error("Unexpected response dto");return m.orderId}async cancelOrder(e,t){let r=`/v1/Orders/${t.orderId}`,o=this.getRequiredAuthToken(e),s,a;if(t.symbol&&t.side)[s,a]=[t.symbol,t.side];else if(t.from&&t.to){let l=await this.getCachedSymbols();[s,a]=Z(l,t.from,t.to)}else throw new Error("Invalid cancelOrderRequest argument passed");let c={symbol:s,side:a},m=await this.httpClient.request({urlPath:r,authToken:o,params:c,method:"DELETE"});if(m===void 0)throw new Error("Unexpected response dto");return m}async cancelAllOrders(e,t){let r="/v1/Orders",o=this.getRequiredAuthToken(e),s,a;if(t.symbol&&t.side)[s,a]=[t.symbol,t.side];else if(t.from&&t.to){let m=await this.getCachedSymbols();[s,a]=Z(m,t.from,t.to),t.cancelAllDirections&&(a="All")}else throw new Error("Invalid cancelAllOrdersRequest argument passed");let c=await this.httpClient.request({urlPath:r,authToken:o,params:{symbol:s,side:a,forAllConnections:t.forAllConnections},method:"DELETE"});if(c===void 0)throw new Error("Unexpected response dto");return c}getSwapTransactions(e){throw new Error("Method not implemented.")}async getSwap(e,t){let r=`/v1/Swaps/${e}`,s={userIds:this.getUserIds(t).join(",")},a=await this.httpClient.request({urlPath:r,params:s});return a?de(a):void 0}async getSwaps(e,t){let r="/v1/Swaps",o=this.getUserIds(e),s=v(f({},t),{sortAsc:void 0,sort:(t==null?void 0:t.sortAsc)!==void 0?t.sortAsc?"Asc":"Desc":void 0,userIds:o.join(",")}),a=await this.httpClient.request({urlPath:r,params:s});return a?wt(a):[]}dispose(){}getUserIds(e){let r=(Array.isArray(e)?e:[e]).map(o=>{var s;return(s=this.authorizationManager.getAuthToken(o))==null?void 0:s.userId}).filter(o=>o);if(!r.length)throw new Error("Incorrect accountAddresses");return r}getRequiredAuthToken(e){var r;let t=(r=this.authorizationManager.getAuthToken(e))==null?void 0:r.value;if(!t)throw new Error(`Cannot find auth token for address: ${e}`);return t}async getCachedSymbols(){return this._symbolsCache||(this._symbolsCache=await this.getSymbols()),this._symbolsCache}};var O=class{constructor(e,t){this.url=e;this.authToken=t;i(this,"events",{messageReceived:new p,closed:new p});i(this,"_socket");i(this,"onMessageReceived",e=>{this.events.messageReceived.emit(JSON.parse(e.data))});i(this,"onClosed",e=>{this.events.closed.emit(this,e)})}get socket(){if(!this._socket)throw new Error("Internal websocket is not created. Use the connect method first");return this._socket}set socket(e){this._socket=e}async connect(){return this.disconnect(),new Promise(e=>{let t=this.authToken?["access_token",this.authToken]:void 0;this.socket=new WebSocket(this.url,t),this.socket.addEventListener("message",this.onMessageReceived),this.socket.addEventListener("error",this.onError),this.socket.addEventListener("close",this.onClosed),this.socket.addEventListener("open",()=>e())})}disconnect(){this._socket&&(this.socket.removeEventListener("message",this.onMessageReceived),this.socket.removeEventListener("error",this.onError),this.socket.removeEventListener("close",this.onClosed),this.socket.close())}subscribe(e){let t={method:"subscribe",data:e,requestId:Date.now()};this.socket.send(JSON.stringify(t))}unsubscribe(e){let t={method:"unsubscribe",data:e,requestId:Date.now()};this.socket.send(JSON.stringify(t))}onError(e){throw new Error(`Websocket received error: ${JSON.stringify(e)}`)}};var He=class{constructor(e,t){this.webSocketApiBaseUrl=e;this.authorizationManager=t;i(this,"events",{messageReceived:new p});i(this,"sockets",new Map);i(this,"onAuthorized",async e=>{this.removeSocket(e.userId);let t=new O(new URL(He.EXCHANGE_URL_PATH,this.webSocketApiBaseUrl),e.value);t.events.messageReceived.addListener(this.onSocketMessageReceived),t.events.closed.addListener(this.onClosed),this.sockets.set(e.userId,t),await t.connect()});i(this,"onUnauthorized",e=>{this.removeSocket(e.userId)});i(this,"onSocketMessageReceived",e=>{this.events.messageReceived.emit(e)});i(this,"onClosed",(e,t)=>{setTimeout(()=>{e.connect()},1e3)});this.subscribeOnAuthEvents()}dispose(){this.sockets.forEach((e,t)=>{this.removeSocket(t)})}subscribeOnAuthEvents(){this.authorizationManager.events.authorized.addListener(this.onAuthorized),this.authorizationManager.events.unauthorized.addListener(this.onUnauthorized)}removeSocket(e){let t=this.sockets.get(e);t&&(t.events.messageReceived.removeListener(this.onSocketMessageReceived),t.events.closed.removeListener(this.onClosed),this.sockets.delete(e),t.disconnect())}},J=He;i(J,"EXCHANGE_URL_PATH","/ws/exchange");var me=class{constructor(e){this.webSocketApiBaseUrl=e;i(this,"events",{messageReceived:new p});i(this,"socket");i(this,"onSocketClosed",(e,t)=>{setTimeout(async()=>{await e.connect(),this.subscribeOnStreams(e)},1e3)});i(this,"onSocketMessageReceived",e=>{this.events.messageReceived.emit(e)});this.socket=new O(new URL(me.MARKET_DATA_URL_PATH,this.webSocketApiBaseUrl))}async connect(){this.socket.events.messageReceived.addListener(this.onSocketMessageReceived),this.socket.events.closed.addListener(this.onSocketClosed),await this.socket.connect(),this.subscribeOnStreams(this.socket)}dispose(){this.socket.events.messageReceived.removeListener(this.onSocketMessageReceived),this.socket.events.closed.removeListener(this.onSocketClosed),this.socket.disconnect()}subscribeOnStreams(e){e.subscribe(me.TOP_OF_BOOK_STREAM),e.subscribe(me.ORDER_BOOK_STREAM)}},E=me;i(E,"MARKET_DATA_URL_PATH","/ws/marketdata"),i(E,"TOP_OF_BOOK_STREAM","topOfBook"),i(E,"ORDER_BOOK_STREAM","orderBook");var _=class{constructor(e){i(this,"atomexNetwork");i(this,"events",{swapUpdated:new p,orderUpdated:new p,orderBookUpdated:new p,topOfBookUpdated:new p});i(this,"authorizationManager");i(this,"webSocketApiBaseUrl");i(this,"marketDataWebSocketClient");i(this,"exchangeWebSocketClient");i(this,"onSocketMessageReceived",e=>{switch(e.event){case"order":this.events.orderUpdated.emit(kt(e.data));break;case"swap":this.events.swapUpdated.emit(de(e.data));break;case"topOfBook":this.events.topOfBookUpdated.emit(Be(e.data));break;case"entries":this.events.orderBookUpdated.emit(xt(e.data));break}});this.atomexNetwork=e.atomexNetwork,this.authorizationManager=e.authorizationManager,this.webSocketApiBaseUrl=e.webSocketApiBaseUrl,this.exchangeWebSocketClient=new J(this.webSocketApiBaseUrl,this.authorizationManager),this.exchangeWebSocketClient.events.messageReceived.addListener(this.onSocketMessageReceived),this.marketDataWebSocketClient=new E(this.webSocketApiBaseUrl),this.marketDataWebSocketClient.events.messageReceived.addListener(this.onSocketMessageReceived),this.marketDataWebSocketClient.connect()}getOrder(e,t){throw new Error("Method not implemented.")}getOrders(e,t){throw new Error("Method not implemented.")}getSymbols(){throw new Error("Method not implemented.")}getTopOfBook(e){throw new Error("Method not implemented.")}async getOrderBook(e){throw new Error("Method not implemented.")}addOrder(e,t){throw new Error("Method not implemented.")}cancelOrder(e,t){throw new Error("Method not implemented.")}cancelAllOrders(e,t){throw new Error("Method not implemented.")}getSwapTransactions(e){throw new Error("Method not implemented.")}getSwap(e,t){throw new Error("Method not implemented.")}getSwaps(e,t){throw new Error("Method not implemented.")}dispose(){this.exchangeWebSocketClient.dispose(),this.marketDataWebSocketClient.dispose()}};var X=class{constructor(e,t,r){this.atomexNetwork=e;this.restAtomexClient=t;this.webSocketAtomexClient=r;i(this,"events");w.ensureNetworksAreSame(this,t),w.ensureNetworksAreSame(this,r),this.events={swapUpdated:this.webSocketAtomexClient.events.swapUpdated,orderBookUpdated:this.webSocketAtomexClient.events.orderBookUpdated,orderUpdated:this.webSocketAtomexClient.events.orderUpdated,topOfBookUpdated:this.webSocketAtomexClient.events.topOfBookUpdated}}getOrder(e,t){return this.restAtomexClient.getOrder(e,t)}getOrders(e,t){return this.restAtomexClient.getOrders(e,t)}getSymbols(){return this.restAtomexClient.getSymbols()}getTopOfBook(e){return this.restAtomexClient.getTopOfBook(e)}async getOrderBook(e){return this.restAtomexClient.getOrderBook(e)}addOrder(e,t){return this.restAtomexClient.addOrder(e,t)}cancelOrder(e,t){return this.restAtomexClient.cancelOrder(e,t)}cancelAllOrders(e,t){return this.restAtomexClient.cancelAllOrders(e,t)}getSwapTransactions(e){return this.restAtomexClient.getSwapTransactions(e)}getSwap(e,t){return this.restAtomexClient.getSwap(e,t)}getSwaps(e,t){return this.restAtomexClient.getSwaps(e,t)}dispose(){this.webSocketAtomexClient.dispose(),this.restAtomexClient.dispose()}};var je=(n,e)=>new X(n.atomexNetwork,new M({atomexNetwork:n.atomexNetwork,authorizationManager:n.managers.authorizationManager,apiBaseUrl:e.apiBaseUrl}),new _({atomexNetwork:n.atomexNetwork,authorizationManager:n.managers.authorizationManager,webSocketApiBaseUrl:e.webSocketApiBaseUrl}));var pe=(r=>(r[r.Local=1]="Local",r[r.Remote=2]="Remote",r[r.All=3]="All",r))(pe||{});var ue=class{constructor(e){i(this,"events",{authorized:new p,unauthorized:new p,authTokenExpiring:new p,authTokenExpired:new p});i(this,"atomexNetwork");i(this,"signersManager");i(this,"store");i(this,"authorizationUrl");i(this,"expiringNotificationTimeInSeconds");i(this,"_authTokenData",new Map);i(this,"authTokenExpiringTimeoutCallback",e=>{let t=this._authTokenData.get(e.address);if(!t)return;clearTimeout(t.watcherId);let r=e.expired.getTime()-Date.now(),o=setTimeout(this.authTokenExpiredTimeoutCallback,Ne(r),e);this._authTokenData.set(e.address,v(f({},t),{watcherId:o})),this.events.authTokenExpiring.emit(e)});i(this,"authTokenExpiredTimeoutCallback",e=>{this.unregisterAuthToken(e),this.events.authTokenExpired.emit(e)});this.atomexNetwork=e.atomexNetwork,this.store=e.store,this.signersManager=e.signersManager,w.ensureNetworksAreSame(this,this.signersManager),this.authorizationUrl=new URL(ue.DEFAULT_GET_AUTH_TOKEN_URI,e.authorizationBaseUrl),this.expiringNotificationTimeInSeconds=e.expiringNotificationTimeInSeconds||ue.DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS}get authTokenData(){return this._authTokenData}getAuthToken(e){var t;return(t=this.authTokenData.get(e))==null?void 0:t.authToken}async authorize({address:e,authTokenSource:t=3,blockchain:r,authMessage:o=ue.DEFAULT_AUTH_MESSAGE}){if((t&1)===1){let u=this.getAuthToken(e)||await this.loadAuthTokenFromStore(e);if(u&&!this.isTokenExpiring(u))return u}if((t&2)!==2)return;let s=await this.signersManager.findSigner(e,r);if(!s)throw new Error(`Not found: the corresponding signer by the ${e} address`);let a=this.getAuthorizationTimeStamp(o),c=await s.sign(o+a);if(c.address!==e)throw new Error("Invalid address in the signed data");let m=await this.requestAuthToken({message:o,publicKey:c.publicKeyBytes,algorithm:c.algorithm,signingDataType:c.signingDataType,signature:c.signatureBytes,timeStamp:a}),l={value:m.token,userId:m.id,address:e,expired:new Date(m.expires)};return await this.registerAuthToken(l,!0),l}async unauthorize(e){let t=this.getAuthToken(e);return t?this.unregisterAuthToken(t):!1}dispose(){for(let e of this.authTokenData)this.untrackAuthToken(e[1].watcherId)}async loadAuthTokenFromStore(e){let t=await this.store.getAuthToken(e);if(!!t)return await this.registerAuthToken(t,!1)}async registerAuthToken(e,t){let r=this.trackAuthToken(e);if(!r)return;let o={authToken:e,watcherId:r};return this._authTokenData.set(e.address,o),t&&(e=await this.store.upsertAuthToken(e.address,e)),this.events.authorized.emit(e),e}async unregisterAuthToken(e){let t=this._authTokenData.get(e.address);if(!t)return!1;this.untrackAuthToken(t.watcherId);let r=await this.store.removeAuthToken(e)&&this._authTokenData.delete(e.address);return r&&this.events.unauthorized.emit(e),r}trackAuthToken(e){let t=e.expired.getTime()-Date.now();if(t<=0){this.store.removeAuthToken(e),this.events.authTokenExpired.emit(e);return}let r=t-this.expiringNotificationTimeInSeconds*1e3;return setTimeout(this.authTokenExpiringTimeoutCallback,Ne(r),e)}untrackAuthToken(e){clearTimeout(e)}getAuthorizationTimeStamp(e){return Date.now()}async requestAuthToken(e){let t=await fetch(this.authorizationUrl.href,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(await t.text());return t.json()}isTokenExpiring(e){return e.expired.getTime()-Date.now()<=this.expiringNotificationTimeInSeconds*1e3}},k=ue;i(k,"DEFAULT_AUTH_MESSAGE","Signing in "),i(k,"DEFAULT_GET_AUTH_TOKEN_URI","/v1/token"),i(k,"DEFAULT_EXPIRING_NOTIFICATION_TIME_IN_SECONDS",60);var D=class{mapAuthTokenToSerializedAuthToken(e){return{a:e.address,u:e.userId,e:e.expired.getTime(),v:e.value}}mapSerializedAuthTokenToAuthToken(e){return{address:e.a,userId:e.u,expired:new Date(e.e),value:e.v}}};var Ge=class{constructor(e,t,r=Ge.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}getAuthToken(e){let t=localStorage.getItem(this.getKey(e));return t&&this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(JSON.parse(t))||void 0}getAuthTokens(e){return e.map(t=>this.getAuthToken(t)).filter(Boolean)}upsertAuthToken(e,t){let r=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!r)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return localStorage.setItem(this.getKey(e),JSON.stringify(r)),t}removeAuthToken(e){return localStorage.removeItem(this.getKey(e)),!0}getKey(e){return this.keyPrefix+e}},le=Ge;i(le,"DefaultKeyPrefix","authToken:");var Ve=class{constructor(e,t,r=Ve.DefaultKeyPrefix){this.localStorage=e;this.serializedAuthTokenMapper=t;this.keyPrefix=r}get key(){return this.keyPrefix}getAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]&&(this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(t[e])||void 0)}getAuthTokens(e){let t=this.getSerializedAuthTokensStoreObject();return Object.values(t).map(r=>this.serializedAuthTokenMapper.mapSerializedAuthTokenToAuthToken(r)).filter(r=>!!r&&e.indexOf(r.address)>-1)}upsertAuthToken(e,t){let r=this.getSerializedAuthTokensStoreObject(),o=this.serializedAuthTokenMapper.mapAuthTokenToSerializedAuthToken(t);if(!o)throw new Error(`The authToken of the ${e} address can't be stored: serialization is failed`);return r[e]=o,this.localStorage.setItem(this.key,JSON.stringify(r)),t}removeAuthToken(e){let t=this.getSerializedAuthTokensStoreObject();return t[e]?(delete t[e],Object.keys(t).length?this.localStorage.setItem(this.key,JSON.stringify(t)):this.localStorage.removeItem(this.key),!0):!1}getSerializedAuthTokensStoreObject(){let e=this.localStorage.getItem(this.key);return e?JSON.parse(e):{}}},he=Ve;i(he,"DefaultKeyPrefix","authTokens");var R=class{constructor(e="single-key",t=new D){i(this,"storeStrategy");this.storeStrategy=typeof e=="string"?this.createPreDefinedStoreStrategy(e,t):e}getAuthToken(e){return Promise.resolve(this.storeStrategy.getAuthToken(e))}getAuthTokens(...e){return Promise.resolve(this.storeStrategy.getAuthTokens(e))}upsertAuthToken(e,t){return Promise.resolve(this.storeStrategy.upsertAuthToken(e,t))}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.storeStrategy.removeAuthToken(t))}createPreDefinedStoreStrategy(e,t){switch(e){case"single-key":return new he(globalThis.localStorage,t);case"multiple-keys":return new le(globalThis.localStorage,t);default:throw new Error(`Unknown the store strategy name: ${e}`)}}};var Y=class{constructor(){i(this,"authTokensMap",new Map)}getAuthToken(e){return Promise.resolve(this.authTokensMap.get(e))}getAuthTokens(...e){return Promise.resolve(e.reduce((t,r)=>{let o=this.authTokensMap.get(r);return o&&t.push(o),t},[]))}upsertAuthToken(e,t){return this.authTokensMap.set(e,t),Promise.resolve(t)}removeAuthToken(e){let t=typeof e=="string"?e:e.address;return Promise.resolve(this.authTokensMap.delete(t))}};var Ze=(n,e,t)=>{let r=globalThis.window?"browser":"node";return new k({atomexNetwork:n.atomexNetwork,signersManager:n.managers.signersManager,authorizationBaseUrl:e.authorizationBaseUrl,store:r==="browser"?new R(e.store.browser.storeStrategy):new Y})};var bt="https://api.atomex.me",Xt={authorization:{authorizationBaseUrl:bt,store:{node:{},browser:{storeStrategy:"single-key"}}},exchange:{apiBaseUrl:bt,webSocketApiBaseUrl:"wss://ws.api.atomex.me"}},Tt="https://api.test.atomex.me",Yt={authorization:{authorizationBaseUrl:Tt,store:{node:{},browser:{storeStrategy:"single-key"}}},exchange:{apiBaseUrl:Tt,webSocketApiBaseUrl:"wss://ws.api.test.atomex.me"}},Je={mainnet:Xt,testnet:Yt};var ze=class{constructor(e,t=new W(e.atomexNetwork)){this.options=e;this.atomexContext=t;i(this,"customAuthorizationManagerFactory");i(this,"customSignersManagerFactory");i(this,"customExchangeManagerFactory")}get controlledAtomexContext(){return this.atomexContext}useAuthorizationManager(e){return this.customAuthorizationManagerFactory=e,this}useSignersManager(e){return this.customSignersManagerFactory=e,this}useExchangeManager(e){return this.customExchangeManagerFactory=e,this}build(){this.controlledAtomexContext.providers.blockchainProvider=new re,this.controlledAtomexContext.managers.signersManager=this.createSignersManager(),this.controlledAtomexContext.managers.authorizationManager=this.createAuthorizationManager();let e=this.createDefaultExchangeService();this.controlledAtomexContext.services.exchangeService=e,this.controlledAtomexContext.services.swapService=e,this.controlledAtomexContext.managers.exchangeManager=this.createExchangeManager(),this.controlledAtomexContext.managers.swapManager=this.createSwapManager();let t=this.createDefaultBlockchainOptions();return new U({atomexContext:this.atomexContext,managers:{signersManager:this.atomexContext.managers.signersManager,authorizationManager:this.atomexContext.managers.authorizationManager,exchangeManager:this.atomexContext.managers.exchangeManager,swapManager:this.atomexContext.managers.swapManager},blockchains:t})}createAuthorizationManager(){let e=Je[this.atomexContext.atomexNetwork].authorization;return this.customAuthorizationManagerFactory?this.customAuthorizationManagerFactory(this.atomexContext,e,this.options):Ze(this.atomexContext,e,this.options)}createSignersManager(){return this.customSignersManagerFactory?this.customSignersManagerFactory(this.atomexContext,this.options):new q(this.atomexContext.atomexNetwork)}createDefaultExchangeService(){let e=Je[this.atomexContext.atomexNetwork].exchange;return je(this.atomexContext,e)}createExchangeManager(){return this.customExchangeManagerFactory?this.customExchangeManagerFactory(this.atomexContext,this.options):new Ae(this.atomexContext.services.exchangeService)}createSwapManager(){return new ve(this.atomexContext.services.swapService)}createDefaultBlockchainOptions(){return{tezos:this.createDefaultTezosBlockchainOptions(),ethereum:this.createDefaultEthereumBlockchainOptions()}}createDefaultTezosBlockchainOptions(){let e=new j,t=new G,r=new V;return{mainnet:{currencies:Le,balancesProvider:e,swapTransactionsProvider:t,blockchainToolkitProvider:r,currencyOptions:{}},testnet:{currencies:$e,balancesProvider:e,swapTransactionsProvider:t,blockchainToolkitProvider:r,currencyOptions:{}}}}createDefaultEthereumBlockchainOptions(){let e=new L,t=new $,r=new K;return{mainnet:{currencies:qe,balancesProvider:e,swapTransactionsProvider:t,blockchainToolkitProvider:r,currencyOptions:{}},testnet:{currencies:Fe,balancesProvider:e,swapTransactionsProvider:t,blockchainToolkitProvider:r,currencyOptions:{}}}}};var Xe={};te(Xe,{Atomex:()=>ge,EthereumHelpers:()=>fe,FA12Helpers:()=>Se,FA2Helpers:()=>we,Helpers:()=>I,TezosHelpers:()=>b,dt2ts:()=>B,now:()=>ye});var d={api:{mainnet:{baseUrl:"https://api.atomex.me"},testnet:{baseUrl:"https://api.test.atomex.me"},localhost:{baseUrl:"http://127.0.0.1:5000"}},blockchains:{ethereum:{rpc:{mainnet:{chainID:1,rpc:"https://mainnet.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10},testnet:{chainID:5,rpc:"https://goerli.infura.io/v3/7cd728d2d3384719a630d836f1693c5c",blockTime:10}}},tezos:{rpc:{mainnet:{chainID:"NetXdQprcVkpaWU",rpc:"https://rpc.tzkt.io/mainnet/",blockTime:30,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250},testnet:{chainID:"NetXnHfVqm9iesp",rpc:"https://rpc.tzkt.io/ithacanet/",blockTime:15,minimalFees:100,minimalNanotezPerGasUnit:.1,minimalNanotezPerByte:1,costPerByte:250}}}},currencies:{ETH:{contracts:{mainnet:{address:"0xe9c251cbb4881f9e056e40135e7d3ea9a7d037df",gasLimit:2e5},testnet:{address:"0x512fe6B803bA327DCeFBF2Cec7De333f761B0f2b",gasLimit:17e4},abi:[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Activated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"address",name:"_sender",type:"address"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!0,internalType:"address",name:"_participant",type:"address"},{indexed:!1,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_countdown",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_payoff",type:"uint256"},{indexed:!1,internalType:"bool",name:"_active",type:"bool"}],name:"Initiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"Redeemed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"Refunded",type:"event"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"swaps",outputs:[{internalType:"bytes32",name:"hashedSecret",type:"bytes32"},{internalType:"address payable",name:"initiator",type:"address"},{internalType:"address payable",name:"participant",type:"address"},{internalType:"uint256",name:"refundTimestamp",type:"uint256"},{internalType:"uint256",name:"countdown",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"bool",name:"active",type:"bool"},{internalType:"enum Atomex.State",name:"state",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"address payable",name:"_participant",type:"address"},{internalType:"uint256",name:"_refundTimestamp",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"initiate",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"add",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"activate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"},{internalType:"bytes32",name:"_secret",type:"bytes32"}],name:"redeem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"_hashedSecret",type:"bytes32"}],name:"refund",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}]},decimals:{original:18,displayed:4},blockchain:"ethereum"},XTZ:{contracts:{mainnet:{address:"KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL",redeemTxSize:133,initiateTxSize:200,gasLimit:15e3},testnet:{address:"KT1SJMtHZFSPva5AzQEx5btBuQ8BjvXqort3",redeemTxSize:133,initiateTxSize:200,gasLimit:85e3},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}],annots:["%fund"]},{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}],annots:["%withdraw"]}]},withdraw:{prim:"or",args:[{prim:"bytes",annots:[":secret","%redeem"]},{prim:"bytes",annots:[":hashed_secret","%refund"]}]},refund:{prim:"bytes",annots:[":hashed_secret"]},redeem:{prim:"bytes",annots:[":secret"]},initiate:{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate"]},fund:{prim:"or",args:[{prim:"pair",args:[{prim:"address",annots:["%participant"]},{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashed_secret"]},{prim:"timestamp",annots:["%refund_time"]}]},{prim:"mutez",annots:["%payoff"]}],annots:["%settings"]}],annots:[":initiate","%initiate"]},{prim:"bytes",annots:[":hashed_secret","%add"]}]},add:{prim:"bytes",annots:[":hashed_secret"]}}},decimals:{original:6,displayed:3},blockchain:"tezos"},TZBTC:{contracts:{mainnet:{address:"KT1Ap287P1NzsnToSJdA4aqSNjPomRaHBZSr",tokenAddress:"KT1PWx2mnDueood7fEmfbBDKx1D9BAnnXitn",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},testnet:{address:"KT1Jj1jzDQbDRHt4u7M73DUrBDV1napRbNFr",tokenAddress:"",redeemTxSize:133,initiateTxSize:250,gasLimit:1e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:8,displayed:4},blockchain:"tezos"},USDT_XTZ:{contracts:{mainnet:{address:"KT1Ays1Chwx3ArnHGoQXchUgDsvKe9JboUjj",tokenAddress:"KT1XnTn74bUtxHfDtBmm2bGZAQfhPbvKWR8o",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},testnet:{address:"KT1HHjNxi3okxxGJT1SPPhpcs3gMQt8hqixY",tokenAddress:"KT1BWvRQnVVowZZLGkct9A7sdj5YEe8CdUhR",redeemTxSize:2e4,initiateTxSize:2e4,gasLimit:4e5},entrypoints:{default:{prim:"or",args:[{prim:"or",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"pair",args:[{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]}]},{prim:"pair",args:[{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}],annots:["%initiate"]},{prim:"bytes",annots:["%redeem"]}]},{prim:"bytes",annots:["%refund"]}]},refund:{prim:"bytes"},redeem:{prim:"bytes"},initiate:{prim:"pair",args:[{prim:"pair",args:[{prim:"pair",args:[{prim:"bytes",annots:["%hashedSecret"]},{prim:"address",annots:["%participant"]}]},{prim:"nat",annots:["%payoffAmount"]},{prim:"timestamp",annots:["%refundTime"]}]},{prim:"pair",args:[{prim:"address",annots:["%tokenAddress"]},{prim:"nat",annots:["%tokenId"]}]},{prim:"nat",annots:["%totalAmount"]}]}}},decimals:{original:6,displayed:4},blockchain:"tezos"}}};var ge=class{constructor(e,t,r){i(this,"_network");i(this,"_baseUrl");i(this,"_authToken");i(this,"_authorizationManager");this._network=e,this._baseUrl=t,this._authToken=r}static create(e){return new ge(e=="mainnet"?"mainnet":"testnet",d.api[e].baseUrl)}setAuthorizationManager(e){this._authorizationManager=e}getLocalAuthToken(e){var r;let t=(r=this._authorizationManager)==null?void 0:r.getAuthToken(e);return t==null?void 0:t.value}setAuthToken(e){this._authToken=e}async makeRequest(e,t,r=!1,o,s){let a=new URL(t,this._baseUrl);o!==void 0&&Object.keys(o).forEach(u=>a.searchParams.append(u,o[u]));let c={};if(r){let u=typeof r=="string"?this.getLocalAuthToken(r):this._authToken;if(!u)throw new Error("Auth token is undefined");c.Authorization=`Bearer ${u}`}let m;e==="post"&&s!==void 0&&(m=JSON.stringify(s),c["Content-Type"]="application/json");let l=await fetch(a.toString(),{method:e,headers:c,body:m});if(l.ok)return l.json();{let u=await l.text();throw Error(u)}}async getAuthToken(e){return this.makeRequest("post","/v1/Token",!1,{},e)}async getSymbols(){return this.makeRequest("get","/v1/Symbols",!1)}async getQuotes(e){let t=e!==void 0&&e.length>0?e.join(","):"All";return this.makeRequest("get","/v1/MarketData/quotes",!1,{symbols:t})}async getOrderBook(e){return this.makeRequest("get","/v1/MarketData/book",!1,{symbol:e})}async addOrder(e){var s;let[t,r]=this.splitSymbol(e.symbol).map(a=>this.getCurrencyConfig(a)),o=e;return o.requisites=f({baseCurrencyContract:t.contractAddress,quoteCurrencyContract:r.contractAddress},o.requisites),this.makeRequest("post","/v1/Orders",((s=e.requisites)==null?void 0:s.receivingAddress)||!0,{},o).then(a=>a.orderId)}async getOrders(e,t){return this.makeRequest("get","/v1/Orders",e||!0,f({},t))}async getOrder(e,t){return this.makeRequest("get",`/v1/Orders/${e}`,t||!0)}async cancelOrder(e,t,r,o){return this.makeRequest("delete",`/v1/Orders/${e}`,o||!0,{symbol:t,side:r}).then(s=>s.result)}async addSwapRequisites(e,t){return this.makeRequest("post",`/v1/Swaps/${e}/requisites`,(t==null?void 0:t.receivingAddress)||!0,{},t).then(r=>r.result)}async getSwaps(e,t){return this.makeRequest("get","/v1/Swaps",e||!0,f({},t))}async getSwap(e,t){return this.makeRequest("get",`/v1/Swaps/${e}`,t||!0)}getOrderPreview(e,t,r,o){let s=e.entries.filter(m=>m.side==t?!1:(()=>{switch(t+o){case"BuySend":case"SellReceive":return r/m.price;default:return r}})()<=Math.max(...m.qtyProfile)).map(m=>m.price);if(s.length==0)throw new Error(`No matching order found (${o} ${r} / ${t})`);let a=t=="Buy"?Math.min(...s):Math.max(...s),c=()=>{switch(t+o){case"BuySend":case"SellReceive":return r/a;default:return r*a}};return{price:a,amountSent:o=="Send"?r:c(),amountReceived:o=="Receive"?r:c()}}splitSymbol(e){let[t,r]=e.split("/",2);if(!t||!r)throw new Error("Symbol is invalid");return[t,r]}getCurrencyConfig(e){let t=Object.entries(d.currencies).find(([r,o])=>r==e);if(t==null)throw new Error(`No matching config section for ${e}`);return{blockchain:t[1].blockchain,decimals:t[1].decimals.original,displayDecimals:t[1].decimals.displayed,contractAddress:t[1].contracts[this._network].address,tokenAddress:t[1].contracts[this._network].tokenAddress}}formatAmount(e,t){let r=this.getCurrencyConfig(t);return parseFloat(typeof e=="string"?parseFloat(e).toFixed(r.displayDecimals):e.toFixed(r.displayDecimals))}getOrderSide(e,t,r){let[o,s]=this.splitSymbol(e);if(o===t&&s===r)return"Sell";if(s===t&&o===r)return"Buy";throw new Error(`Mismatch ${t} => ${r} (${e})`)}getMaxOrderSize(e,t){return Math.max(...e.entries.filter(r=>r.side!=t).map(r=>Math.max(...r.qtyProfile)))}};import tr from"elliptic";import rr from"web3";var I=class{},B=n=>Math.round(new Date(n).getTime()/1e3),ye=()=>Math.round(Date.now()/1e3);var fe=class extends I{constructor(t,r,o,s,a){super();i(this,"_web3");i(this,"_contract");i(this,"_timeBetweenBlocks");i(this,"_functions");i(this,"_gasLimit");this._web3=t,this._contract=new t.eth.Contract(r,o),this._timeBetweenBlocks=s,this._gasLimit=a,this._functions=new Map,r.forEach(c=>{c.type==="function"&&this._functions.set(c.name,{types:c.inputs,signature:t.eth.abi.encodeFunctionSignature(c)})})}static async create(t,r){let o=d.blockchains.ethereum.rpc[t];r!==void 0&&(o.rpc=r);let s=new rr(o.rpc),a=await s.eth.getChainId();if(o.chainID!==a)throw new Error(`Wrong chain ID: expected ${o.chainID}, actual ${a}`);return new fe(s,d.currencies.ETH.contracts.abi,d.currencies.ETH.contracts[t].address,o.blockTime,d.currencies.ETH.contracts[t].gasLimit)}getAuthMessage(t,r){let o=Date.now();return{message:t,timestamp:o,msgToSign:t+o.toString(),algorithm:"Keccak256WithEcdsa:Geth2940"}}buildInitiateTransaction(t){if(t.refundTimestamp<ye())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);return{data:this._contract.methods.initiate("0x"+t.secretHash,t.receivingAddress,t.refundTimestamp,t.rewardForRedeem).encodeABI(),contractAddr:this._contract.options.address,amount:t.netAmount+t.rewardForRedeem}}buildRedeemTransaction(t,r){return{data:this._contract.methods.redeem(r,t).encodeABI(),contractAddr:this._contract.options.address}}buildRefundTransaction(t){return{data:this._contract.methods.refund(t).encodeABI(),contractAddr:this._contract.options.address}}buildAddTransaction(t,r){return{data:this._contract.methods.add(t).encodeABI(),contractAddr:this._contract.options.address,amount:r}}buildActivateTransaction(t){return{data:this._contract.methods.activate(t).encodeABI(),contractAddr:this._contract.options.address}}parseInitiateParameters(t){let r=this._functions.get("initiate");if(!t.input.startsWith(r.signature))throw new Error(`Unexpected method signature: ${t.input}`);let o=this._web3.eth.abi.decodeParameters(r.types,t.input.slice(r.signature.length));return{secretHash:o._hashedSecret.slice(2),receivingAddress:o._participant,refundTimestamp:parseInt(o._refundTimestamp),rewardForRedeem:parseInt(this._web3.utils.toBN(o._payoff).toString()),netAmount:parseInt(this._web3.utils.toBN(t.value).sub(this._web3.utils.toBN(o._payoff)).toString())}}async validateInitiateTransaction(t,r,o,s,a,c,m,l=2){let u=a-c,g=await this._web3.eth.getTransaction(r);try{if(g===void 0)throw new Error(`Failed to retrieve transaction: ${r}`);if(g.to!==this._contract.options.address)throw new Error(`Wrong contract address: ${g.to}`);let y=this.parseInitiateParameters(g);if(y.secretHash!==o)throw new Error(`Secret hash: expect ${o}, actual ${y.secretHash}`);if(y.receivingAddress.toLowerCase()!==s.toLowerCase())throw new Error(`Receiving address: expect ${s}, actual ${y.receivingAddress}`);if(y.netAmount!==u)throw new Error(`Net amount: expect ${u}, actual ${y.netAmount}`);if(y.refundTimestamp<m)throw new Error(`Refund timestamp: minimum ${m}, actual ${y.refundTimestamp}`)}catch(y){return{status:"Invalid",message:y.message,confirmations:0,nextBlockETA:0}}let T=await this._web3.eth.getBlock("latest"),N=T.number-(g.blockNumber||T.number),z={status:g.blockNumber!==void 0?"Included":"Pending",confirmations:N,nextBlockETA:parseInt(T.timestamp.toString())+this._timeBetweenBlocks};return N>=l&&(z.status="Confirmed"),z}hexSlice(t,r,o){return"0x"+o.slice(t*2+2,r*2+2)}getVRS(t){let r=[this.hexSlice(64,(t.length-2)/2,t),this.hexSlice(0,32,t),this.hexSlice(32,64,t)];return{v:parseInt(r[0].slice(2),16),r:r[1].slice(2),s:r[2].slice(2)}}recoverPublicKey(t,r){let o=this._web3.eth.accounts.hashMessage(t),s=this.getVRS(r),c=new tr.ec("secp256k1").recoverPubKey(Buffer.from(o.slice(2),"hex"),s,s.v<2?s.v:1-s.v%2);return"0x"+c.encode("hex",!1)}encodePublicKey(t){return t.startsWith("0x")?t.slice(2):t}encodeSignature(t){let r=this.getVRS(t);return r.r.padStart(64,"0")+r.s.padStart(64,"0")}async estimateInitiateFees(t){let r={receivingAddress:"0x0000000000000000000000000000000000000000",secretHash:"0000000000000000000000000000000000000000000000000000000000000000",refundTimestamp:2147483647,rewardForRedeem:0,netAmount:0},o=this.buildInitiateTransaction(r),s=await this._web3.eth.getGasPrice(),a=await this._web3.eth.estimateGas({from:t,to:o.contractAddr,data:o.data,value:o.amount});return parseInt(s)*a}async estimateRedeemFees(t){let r=await this._web3.eth.getGasPrice(),o=parseInt(r)*this._gasLimit;return{totalCost:o,rewardForRedeem:2*o}}isValidAddress(t){return this._web3.utils.isAddress(t)}};import{ParameterSchema as nr}from"@taquito/michelson-encoder";import{OpKind as or}from"@taquito/rpc";import{TezosToolkit as ir}from"@taquito/taquito";import{b58cdecode as Me,prefix as xe,validateAddress as sr,ValidationResult as ar}from"@taquito/utils";var cr=n=>new Date(n*1e3).toISOString().slice(0,-5)+"Z",b=class extends I{constructor(t,r,o,s,a,c,m,l,u,g,T){super();i(this,"_tezos");i(this,"_contractAddress");i(this,"_timeBetweenBlocks");i(this,"_entrypoints");i(this,"_gasLimit");i(this,"_minimalFees");i(this,"_minimalNanotezPerGasUnit");i(this,"_minimalNanotezPerByte");i(this,"_costPerByte");i(this,"_redeemTxSize");i(this,"_initiateTxSize");this._tezos=t,this._contractAddress=o,this._timeBetweenBlocks=s,this._gasLimit=a,this._minimalFees=c,this._minimalNanotezPerGasUnit=m,this._minimalNanotezPerByte=l,this._costPerByte=u,this._redeemTxSize=g,this._initiateTxSize=T,this._entrypoints=new Map(Object.entries(r).map(([N,z])=>[N,new nr(z)]))}static async create(t,r="XTZ",o){let s=d.blockchains.tezos.rpc[t];o!==void 0&&(s.rpc=o);let a=new ir(s.rpc),c=await a.rpc.getChainId();if(s.chainID!==c.toString())throw new Error(`Wrong chain ID: expected ${s.chainID}, actual ${c}`);return new b(a,d.currencies[r].contracts.entrypoints,d.currencies[r].contracts[t].address,d.blockchains.tezos.rpc[t].blockTime,d.currencies[r].contracts[t].gasLimit,d.blockchains.tezos.rpc[t].minimalFees,d.blockchains.tezos.rpc[t].minimalNanotezPerGasUnit,d.blockchains.tezos.rpc[t].minimalNanotezPerByte,d.blockchains.tezos.rpc[t].costPerByte,d.currencies[r].contracts[t].redeemTxSize,d.currencies[r].contracts[t].initiateTxSize)}getTezosAlgorithm(t){switch(t){case"tz1":return"Ed25519:Blake2b";case"tz2":return"Blake2bWithEcdsa:Secp256k1";case"tz3":return"Blake2bWithEcdsa:Secp256r1";default:throw new Error(`Unexpected address prefix: ${t}`)}}getAuthMessage(t,r){let o=Date.now();return{message:t,timestamp:o,msgToSign:t+o.toString(),algorithm:this.getTezosAlgorithm(r.slice(0,3))}}buildInitiateTransaction(t){var o;if(t.refundTimestamp<ye())throw new Error(`Swap timestamp is in the past: ${t.refundTimestamp}`);let r=(o=this._entrypoints.get("initiate"))==null?void 0:o.Encode(t.receivingAddress,t.secretHash,cr(t.refundTimestamp),t.rewardForRedeem);return{data:{entrypoint:"initiate",value:r},contractAddr:this._contractAddress,amount:t.netAmount+t.rewardForRedeem}}buildRedeemTransaction(t,r=""){var o;return{data:{entrypoint:"redeem",value:(o=this._entrypoints.get("redeem"))==null?void 0:o.Encode(t)},contractAddr:this._contractAddress}}buildRefundTransaction(t){var r;return{data:{entrypoint:"refund",value:(r=this._entrypoints.get("refund"))==null?void 0:r.Encode(t)},contractAddr:this._contractAddress}}buildAddTransaction(t,r){var o;return{amount:r,data:{entrypoint:"add",value:(o=this._entrypoints.get("add"))==null?void 0:o.Encode(t)},contractAddr:this._contractAddress}}getBlockDetails(t){return{level:t.metadata.level_info.level,timestamp:B(t.header.timestamp)}}parseInitiateParameters(t){var s;if(t.parameters===void 0)throw new Error("Parameters are undefined");let r=(s=this._entrypoints.get(t.parameters.entrypoint))==null?void 0:s.Execute(t.parameters.value);if(r===void 0)throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`);let o=(()=>{switch(t.parameters.entrypoint){case"initiate":return r;case"fund":case"default":return r.initiate;default:throw new Error(`Unexpected entrypoint: ${t.parameters.entrypoint}`)}})();return{secretHash:o.settings.hashed_secret,receivingAddress:o.participant,refundTimestamp:B(o.settings.refund_time),netAmount:parseInt(t.amount)-parseInt(o.settings.payoff),rewardForRedeem:parseInt(o.settings.payoff)}}findContractCall(t,r){var a;let o=(a=t.operations[3])==null?void 0:a.find(c=>c.hash==r);if(o===void 0)throw new Error(`Operation not found: ${r} @ ${t.hash}`);let s=o.contents.filter(c=>c.kind=="transaction"&&c.destination==this._contractAddress);if(s.length===0)throw new Error("Unsupported contract version is used");return s}async validateInitiateTransaction(t,r,o,s,a,c,m,l=2){let u=a-c,g=await this._tezos.rpc.getBlock({block:t.toString()});try{if(this.findContractCall(g,r).find(ee=>{let A=this.parseInitiateParameters(ee);return A.secretHash!==o?(console.log(`[${ee.counter}] Secret hash: expect ${o}, actual ${A.secretHash}`),!1):A.receivingAddress.toLowerCase()!==s.toLowerCase()?(console.log(`[${ee.counter}] Receiving address: expect ${s}, actual ${A.receivingAddress}`),!1):A.netAmount!==u?(console.log(`[${ee.counter}] Net amount: expect ${u}, actual ${A.netAmount}`),!1):A.refundTimestamp<m?(console.log(`[${ee.counter}] Refund timestamp: minimum ${m}, actual ${A.refundTimestamp}`),!1):!0},this)===void 0)throw new Error(`Initiate transaction that satisfies the expected criteria is not found in ${r} contents`)}catch(Ye){return{status:"Invalid",message:Ye.message,confirmations:0,nextBlockETA:0}}let T=this.getBlockDetails(await this._tezos.rpc.getBlock({block:"head"})),N=this.getBlockDetails(g),z=T.level-N.level,y={status:"Included",confirmations:z,nextBlockETA:T.timestamp+this._timeBetweenBlocks};return z>=l&&(y.status="Confirmed"),y}encodePublicKey(t){switch(t.substring(0,2)){case"ed":return Buffer.from(Me(t,xe.edpk)).toString("hex");case"p2":return Buffer.from(Me(t,xe.p2pk)).toString("hex");case"sp":return Buffer.from(Me(t,xe.sppk)).toString("hex");default:throw new Error("Unsupported Public Key Type")}}encodeSignature(t){var o;let r=t.startsWith("sig")?t.substring(0,3):t.substring(0,5);if(Object.prototype.hasOwnProperty.call(xe,r))return Buffer.from(Me(t,(o=Object.getOwnPropertyDescriptor(xe,r))==null?void 0:o.value)).toString("hex");throw new Error("Unsupported Signature Type")}calcFees(t=0,r=0,o=0){return this._minimalFees+this._minimalNanotezPerGasUnit*t+this._minimalNanotezPerByte*o+r*this._costPerByte}async estimateInitiateFees(t){let r={receivingAddress:"tz1Q2prWCrDGFDuGTe7axdt4z9e3QkCqdhmD",secretHash:"169cbd29345af89a0983f28254e71bdd1367890b9876fc8a9ea117c32f6a521b",refundTimestamp:2147483647,rewardForRedeem:0,netAmount:100},o=this.buildInitiateTransaction(r),s=await this._tezos.rpc.getBlockHeader(),a=await this._tezos.rpc.getContract(t),c=await this._tezos.rpc.runOperation({chain_id:s.chain_id,operation:{branch:s.hash,signature:"sigUHx32f9wesZ1n2BWpixXz4AQaZggEtchaQNHYGRCoWNAXx45WGW2ua3apUUUAGMLPwAU41QoaFCzVSL61VaessLg4YbbP",contents:[{amount:"0",counter:(parseInt(a.counter||"0")+1).toString(),destination:this._contractAddress,fee:this.calcFees(104e4,6e4,this._initiateTxSize).toString(),gas_limit:"1040000",kind:or.TRANSACTION,source:t,storage_limit:"60000",parameters:o.data}]}}),m=0,l=0;return c.contents.forEach(u=>{if(u.metadata.operation_result.status!=="applied")throw new Error("Some error was encountered while estimating fees");l+=parseInt(u.metadata.operation_result.consumed_gas||"0"),m+=parseInt(u.metadata.operation_result.paid_storage_size_diff||"0")}),this.calcFees(l,m,this._initiateTxSize)}async estimateRedeemFees(t){let r=this.calcFees(this._gasLimit,0,this._redeemTxSize);return await this._tezos.rpc.getManagerKey(t)===null&&(r+=257*this._costPerByte),{totalCost:r,rewardForRedeem:2*r}}isValidAddress(t){return sr(t)==ar.VALID}};import{TezosToolkit as dr}from"@taquito/taquito";var Se=class extends b{static async create(e,t,r){let o=d.blockchains.tezos.rpc[e];r!==void 0&&(o.rpc=r);let s=new dr(o.rpc),a=await s.rpc.getChainId();if(o.chainID!==a.toString())throw new Error(`Wrong chain ID: expected ${o.chainID}, actual ${a}`);return new Se(s,d.currencies[t].contracts.entrypoints,d.currencies[t].contracts[e].address,d.blockchains.tezos.rpc[e].blockTime,d.currencies[t].contracts[e].gasLimit,d.blockchains.tezos.rpc[e].minimalFees,d.blockchains.tezos.rpc[e].minimalNanotezPerGasUnit,d.blockchains.tezos.rpc[e].minimalNanotezPerByte,d.blockchains.tezos.rpc[e].costPerByte,d.currencies[t].contracts[e].redeemTxSize,d.currencies[t].contracts[e].initiateTxSize)}parseInitiateParameters(e){var o;if(e.parameters===void 0)throw new Error("Parameters are undefined");let t=(o=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:o.Execute(e.parameters.value);if(t===void 0)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=(()=>{switch(e.parameters.entrypoint){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`)}})();return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:B(r.refundTime),netAmount:parseInt(r.totalAmount)-parseInt(r.payoffAmount),rewardForRedeem:parseInt(r.payoffAmount)}}};import{TezosToolkit as mr}from"@taquito/taquito";var we=class extends b{static async create(e,t,r){let o=d.blockchains.tezos.rpc[e];r!==void 0&&(o.rpc=r);let s=new mr(o.rpc),a=await s.rpc.getChainId();if(o.chainID!==a.toString())throw new Error(`Wrong chain ID: expected ${o.chainID}, actual ${a}`);return new we(s,d.currencies[t].contracts.entrypoints,d.currencies[t].contracts[e].address,d.blockchains.tezos.rpc[e].blockTime,d.currencies[t].contracts[e].gasLimit,d.blockchains.tezos.rpc[e].minimalFees,d.blockchains.tezos.rpc[e].minimalNanotezPerGasUnit,d.blockchains.tezos.rpc[e].minimalNanotezPerByte,d.blockchains.tezos.rpc[e].costPerByte,d.currencies[t].contracts[e].redeemTxSize,d.currencies[t].contracts[e].initiateTxSize)}parseInitiateParameters(e){var o;if(!e.parameters)throw new Error("Parameters are undefined");let t=(o=this._entrypoints.get(e.parameters.entrypoint))==null?void 0:o.Execute(e.parameters.value);if(!t)throw new Error(`Unexpected entrypoint: ${e.parameters.entrypoint}`);let r=this.getInitiateParams(e.parameters.entrypoint,t);return{secretHash:r.hashedSecret,receivingAddress:r.participant,refundTimestamp:B(r.refundTime),netAmount:parseInt(r.totalAmount)-parseInt(r.payoffAmount),rewardForRedeem:parseInt(r.payoffAmount)}}getInitiateParams(e,t){switch(e){case"initiate":return t;case"default":return t.initiate;default:throw new Error(`Unexpected entrypoint: ${e}`)}}};export{U as Atomex,ze as AtomexBuilder,pe as AuthTokenSource,k as AuthorizationManager,D as DefaultSerializedAuthTokenMapper,oe as ImportantDataReceivingMode,Y as InMemoryAuthorizationManagerStore,Te as InMemoryCurrenciesProvider,Ee as InMemoryTezosSigner,R as LocalStorageAuthorizationManagerStore,X as MixedApiAtomexClient,M as RestAtomexClient,q as SignersManager,se as WalletTezosSigner,F as Web3EthereumSigner,_ as WebSocketAtomexClient,w as atomexUtils,C as converters,Xe as legacy,Ne as prepareTimeoutDuration,ne as textUtils,Pr as wait};
//# sourceMappingURL=index.js.map
